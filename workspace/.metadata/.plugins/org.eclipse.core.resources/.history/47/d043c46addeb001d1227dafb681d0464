<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:02 IST 2006 -->
<TITLE>
SnmpAPI (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpAPI (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpACM.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpBits.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpAPI.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpAPI</H2>
<PRE>
java.lang.Object
  |
  +--java.lang.Thread
        |
        +--<B>com.adventnet.snmp.snmp2.SnmpAPI</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.lang.Runnable, java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpAPI</B><DT>extends java.lang.Thread<DT>implements java.io.Serializable</DL>

<P>
<p>
 The SnmpAPI class is a root class for AdventNet SNMP API. This class extends
 "java.lang.Thread". Any network management application written using
 AdventNet SNMP API, should instantiate this class. 
 <p>
 The various vital informations and methods that this class contains are
 <br>
 1. It contains the list of all SnmpSessions which are opened with the help
 of this SnmpAPI instance. 
 <br>
 2. It contains various public constants for the different SNMP versions,
 SNMP operations, SNMP variables, SNMP error values, SNMP exception values,
 SNMP table's row status values and the different access constants for these
 SNMP variables.
 <br>
 3. It contains a SnmpGroup object which maintains the various group counters
 for this SNMP entity.
 
 <br>
 4. It contains a list of all SecurityProviders that are installed. By
 default the USM (User based Security Model) is registered. This corresponds
 to the "usmUserTable" of the "SNMP-USER-BASED-SM-MIB" mib.
 <br>
 5. It contains a list of all Access Control Providers that are added by
 users. By default the View based Access Control Model ( VACM ) is
 registered. These corresponds to the "vacmContextTable",
 "vacmSecurityToGroupTable", "vacmAccessTable" and "vacmViewTreeFamilyTable"
 of the "SNMP-VIEW-BASED-ACM-MIB" mib.
 <br>
 6. It contains the SnmpEngineTable which cotains the engine information of
 various SNMPv3 engines. This table the engineName, engineID, engineTime and
 engineBoots of the particular SNMP entity.
 <br>
 7. This class holds the snmpEngineID, snmpEngineBoots and the snmpEngineTime
 of this SNMP entity.
 <br>
 8. It contains the database connection for the tables engine table, usm
 table and vacm tables.
 <br>
 9. It also provides methods which support persistency of the SecurityModel
 specific information in the form of serialize() and deSerialized() methods.
 The security configurations can be serialized so that they could be restored
 when the SNMPv3 entity is restarted. The SecurityModelTable implementation
 has to implement the serialize and deSerialize methods. In order to
 store/restore the configuration information, the API user has to set the
 file name using the setSerializeFileName method so that the
 serialize/deSerialize methods use this file for their operation.
  
 <p>
 The various activities that this thread performs are
 <br>
 1. Monitors each and every request for their timeouts.
 <br>
 2. Responsible for re-transmitting a request in case of a "retry".
 <br>
 3. Removes the received packets from the queue, when the count exceeds a
 threshold value.
  
 <p>
 To use the low-level API, instantiate an SnmpAPI. From there, you can create
 SNMP sessions, and perform SNMP operations. You can create multiple SnmpAPI
 instances, though there is little reason to do so for most applications.



 <p>
 <br>&nbsp;
 <br>&nbsp;
 <br>&nbsp;
 <br>
 
 The following table gives the values for the command types available in
 SNMP.
 <p>

 <table BORDER COLS=3 WIDTH="50%" NOSAVE >
 <tr BGCOLOR="#33CCFF" NOSAVE>
 <td><b>SNMP command.</b></td>
 <td><b>Value in decimal as a byte.</b></td>
 <td NOSAVE><b>Value in Hex.</b></td>
 </tr>

 <tr>
 <td>GET_REQ_MSG</td>
 <td>-96</td>
 <td>a0</td>
 </tr>

 <tr>
 <td>GETNEXT_REQ_MSG</td>
 <td>-95</td>
 <td>a1</td>
 </tr>

 <tr>
 <td>GET_RSP_MSG</td>

 <td>-94</td>

 <td>a2</td>
 </tr>

 <tr NOSAVE>
 <td NOSAVE>SET_REQ_MSG</td>
 <td>-93</td>
 <td>a3</td>
 </tr>
 
 <tr>
 <td>TRP_REQ_MSG</td>
 <td>-92</td>
 <td>a4</td>
 </tr>

 <tr>
 <td>&nbsp;</td>
 <td>&nbsp;</td>
 <td>&nbsp;</td>
 </tr>
 
 <tr>
 <td>GETBULK_REQ_MSG</td>
 <td>-91</td>
 <td>a5</td>
 </tr>
 
 <tr>
 <td>INFORM_REQ_MSG</td>
 <td>-90</td>
 <td>a6</td>
 </tr>
 
 <tr>
 <td>TRP2_REQ_MSG</td>
 <td>-89</td>
 <td>a7</td>
 </tr>
 </table>
 
 

 <p>
 <br>&nbsp;
 <br>&nbsp;
 <br>&nbsp;
 <br>

 The following table gives the values for SNMP Data types.
 <p>

 <table BORDER COLS=3 WIDTH="50%" NOSAVE >
 <tr BGCOLOR="#33CCFF" NOSAVE>
 <td NOSAVE><b>SNMP Variable</b></td>
 <td><b>Value in decimal as a byte.</b></td>
 <td NOSAVE><b>Value in Hex.</b></td>
 </tr>
 
 <tr>
 <td>STRING</td>
 <td>4</td>
 <td>4</td>
 </tr>
 
 <tr>
 <td>OBJID</td>
 <td>6</td>
 <td>6</td>
 </tr>
 
 <tr>
 <td>INTEGER</td>
 <td>2</td>
 <td>2</td>
 </tr>
 
 <tr>
 <td>NULLOBJ</td>
 <td>5</td>
 <td>5</td>
 </tr>
 
 <tr>
 <td>IPADDRESS</td>
 <td>64</td>
 <td>40</td>
 </tr>
 
 <tr>
 <td>NETWORKADDRESS</td>
 <td>64</td>
 <td>40</td>
 </tr>
 
 <tr>
 <td>COUNTER</td>
 <td>65</td>
 <td>41</td>
 </tr>
 
 <tr>
 <td>GAUGE</td>
 <td>66</td>
 <td>42</td>
 </tr>
 
 <tr>
 <td>UNSIGNED32</td>
 <td>66</td>
 <td>42</td>
 </tr>
 
 <tr>
 <td>TIMETICKS</td>
 <td>67</td>
 <td>43</td>
 </tr>

 <tr>
 <td>OPAQUE</td>
 <td>68</td>
 <td>44</td>
 </tr>
 
 
 <tr>
 <td>&nbsp;</td>
 <td>&nbsp;</td>
 <td>&nbsp;</td>
 </tr>
 
 <tr>
 <td>COUNTER64</td>
 <td>70</td>
 <td>46</td>
 </tr>
 
 <tr>
 <td>UINTEGER32</td>
 <td>66</td>
 <td>42</td>
 </tr>
 </table>
 
 

 <p>
 <br>&nbsp;
 <br>&nbsp;
 <br>&nbsp;
 <br>

 The following table gives the values for the 
 Standard SNMP Errors.
 Only the first 6 errors belong to SNMPv1.
 <p>
 <table BORDER COLS=3 WIDTH="50%" NOSAVE >
 <tr BGCOLOR="#33CCFF" NOSAVE>
 <td NOSAVE><b>SNMP Error Type</b></td>
 
 <td><b>Value in decimal as a byte</b></td>
 
 <td><b>Value in Hex</b></td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_NOERROR</td>
 
 <td>0</td>
 
 <td>00</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_TOOBIG</td>
 
 <td>1</td>
 
 <td>01</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_NOSUCHNAME</td>
 
 <td>2</td>
 
 <td>02</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_BADVALUE</td>
 
 <td>3</td>
 
 <td>03</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_READONLY</td>
 
 <td>4</td>
 
 <td>04</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_GENERR</td>
 
 <td>5</td>
 
 <td>05</td>
 </tr>
 
 <tr>
 <td>&nbsp;</td>
 
 <td>&nbsp;</td>
 
 <td>&nbsp;</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_NOACCESS</td>
 
 <td>6</td>
 
 <td>06</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_WRONGTYPE</td>
 
 <td>7</td>
 
 <td>07</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_WRONGLENGTH</td>
 
 <td>8</td>
 
 <td>08</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_WRONGENCODING</td>
 
 <td>9</td>
 
 <td>09</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_WRONGVALUE</td>
 
 <td>10</td>
 
 <td>0a</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_NOCREATION</td>
 
 <td>11</td>
 
 <td>0b</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_INCONSISTENTVALUE</td>
 
 <td>12</td>
 
 <td>0c</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_RESOURCEUNAVAILABLE&nbsp;</td>
 
 <td>13</td>
 
 <td>0d</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_COMMITFAILED</td>
 
 <td>14</td>
 
 <td>0e</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_UNDOFAILED</td>
 
 <td>15</td>
 
 <td>0f</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_AUTHORIZATIONERROR</td>
 
 <td>16</td>
 
 <td>10</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_NOTWRITABLE</td>
 
 <td>17</td>
 
 <td>11</td>
 </tr>
 
 <tr>
 <td>SNMP_ERR_INCONSISTENTNAME</td>
 
 <td>18</td>
 
 <td>12</td>
 </tr>
 </table>
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html"><CODE>SnmpSession</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpGroup.html"><CODE>SnmpGroup</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><CODE>SecurityModelTable</CODE></A>, 
<A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpAPI">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#ACCESSFORNOTIFY">ACCESSFORNOTIFY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessible-for-notify in Snmpv2.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#ACTIVE">ACTIVE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Active State of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#ANY_SEC_MODEL">ANY_SEC_MODEL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant values for "any" security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#BITSTRING">BITSTRING</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMPv2 protocol.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#COUNTER">COUNTER</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#COUNTER64">COUNTER64</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#CREATE_AND_GO">CREATE_AND_GO</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The createAndGo state of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#CREATE_AND_WAIT">CREATE_AND_WAIT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The createAndWait state of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#CRITICAL">CRITICAL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant for critical debug messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#debugLevel">debugLevel</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variable having debugLevel , by defaullt FATAL.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#DESTROY">DESTROY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Destroy state of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#ENCODING">ENCODING</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Standard encoding string on which all encoding will be done.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#ENDOFMIBVIEWEXP">ENDOFMIBVIEWEXP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP v2 Null Object Exception Value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#FATAL">FATAL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant for fatal debug messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GAUGE">GAUGE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GET_REQ_MSG">GET_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GET_RSP_MSG">GET_RSP_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP response PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GETBULK_REQ_MSG">GETBULK_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Get Bulk PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GETNEXT_REQ_MSG">GETNEXT_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get next PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#INFORM_REQ_MSG">INFORM_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 INFORM PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#INTEGER">INTEGER</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#IPADDRESS">IPADDRESS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NETWORKADDRESS">NETWORKADDRESS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NOACCESS">NOACCESS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no access for anybody.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NON_CRITICAL">NON_CRITICAL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constant for non-critical debug messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NONVOLATILE">NONVOLATILE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Nonvolatile Storage type of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NOSUCHINSTANCEEXP">NOSUCHINSTANCEEXP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP v2 Null Object Exception Value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NOSUCHOBJECTEXP">NOSUCHOBJECTEXP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP v2 Null Object Exception Value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NOT_IN_SERVICE">NOT_IN_SERVICE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The notInService state of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NOT_READY">NOT_READY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The notReady state of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NSAP">NSAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMPv2 protocol</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#NULLOBJ">NULLOBJ</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#OBJID">OBJID</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#OPAQUE">OPAQUE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#OTHER">OTHER</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Other Storage type of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#PERMANENT">PERMANENT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Permanent Storage type of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#RCREATE">RCREATE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read-create value in Snmpv2.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#READONLY">READONLY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Readonly Storage type of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#REPORT_MSG">REPORT_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Report PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#RONLY">RONLY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read access for everyone.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#RWRITE">RWRITE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add write access for community.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SET_REQ_MSG">SET_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP set request PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_AUTHORIZATIONERROR">SNMP_ERR_AUTHORIZATIONERROR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_BADVALUE">SNMP_ERR_BADVALUE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_COMMITFAILED">SNMP_ERR_COMMITFAILED</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_GENERR">SNMP_ERR_GENERR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_INCONSISTENTNAME">SNMP_ERR_INCONSISTENTNAME</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_INCONSISTENTVALUE">SNMP_ERR_INCONSISTENTVALUE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_NOACCESS">SNMP_ERR_NOACCESS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_NOCREATION">SNMP_ERR_NOCREATION</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_NOERROR">SNMP_ERR_NOERROR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_NOSUCHNAME">SNMP_ERR_NOSUCHNAME</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_NOTWRITABLE">SNMP_ERR_NOTWRITABLE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_READONLY">SNMP_ERR_READONLY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_RESOURCEUNAVAILABLE">SNMP_ERR_RESOURCEUNAVAILABLE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_TOOBIG">SNMP_ERR_TOOBIG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_UNDOFAILED">SNMP_ERR_UNDOFAILED</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_WRONGENCODING">SNMP_ERR_WRONGENCODING</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_WRONGLENGTH">SNMP_ERR_WRONGLENGTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_WRONGTYPE">SNMP_ERR_WRONGTYPE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_ERR_WRONGVALUE">SNMP_ERR_WRONGVALUE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP error value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_PORT">SNMP_PORT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The snmp port value of 161 for UDP.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_TRAP_PORT">SNMP_TRAP_PORT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The trap port value of 162 for UDP.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_VERSION_1">SNMP_VERSION_1</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for setting SNMP Version 1.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_VERSION_2">SNMP_VERSION_2</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for setting SNMP Version 2 (Not supported).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_VERSION_2C">SNMP_VERSION_2C</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for setting SNMP Version 2c.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SNMP_VERSION_3">SNMP_VERSION_3</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for the SNMP Version 3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#Standard_Prefix">Standard_Prefix</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>instead use the setOIDPrefix(SnmpOID oid) and getOIDPrefix()
 methods.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#STRING">STRING</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#TIMETICKS">TIMETICKS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#TRP_REQ_MSG">TRP_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP trap PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#TRP2_REQ_MSG">TRP2_REQ_MSG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Trap PDU type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#UINTEGER32">UINTEGER32</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMP protocol.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#UNSIGNED32">UNSIGNED32</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SNMP Type Constants.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#VOLATILE">VOLATILE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Volatile Storage type of the Tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#WONLY">WONLY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;only write access for community.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_java.lang.Thread"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class java.lang.Thread</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>MAX_PRIORITY, MIN_PRIORITY, NORM_PRIORITY</CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SnmpAPI()">SnmpAPI</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new SnmpAPI instance and initialises the authoritative
 snmpEngineID, snmpEngineBoots, snmpEngineTime and the providers,
 SecurityProvider and ACMProvider.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#SnmpAPI(boolean)">SnmpAPI</A></B>(boolean&nbsp;debug)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new SnmpAPI instance and initialises the authoritative
 snmpEngineID, snmpEngineBoots, snmpEngineTime and the providers,
 SecurityProvider and ACMProvider.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#checkResponses()">checkResponses</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks each session to see if there is any outstanding response.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#checkTimeouts()">checkTimeouts</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks each session to see if there is any outstanding Time-outs</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#close()">close</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stops the API thread which monitors the session for time-outs
 and retries.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#compare(int[], int[])">compare</A></B>(int[]&nbsp;a,
        int[]&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An int array comparison routine.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#debugPrintHigh(java.lang.Object)">debugPrintHigh</A></B>(java.lang.Object&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;debugPrint method for FATAL messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#debugPrintLow(java.lang.Object)">debugPrintLow</A></B>(java.lang.Object&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;debugPrint method for NON_CRITICAL messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#debugPrintMedium(java.lang.Object)">debugPrintMedium</A></B>(java.lang.Object&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;debugPrint method for CRITICAL messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#deSerialize()">deSerialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This deSerializes the SNMPV3 Security tables from the 
 file specified by the setSerializeFileName method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#deSerializeEngineBoots()">deSerializeEngineBoots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This deSerializes the engine boots into the  
 file specified by the setSerializeFileName method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#genMsgID()">genMsgID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This number is unique number that is generated for this JVM.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#genReqID()">genReqID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This number is unique number that is generated for this JVM.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/ACMProvider.html">ACMProvider</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getACMProvider()">getACMProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Access Control Provider maintained bu this SnmpAPI.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getCharacterEncoding()">getCharacterEncoding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the Character encoding of the String values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getCommunityTable()">getCommunityTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>use the following instead
 <br>
 getSecurityProvider().getTable(1); // where 1 stands for v1 security model.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.sql.Connection</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getConnection()">getConnection</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the database connection instance corresponding to this 
 SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getDebug()">getDebug</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether debugging output is being generated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#GetEngineBootsSerializeFileName()">GetEngineBootsSerializeFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the fileName into which the SNMPv3 engineBoots are to be stored
 so that they are persistant.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getMajorVersion()">getMajorVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the major version of this release of SNMP Library.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getMinorVersion()">getMinorVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the minor version of this release of SNMP Library.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyFilterProfileTable.html">SnmpNotifyFilterProfileTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getNotifyFilterProfileTable()">getNotifyFilterProfileTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpNotifyFilterProfileTable that is associated with this
 SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyFilterTable.html">SnmpNotifyFilterTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getNotifyFilterTable()">getNotifyFilterTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpNotifyFilterTable that is associated with this SnmpAPI
 instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyTable.html">SnmpNotifyTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getNotifyTable()">getNotifyTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpNotifyTable that is associated with this SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getOIDPrefix()">getOIDPrefix</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the OID prefix that is
 set before.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getPatchVersion()">getPatchVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the patch version of this release of SNMP Library.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html">SASClient</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSASClient()">getSASClient</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the SASClient instance which has been created at last through
 the SnmpSession class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSecurityProvider()">getSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SecurityProvider maintained by this SnmpAPI.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSerializeFileName()">getSerializeFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the fileName into which the SNMPv3 configuration tables are to 
 be serialized.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSessionList()">getSessionList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the List of SNMP sessions managed under this SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html">SnmpEngineTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSnmpEngine()">getSnmpEngine</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpEngineTable reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSnmpEngineBoots()">getSnmpEngineBoots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpEngineBoots (number of times this SNMP engine 
 has booted of this SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSnmpEngineID()">getSnmpEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the authoritative SnmpEngineID associated with this 
 SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSnmpEngineTime()">getSnmpEngineTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpEngineTime.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpGroup.html">SnmpGroup</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getSnmpGroup(java.lang.String, int)">getSnmpGroup</A></B>(java.lang.String&nbsp;local_address,
             int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpGroup Object corresponding to the SnmpSession's 
 local_addrs and local_port.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.sql.Statement</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getStatement()">getStatement</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the Statement instance corresponding to this SnmpAPI instance</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpTargetAddrExtTable.html">SnmpTargetAddrExtTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getTargetAddrExtTable()">getTargetAddrExtTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpTargetAddrExtTable corresponding to this SnmpAPI.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;SnmpTargetAddrTable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getTargetAddrTable()">getTargetAddrTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpTargetAddrTable corresponding to this SnmpAPI.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;SnmpTargetParamsTable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getTargetParamsTable()">getTargetParamsTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpTargetParamsTable corresponding to this SnmpAPI.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getTimeWindow()">getTimeWindow</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the time window in which messages are accepted by this 
 SNMP engine.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getUSMTable()">getUSMTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>use the following instead.
 <pre> SnmpApi.getSecurityProvider().getTable(USM_SECURITY_MODEL); // where USM_SECURITY_MODEL = 3</pre></I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getV3ConfigTable()">getV3ConfigTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the table name that was configured for V3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getVersionString()">getVersionString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string describing this version of SNMP Library.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#initACMProvider()">initACMProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method initializes the Access Control Provider by reading from the
 file acmProvider.config .</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A></B>(java.lang.String&nbsp;driverName,
               java.lang.String&nbsp;urlString,
               java.lang.String&nbsp;userName,
               java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method should be invoked to initialize the Jdbc Parameters
 in case of database support.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#initSecurityProvider()">initSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method initializes the SecurityProvider by reading from the
 file securityProvider.confg .</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#isCommunityAuthentication()">isCommunityAuthentication</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Community Authentication flag for this SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#isNotificationFiltering()">isNotificationFiltering</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the notification filtering flag for this SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#isV3DatabaseFlag()">isV3DatabaseFlag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Database flag for this SnmpAPI instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method starts the API thread which monitors the sessions 
 to look for the requests which have timed out and retransmits the 
 pdu if required.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#serialize()">serialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This serializes the SNMPV3 Security tables into the file 
 specified by the setSerializeFileName method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#serializeEngineBoots()">serializeEngineBoots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This serializes the engine boots into the file
 specified by the setSerializeFileName method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A></B>(java.lang.String&nbsp;encoding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Character encoding of the String values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setCommunityAuthentication(boolean)">setCommunityAuthentication</A></B>(boolean&nbsp;commAuthFlag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables/Disables the community authentication flag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setDebug(boolean)">setDebug</A></B>(boolean&nbsp;debug)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether debugging output should be generated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setDebugLevel(int)">setDebugLevel</A></B>(int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets debugLevel FATAL or CRITICAL or NON_CRITICAL.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setEngineBootsSerializeFileName(java.lang.String)">setEngineBootsSerializeFileName</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the fileName into which the SNMPv3 engineBoots are to be stored
 so that they are persistant.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setNotificationFiltering(boolean)">setNotificationFiltering</A></B>(boolean&nbsp;notifyFilterFlag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables/Disables the notification filtering.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setOIDPrefix(com.adventnet.snmp.snmp2.SnmpOID)">setOIDPrefix</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is added to any Object ID that does not begin 
 with a '.'.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setSerializeFileName(java.lang.String)">setSerializeFileName</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the fileName into which the SNMPv3 configuration tables are to 
 be serialized.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setSnmpEngineBoots(int)">setSnmpEngineBoots</A></B>(int&nbsp;boots)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SnmpEngineBoots (number of times this SNMP engine 
 has booted of this SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setSnmpEngineID(byte[])">setSnmpEngineID</A></B>(byte[]&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the authoritative SnmpEngineID for this SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setSnmpEngineTime(int)">setSnmpEngineTime</A></B>(int&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SnmpEngineTime, the time in seconds after this SNMP engine 
 has booted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setTimeWindow(int)">setTimeWindow</A></B>(int&nbsp;win)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the time window in which messages should be accepted by this
 SNMP engine</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setupStdOutErr()">setupStdOutErr</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>please use the logging framework instead.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setupStdOutErr(java.lang.String)">setupStdOutErr</A></B>(java.lang.String&nbsp;dirStr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>please use the logging framework instead.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A></B>(java.lang.String&nbsp;tableName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the configured tableName specified in the case of V3Database.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A></B>(boolean&nbsp;dBaseFlag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Database flag in the case of V3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#start()">start</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Thread"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Thread</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>activeCount, checkAccess, countStackFrames, currentThread, destroy, dumpStack, enumerate, getContextClassLoader, getName, getPriority, getThreadGroup, holdsLock, interrupt, interrupted, isAlive, isDaemon, isInterrupted, join, join, join, resume, setContextClassLoader, setDaemon, setName, setPriority, sleep, sleep, stop, stop, suspend, toString, yield</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="OTHER"><!-- --></A><H3>
OTHER</H3>
<PRE>
public static final int <B>OTHER</B></PRE>
<DL>
<DD>The Other Storage type of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.OTHER">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VOLATILE"><!-- --></A><H3>
VOLATILE</H3>
<PRE>
public static final int <B>VOLATILE</B></PRE>
<DL>
<DD>The Volatile Storage type of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.VOLATILE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NONVOLATILE"><!-- --></A><H3>
NONVOLATILE</H3>
<PRE>
public static final int <B>NONVOLATILE</B></PRE>
<DL>
<DD>The Nonvolatile Storage type of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NONVOLATILE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="PERMANENT"><!-- --></A><H3>
PERMANENT</H3>
<PRE>
public static final int <B>PERMANENT</B></PRE>
<DL>
<DD>The Permanent Storage type of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.PERMANENT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="READONLY"><!-- --></A><H3>
READONLY</H3>
<PRE>
public static final int <B>READONLY</B></PRE>
<DL>
<DD>The Readonly Storage type of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.READONLY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ENCODING"><!-- --></A><H3>
ENCODING</H3>
<PRE>
public static java.lang.String <B>ENCODING</B></PRE>
<DL>
<DD>The Standard encoding string on which all encoding will be done.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="SNMP_PORT"><!-- --></A><H3>
SNMP_PORT</H3>
<PRE>
public int <B>SNMP_PORT</B></PRE>
<DL>
<DD>The snmp port value of 161 for UDP.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="SNMP_TRAP_PORT"><!-- --></A><H3>
SNMP_TRAP_PORT</H3>
<PRE>
public int <B>SNMP_TRAP_PORT</B></PRE>
<DL>
<DD>The trap port value of 162 for UDP.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="SNMP_VERSION_1"><!-- --></A><H3>
SNMP_VERSION_1</H3>
<PRE>
public static final int <B>SNMP_VERSION_1</B></PRE>
<DL>
<DD>Constant for setting SNMP Version 1.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_VERSION_1">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_VERSION_2C"><!-- --></A><H3>
SNMP_VERSION_2C</H3>
<PRE>
public static final int <B>SNMP_VERSION_2C</B></PRE>
<DL>
<DD>Constant for setting SNMP Version 2c.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_VERSION_2C">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_VERSION_2"><!-- --></A><H3>
SNMP_VERSION_2</H3>
<PRE>
public static final int <B>SNMP_VERSION_2</B></PRE>
<DL>
<DD>Constant for setting SNMP Version 2 (Not supported).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_VERSION_2">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_VERSION_3"><!-- --></A><H3>
SNMP_VERSION_3</H3>
<PRE>
public static final int <B>SNMP_VERSION_3</B></PRE>
<DL>
<DD>Constant for the SNMP Version 3.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_VERSION_3">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="GET_REQ_MSG"><!-- --></A><H3>
GET_REQ_MSG</H3>
<PRE>
public static final byte <B>GET_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP get PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.GET_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="GETNEXT_REQ_MSG"><!-- --></A><H3>
GETNEXT_REQ_MSG</H3>
<PRE>
public static final byte <B>GETNEXT_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP get next PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.GETNEXT_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="GET_RSP_MSG"><!-- --></A><H3>
GET_RSP_MSG</H3>
<PRE>
public static final byte <B>GET_RSP_MSG</B></PRE>
<DL>
<DD>Constant for SNMP response PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.GET_RSP_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SET_REQ_MSG"><!-- --></A><H3>
SET_REQ_MSG</H3>
<PRE>
public static final byte <B>SET_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP set request PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SET_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="TRP_REQ_MSG"><!-- --></A><H3>
TRP_REQ_MSG</H3>
<PRE>
public static final byte <B>TRP_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP trap PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.TRP_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="GETBULK_REQ_MSG"><!-- --></A><H3>
GETBULK_REQ_MSG</H3>
<PRE>
public static final byte <B>GETBULK_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP V2 Get Bulk PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.GETBULK_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="INFORM_REQ_MSG"><!-- --></A><H3>
INFORM_REQ_MSG</H3>
<PRE>
public static final byte <B>INFORM_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP V2 INFORM PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.INFORM_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="TRP2_REQ_MSG"><!-- --></A><H3>
TRP2_REQ_MSG</H3>
<PRE>
public static final byte <B>TRP2_REQ_MSG</B></PRE>
<DL>
<DD>Constant for SNMP V2 Trap PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.TRP2_REQ_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="REPORT_MSG"><!-- --></A><H3>
REPORT_MSG</H3>
<PRE>
public static final byte <B>REPORT_MSG</B></PRE>
<DL>
<DD>Constant for SNMP V2 Report PDU type.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.REPORT_MSG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_NOERROR"><!-- --></A><H3>
SNMP_ERR_NOERROR</H3>
<PRE>
public static final byte <B>SNMP_ERR_NOERROR</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_NOERROR">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_TOOBIG"><!-- --></A><H3>
SNMP_ERR_TOOBIG</H3>
<PRE>
public static final byte <B>SNMP_ERR_TOOBIG</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_TOOBIG">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_NOSUCHNAME"><!-- --></A><H3>
SNMP_ERR_NOSUCHNAME</H3>
<PRE>
public static final byte <B>SNMP_ERR_NOSUCHNAME</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_NOSUCHNAME">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_BADVALUE"><!-- --></A><H3>
SNMP_ERR_BADVALUE</H3>
<PRE>
public static final byte <B>SNMP_ERR_BADVALUE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_BADVALUE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_READONLY"><!-- --></A><H3>
SNMP_ERR_READONLY</H3>
<PRE>
public static final byte <B>SNMP_ERR_READONLY</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_READONLY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_GENERR"><!-- --></A><H3>
SNMP_ERR_GENERR</H3>
<PRE>
public static final byte <B>SNMP_ERR_GENERR</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_GENERR">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_NOACCESS"><!-- --></A><H3>
SNMP_ERR_NOACCESS</H3>
<PRE>
public static final byte <B>SNMP_ERR_NOACCESS</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_NOACCESS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_WRONGTYPE"><!-- --></A><H3>
SNMP_ERR_WRONGTYPE</H3>
<PRE>
public static final byte <B>SNMP_ERR_WRONGTYPE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_WRONGTYPE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_WRONGLENGTH"><!-- --></A><H3>
SNMP_ERR_WRONGLENGTH</H3>
<PRE>
public static final byte <B>SNMP_ERR_WRONGLENGTH</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_WRONGLENGTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_WRONGENCODING"><!-- --></A><H3>
SNMP_ERR_WRONGENCODING</H3>
<PRE>
public static final byte <B>SNMP_ERR_WRONGENCODING</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_WRONGENCODING">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_WRONGVALUE"><!-- --></A><H3>
SNMP_ERR_WRONGVALUE</H3>
<PRE>
public static final byte <B>SNMP_ERR_WRONGVALUE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_WRONGVALUE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_NOCREATION"><!-- --></A><H3>
SNMP_ERR_NOCREATION</H3>
<PRE>
public static final byte <B>SNMP_ERR_NOCREATION</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_NOCREATION">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_INCONSISTENTVALUE"><!-- --></A><H3>
SNMP_ERR_INCONSISTENTVALUE</H3>
<PRE>
public static final byte <B>SNMP_ERR_INCONSISTENTVALUE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_INCONSISTENTVALUE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_RESOURCEUNAVAILABLE"><!-- --></A><H3>
SNMP_ERR_RESOURCEUNAVAILABLE</H3>
<PRE>
public static final byte <B>SNMP_ERR_RESOURCEUNAVAILABLE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_RESOURCEUNAVAILABLE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_COMMITFAILED"><!-- --></A><H3>
SNMP_ERR_COMMITFAILED</H3>
<PRE>
public static final byte <B>SNMP_ERR_COMMITFAILED</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_COMMITFAILED">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_UNDOFAILED"><!-- --></A><H3>
SNMP_ERR_UNDOFAILED</H3>
<PRE>
public static final byte <B>SNMP_ERR_UNDOFAILED</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_UNDOFAILED">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_AUTHORIZATIONERROR"><!-- --></A><H3>
SNMP_ERR_AUTHORIZATIONERROR</H3>
<PRE>
public static final byte <B>SNMP_ERR_AUTHORIZATIONERROR</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_AUTHORIZATIONERROR">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_NOTWRITABLE"><!-- --></A><H3>
SNMP_ERR_NOTWRITABLE</H3>
<PRE>
public static final byte <B>SNMP_ERR_NOTWRITABLE</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_NOTWRITABLE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_ERR_INCONSISTENTNAME"><!-- --></A><H3>
SNMP_ERR_INCONSISTENTNAME</H3>
<PRE>
public static final byte <B>SNMP_ERR_INCONSISTENTNAME</B></PRE>
<DL>
<DD>SNMP error value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.SNMP_ERR_INCONSISTENTNAME">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="INTEGER"><!-- --></A><H3>
INTEGER</H3>
<PRE>
public static final byte <B>INTEGER</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.INTEGER">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="STRING"><!-- --></A><H3>
STRING</H3>
<PRE>
public static final byte <B>STRING</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.STRING">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BITSTRING"><!-- --></A><H3>
BITSTRING</H3>
<PRE>
public static final byte <B>BITSTRING</B></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMPv2 protocol.</I>
<P>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.BITSTRING">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="OBJID"><!-- --></A><H3>
OBJID</H3>
<PRE>
public static final byte <B>OBJID</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.OBJID">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NULLOBJ"><!-- --></A><H3>
NULLOBJ</H3>
<PRE>
public static final byte <B>NULLOBJ</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NULLOBJ">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="IPADDRESS"><!-- --></A><H3>
IPADDRESS</H3>
<PRE>
public static final byte <B>IPADDRESS</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.IPADDRESS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NETWORKADDRESS"><!-- --></A><H3>
NETWORKADDRESS</H3>
<PRE>
public static final byte <B>NETWORKADDRESS</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NETWORKADDRESS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="COUNTER"><!-- --></A><H3>
COUNTER</H3>
<PRE>
public static final byte <B>COUNTER</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.COUNTER">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="GAUGE"><!-- --></A><H3>
GAUGE</H3>
<PRE>
public static final byte <B>GAUGE</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.GAUGE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="UNSIGNED32"><!-- --></A><H3>
UNSIGNED32</H3>
<PRE>
public static final byte <B>UNSIGNED32</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.UNSIGNED32">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="TIMETICKS"><!-- --></A><H3>
TIMETICKS</H3>
<PRE>
public static final byte <B>TIMETICKS</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.TIMETICKS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="OPAQUE"><!-- --></A><H3>
OPAQUE</H3>
<PRE>
public static final byte <B>OPAQUE</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.OPAQUE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="UINTEGER32"><!-- --></A><H3>
UINTEGER32</H3>
<PRE>
public static final byte <B>UINTEGER32</B></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMP protocol.</I>
<P>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.UINTEGER32">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NSAP"><!-- --></A><H3>
NSAP</H3>
<PRE>
public static final byte <B>NSAP</B></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>This variable has been deprecated in SNMPv2 protocol</I>
<P>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NSAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="COUNTER64"><!-- --></A><H3>
COUNTER64</H3>
<PRE>
public static final byte <B>COUNTER64</B></PRE>
<DL>
<DD>SNMP Type Constants.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.COUNTER64">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NOSUCHOBJECTEXP"><!-- --></A><H3>
NOSUCHOBJECTEXP</H3>
<PRE>
public static final byte <B>NOSUCHOBJECTEXP</B></PRE>
<DL>
<DD>SNMP v2 Null Object Exception Value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NOSUCHOBJECTEXP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NOSUCHINSTANCEEXP"><!-- --></A><H3>
NOSUCHINSTANCEEXP</H3>
<PRE>
public static final byte <B>NOSUCHINSTANCEEXP</B></PRE>
<DL>
<DD>SNMP v2 Null Object Exception Value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NOSUCHINSTANCEEXP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ENDOFMIBVIEWEXP"><!-- --></A><H3>
ENDOFMIBVIEWEXP</H3>
<PRE>
public static final byte <B>ENDOFMIBVIEWEXP</B></PRE>
<DL>
<DD>SNMP v2 Null Object Exception Value.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.ENDOFMIBVIEWEXP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="RONLY"><!-- --></A><H3>
RONLY</H3>
<PRE>
public static final int <B>RONLY</B></PRE>
<DL>
<DD>read access for everyone.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.RONLY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="WONLY"><!-- --></A><H3>
WONLY</H3>
<PRE>
public static final int <B>WONLY</B></PRE>
<DL>
<DD>only write access for community.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.WONLY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="RWRITE"><!-- --></A><H3>
RWRITE</H3>
<PRE>
public static final int <B>RWRITE</B></PRE>
<DL>
<DD>add write access for community.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.RWRITE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NOACCESS"><!-- --></A><H3>
NOACCESS</H3>
<PRE>
public static final int <B>NOACCESS</B></PRE>
<DL>
<DD>no access for anybody.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NOACCESS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="RCREATE"><!-- --></A><H3>
RCREATE</H3>
<PRE>
public static final int <B>RCREATE</B></PRE>
<DL>
<DD>read-create value in Snmpv2.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.RCREATE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ACCESSFORNOTIFY"><!-- --></A><H3>
ACCESSFORNOTIFY</H3>
<PRE>
public static final int <B>ACCESSFORNOTIFY</B></PRE>
<DL>
<DD>accessible-for-notify in Snmpv2.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.ACCESSFORNOTIFY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="Standard_Prefix"><!-- --></A><H3>
Standard_Prefix</H3>
<PRE>
public static java.lang.String <B>Standard_Prefix</B></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>instead use the setOIDPrefix(SnmpOID oid) and getOIDPrefix()
 methods.</I>
<P>
<DD>This is added to any Object ID string, that does not begin with a '.'.
 Since it is static, the change made in this variable will be 
 reflected in all SnmpAPI instances used by the client application.
 Used primarily when creating an SnmpOID instance.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html"><CODE>SnmpOID</CODE></A></DL>
</DL>
<HR>

<A NAME="ACTIVE"><!-- --></A><H3>
ACTIVE</H3>
<PRE>
public static final int <B>ACTIVE</B></PRE>
<DL>
<DD>The Active State of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.ACTIVE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NOT_IN_SERVICE"><!-- --></A><H3>
NOT_IN_SERVICE</H3>
<PRE>
public static final int <B>NOT_IN_SERVICE</B></PRE>
<DL>
<DD>The notInService state of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NOT_IN_SERVICE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NOT_READY"><!-- --></A><H3>
NOT_READY</H3>
<PRE>
public static final int <B>NOT_READY</B></PRE>
<DL>
<DD>The notReady state of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NOT_READY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CREATE_AND_GO"><!-- --></A><H3>
CREATE_AND_GO</H3>
<PRE>
public static final int <B>CREATE_AND_GO</B></PRE>
<DL>
<DD>The createAndGo state of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.CREATE_AND_GO">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CREATE_AND_WAIT"><!-- --></A><H3>
CREATE_AND_WAIT</H3>
<PRE>
public static final int <B>CREATE_AND_WAIT</B></PRE>
<DL>
<DD>The createAndWait state of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.CREATE_AND_WAIT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="DESTROY"><!-- --></A><H3>
DESTROY</H3>
<PRE>
public static final int <B>DESTROY</B></PRE>
<DL>
<DD>The Destroy state of the Tables.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.DESTROY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ANY_SEC_MODEL"><!-- --></A><H3>
ANY_SEC_MODEL</H3>
<PRE>
public static final int <B>ANY_SEC_MODEL</B></PRE>
<DL>
<DD>Constant values for "any" security model.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.ANY_SEC_MODEL">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="FATAL"><!-- --></A><H3>
FATAL</H3>
<PRE>
public static final int <B>FATAL</B></PRE>
<DL>
<DD>constant for fatal debug messages.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.FATAL">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CRITICAL"><!-- --></A><H3>
CRITICAL</H3>
<PRE>
public static final int <B>CRITICAL</B></PRE>
<DL>
<DD>constant for critical debug messages.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.CRITICAL">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NON_CRITICAL"><!-- --></A><H3>
NON_CRITICAL</H3>
<PRE>
public static final int <B>NON_CRITICAL</B></PRE>
<DL>
<DD>constant for non-critical debug messages.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SnmpAPI.NON_CRITICAL">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="debugLevel"><!-- --></A><H3>
debugLevel</H3>
<PRE>
public static int <B>debugLevel</B></PRE>
<DL>
<DD>variable having debugLevel , by defaullt FATAL.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpAPI()"><!-- --></A><H3>
SnmpAPI</H3>
<PRE>
public <B>SnmpAPI</B>()</PRE>
<DL>
<DD>Creates a new SnmpAPI instance and initialises the authoritative
 snmpEngineID, snmpEngineBoots, snmpEngineTime and the providers,
 SecurityProvider and ACMProvider.
 The SnmpEngineID is initialised to a randorm value of 12 octets
 and the snmpEngineBoots and snmpEngineTime are initialised to
 value 0. The attributes snmpEngineID,
 snmpEngineBoots and snmpEngineTime are useful only for an agent 
 side implementation. These default values can be overriden by the
 respective set methods of these attributes. These three attributes
 are not relevant for a manager side implementation. 
 <P>
 The constructor also instantiates the different SnmpV3 configuration
 tables i.e USMUserTable, SnmpEngineTable, VacmContextTable,
 VacmGroupTable, VacmGroupAccessTable and VacmViewTreeTable. These 
 tables are used to store the different users, SNMPv3 entity and
 the vacm information. The API user need not instantiate these 
 configuration tables and  instead, has to use the methods provided
 in this class to access these tables.
<P>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><CODE>SnmpEngineTable</CODE></A></DL>
<HR>

<A NAME="SnmpAPI(boolean)"><!-- --></A><H3>
SnmpAPI</H3>
<PRE>
public <B>SnmpAPI</B>(boolean&nbsp;debug)</PRE>
<DL>
<DD>Creates a new SnmpAPI instance and initialises the authoritative
 snmpEngineID, snmpEngineBoots, snmpEngineTime and the providers,
 SecurityProvider and ACMProvider. The debug flag will be set to 
 the value passed as parameter.
 The SnmpEngineID is initialised to a randorm value of 12 octets
 and the snmpEngineBoots and snmpEngineTime are initialised to
 value 0. The attributes snmpEngineID,
 snmpEngineBoots and snmpEngineTime are useful only for an agent 
 side implementation. These default values can be overriden by the
 respective set methods of these attributes. These three attributes
 are not relevant for a manager side implementation. 
 <P>
 The constructor also instantiates the different SnmpV3 configuration
 tables i.e USMUserTable, SnmpEngineTable, VacmContextTable,
 VacmGroupTable, VacmGroupAccessTable and VacmViewTreeTable. These 
 tables are used to store the different users, SNMPv3 entity and
 the vacm information. The API user need not instantiate these 
 configuration tables and  instead, has to use the methods provided
 in this class to access these tables.
<P>
<DT><B>Parameters:</B><DD><CODE>debug</CODE> - The debug flag to be set for this SnmpAPI instance.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><CODE>SnmpEngineTable</CODE></A></DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="start()"><!-- --></A><H3>
start</H3>
<PRE>
public void <B>start</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>start</CODE> in class <CODE>java.lang.Thread</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetAddrTable()"><!-- --></A><H3>
getTargetAddrTable</H3>
<PRE>
public SnmpTargetAddrTable <B>getTargetAddrTable</B>()</PRE>
<DL>
<DD>Gets the SnmpTargetAddrTable corresponding to this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCommunityAuthentication(boolean)"><!-- --></A><H3>
setCommunityAuthentication</H3>
<PRE>
public void <B>setCommunityAuthentication</B>(boolean&nbsp;commAuthFlag)</PRE>
<DL>
<DD>Enables/Disables the community authentication flag.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>commAuthFlag</CODE> - The community Authentication flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setNotificationFiltering(boolean)"><!-- --></A><H3>
setNotificationFiltering</H3>
<PRE>
public void <B>setNotificationFiltering</B>(boolean&nbsp;notifyFilterFlag)</PRE>
<DL>
<DD>Enables/Disables the notification filtering.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>notifyFilterFlag</CODE> - The notification filter flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="isCommunityAuthentication()"><!-- --></A><H3>
isCommunityAuthentication</H3>
<PRE>
public boolean <B>isCommunityAuthentication</B>()</PRE>
<DL>
<DD>Gets the Community Authentication flag for this SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isNotificationFiltering()"><!-- --></A><H3>
isNotificationFiltering</H3>
<PRE>
public boolean <B>isNotificationFiltering</B>()</PRE>
<DL>
<DD>Gets the notification filtering flag for this SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNotifyTable()"><!-- --></A><H3>
getNotifyTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyTable.html">SnmpNotifyTable</A> <B>getNotifyTable</B>()</PRE>
<DL>
<DD>Gets the SnmpNotifyTable that is associated with this SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>SnmpNotifyTable associated with this SnmpAPI instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getNotifyFilterTable()"><!-- --></A><H3>
getNotifyFilterTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyFilterTable.html">SnmpNotifyFilterTable</A> <B>getNotifyFilterTable</B>()</PRE>
<DL>
<DD>Gets the SnmpNotifyFilterTable that is associated with this SnmpAPI
 instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>SnmpNotifyFilterTable associated with this SnmpAPI
 instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getNotifyFilterProfileTable()"><!-- --></A><H3>
getNotifyFilterProfileTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNotifyFilterProfileTable.html">SnmpNotifyFilterProfileTable</A> <B>getNotifyFilterProfileTable</B>()</PRE>
<DL>
<DD>Gets the SnmpNotifyFilterProfileTable that is associated with this
 SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>SnmpNotifyFilterProfileTable associated with
 this SnmpAPI instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetParamsTable()"><!-- --></A><H3>
getTargetParamsTable</H3>
<PRE>
public SnmpTargetParamsTable <B>getTargetParamsTable</B>()</PRE>
<DL>
<DD>Gets the SnmpTargetParamsTable corresponding to this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>SnmpTargetParamsTable associated with this SnmpAPI instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getCommunityTable()"><!-- --></A><H3>
getCommunityTable</H3>
<PRE>
public java.lang.Object <B>getCommunityTable</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>use the following instead
 <br>
 getSecurityProvider().getTable(1); // where 1 stands for v1 security model.</I>
<P>
<DD>Gets the SnmpCommuityTable corresponding to this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the community table as an object of SnmpCommunityTable.</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetAddrExtTable()"><!-- --></A><H3>
getTargetAddrExtTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpTargetAddrExtTable.html">SnmpTargetAddrExtTable</A> <B>getTargetAddrExtTable</B>()</PRE>
<DL>
<DD>Gets the SnmpTargetAddrExtTable corresponding to this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the instance of SnmpTargetAddrExtTable maintained by
 this SnmpAPI object.</DL>
</DD>
</DL>
<HR>

<A NAME="getSessionList()"><!-- --></A><H3>
getSessionList</H3>
<PRE>
public java.util.Vector <B>getSessionList</B>()</PRE>
<DL>
<DD>Get the List of SNMP sessions managed under this SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setDebug(boolean)"><!-- --></A><H3>
setDebug</H3>
<PRE>
public void <B>setDebug</B>(boolean&nbsp;debug)</PRE>
<DL>
<DD>Defines whether debugging output should be generated. In the debug
 mode, the PDU data is printed in hex format.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#debugPrint(java.lang.String)"><CODE>SnmpClient.debugPrint(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDebug()"><!-- --></A><H3>
getDebug</H3>
<PRE>
public boolean <B>getDebug</B>()</PRE>
<DL>
<DD>Defines whether debugging output is being generated. In the debug
 mode, the PDU data is printed in hex format.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#debugPrint(java.lang.String)"><CODE>SnmpClient.debugPrint(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getStatement()"><!-- --></A><H3>
getStatement</H3>
<PRE>
public static java.sql.Statement <B>getStatement</B>()</PRE>
<DL>
<DD>Returns the Statement instance corresponding to this SnmpAPI instance
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Statement corresponding to this SnmpAPI instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getConnection()"><!-- --></A><H3>
getConnection</H3>
<PRE>
public static java.sql.Connection <B>getConnection</B>()</PRE>
<DL>
<DD>Returns the database connection instance corresponding to this 
 SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Connection instance corresponding to this SnmpAPI instance.</DL>
</DD>
</DL>
<HR>

<A NAME="getSASClient()"><!-- --></A><H3>
getSASClient</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html">SASClient</A> <B>getSASClient</B>()</PRE>
<DL>
<DD>Returns the SASClient instance which has been created at last through
 the SnmpSession class.
 Opening an instance of SnmpSession passing applet as an argument will
 create an instance of SASClient and this SASClient instance will be
 stored in the SnmpAPI (the API instance which is passed to the 
 constructor of SnmpSession).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the SASClient maintained by this object.</DL>
</DD>
</DL>
<HR>

<A NAME="initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
initJdbcParams</H3>
<PRE>
public void <B>initJdbcParams</B>(java.lang.String&nbsp;driverName,
                           java.lang.String&nbsp;urlString,
                           java.lang.String&nbsp;userName,
                           java.lang.String&nbsp;password)
                    throws java.sql.SQLException,
                           java.lang.ClassNotFoundException</PRE>
<DL>
<DD>This method should be invoked to initialize the Jdbc Parameters
 in case of database support.
 If this method is invoked the DataBase flag will be set.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>driverName</CODE> - Name of the DataBase driver.<DD><CODE>userName</CODE> - userName
<DT><B>Throws:</B>
<DD><CODE>java.sql.SQLException</CODE> - if the database connection could not be
 established
<DD><CODE>java.lang.ClassNotFoundException</CODE> - if the driver class is not present in
 the classpath</DL>
</DD>
</DL>
<HR>

<A NAME="setV3ConfigTable(java.lang.String)"><!-- --></A><H3>
setV3ConfigTable</H3>
<PRE>
public void <B>setV3ConfigTable</B>(java.lang.String&nbsp;tableName)</PRE>
<DL>
<DD>Sets the configured tableName specified in the case of V3Database.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableName</CODE> - the name of the table that should be configured.</DL>
</DD>
</DL>
<HR>

<A NAME="getV3ConfigTable()"><!-- --></A><H3>
getV3ConfigTable</H3>
<PRE>
public java.lang.String <B>getV3ConfigTable</B>()</PRE>
<DL>
<DD>Gets the table name that was configured for V3.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the SNMPv3 config table that was set previously.</DL>
</DD>
</DL>
<HR>

<A NAME="setV3DatabaseFlag(boolean)"><!-- --></A><H3>
setV3DatabaseFlag</H3>
<PRE>
public void <B>setV3DatabaseFlag</B>(boolean&nbsp;dBaseFlag)</PRE>
<DL>
<DD>Sets the Database flag in the case of V3.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dBaseFlag</CODE> - the flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="isV3DatabaseFlag()"><!-- --></A><H3>
isV3DatabaseFlag</H3>
<PRE>
public boolean <B>isV3DatabaseFlag</B>()</PRE>
<DL>
<DD>Gets the Database flag for this SnmpAPI instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <B>run</B>()</PRE>
<DL>
<DD>This method starts the API thread which monitors the sessions 
 to look for the requests which have timed out and retransmits the 
 pdu if required. This thread can be stopped by the close method
 provided in this class. The outstanding requests are monitored 
 for time-outs. If the request has timedout, then the pdu is 
 retransmitted. If there are no more retries, then pdu is removed
 from the request list and prints the time out message if the 
 debug is true.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE><DT><B>Overrides:</B><DD><CODE>run</CODE> in class <CODE>java.lang.Thread</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="close()"><!-- --></A><H3>
close</H3>
<PRE>
public void <B>close</B>()</PRE>
<DL>
<DD>Stops the API thread which monitors the session for time-outs
 and retries. Thread.stop() is deprecated in JDK 1.2 .
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genReqID()"><!-- --></A><H3>
genReqID</H3>
<PRE>
public int <B>genReqID</B>()</PRE>
<DL>
<DD>This number is unique number that is generated for this JVM. This
 integer is a constantly increasing number. This number starts from zero.
 The range of numbers that it produces are -2147483648 through 2147483647
 except zero. Once this count reaches the maximun positive, it switches
 over to the negative side.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the unique number which can be used for setting the
 request id.</DL>
</DD>
</DL>
<HR>

<A NAME="genMsgID()"><!-- --></A><H3>
genMsgID</H3>
<PRE>
public int <B>genMsgID</B>()</PRE>
<DL>
<DD>This number is unique number that is generated for this JVM. This
 integer is a constantly increasing number. This number starts from zero.
 The range of numbers that it produces are -2147483648 through 2147483647
 except zero. Once this count reaches the maximun positive, it switches
 over to the negative side.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns the unique number which can be used for setting the
 message id.</DL>
</DD>
</DL>
<HR>

<A NAME="checkResponses()"><!-- --></A><H3>
checkResponses</H3>
<PRE>
public java.util.Vector <B>checkResponses</B>()</PRE>
<DL>
<DD>Checks each session to see if there is any outstanding response.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>list of sessions with outstanding responses.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html"><CODE>SnmpSession</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="checkTimeouts()"><!-- --></A><H3>
checkTimeouts</H3>
<PRE>
public java.util.Vector <B>checkTimeouts</B>()</PRE>
<DL>
<DD>Checks each session to see if there is any outstanding Time-outs
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns a vector of SnmpSession objects with requests that
 have timed out.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html"><CODE>SnmpSession</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setCharacterEncoding(java.lang.String)"><!-- --></A><H3>
setCharacterEncoding</H3>
<PRE>
public void <B>setCharacterEncoding</B>(java.lang.String&nbsp;encoding)</PRE>
<DL>
<DD>Sets the Character encoding of the String values. The default will be 
 ISO8859_1 which is the standard. All the string encoding will be
 done based on this <a href="http://www.java.sun.com/products/jdk/1.3/docs/guide/intl/encoding.doc.html">encoding string</a>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>encoding</CODE> - the string based on which the string encoding is to be done.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html#getCharacterEncoding()"><CODE>getCharacterEncoding()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getCharacterEncoding()"><!-- --></A><H3>
getCharacterEncoding</H3>
<PRE>
public java.lang.String <B>getCharacterEncoding</B>()</PRE>
<DL>
<DD>Returns the Character encoding of the String values. The default will be 
 ISO8859_1 which is the standard. All the string encoding will be
 done based on this encoding string.Refer the following page for the 
 encoding string that are supported.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the string based on which the string encoding is to be done.<DT><B>See Also:</B><DD><CODE>#setCharacterEncoding()</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setOIDPrefix(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
setOIDPrefix</H3>
<PRE>
public static void <B>setOIDPrefix</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>This is added to any Object ID that does not begin 
 with a '.'. Since it is static, the change made in 
 this variable will be reflected in all SnmpAPI instances
 used by the client application. Used  primarily when 
 creating an SnmpOID instance. The Standard_Prefix is 
 same as the oid.toString() and  this value is prepended 
 while constructing the SnmpOID. If the argument is null 
 or if oid.toValue() is null, then the Standard_Prefix 
 will retain its older value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - The prefix that will be added before oids.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html"><CODE>SnmpOID</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getOIDPrefix()"><!-- --></A><H3>
getOIDPrefix</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A> <B>getOIDPrefix</B>()</PRE>
<DL>
<DD>This method returns the OID prefix that is
 set before. If the OID prefix is not set 
 previously, then the default OID namely
 ".1.3.6.1.2.1" will be returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the OID prefix.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineID()"><!-- --></A><H3>
getSnmpEngineID</H3>
<PRE>
public byte[] <B>getSnmpEngineID</B>()</PRE>
<DL>
<DD>Gets the authoritative SnmpEngineID associated with this 
 SNMP entity. Used for an agent side implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The authoritative SnmpEngineID.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpEngineID(byte[])"><!-- --></A><H3>
setSnmpEngineID</H3>
<PRE>
public void <B>setSnmpEngineID</B>(byte[]&nbsp;id)</PRE>
<DL>
<DD>Sets the authoritative SnmpEngineID for this SNMP entity. Used
 for an agent side implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>id</CODE> - The authoritative SnmpEngineID to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineBoots()"><!-- --></A><H3>
getSnmpEngineBoots</H3>
<PRE>
public int <B>getSnmpEngineBoots</B>()</PRE>
<DL>
<DD>Gets the SnmpEngineBoots (number of times this SNMP engine 
 has booted of this SNMP entity. Used for the agent side 
 implemenation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The snmpEngineBoots of this SNMPv3 entity.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpEngineBoots(int)"><!-- --></A><H3>
setSnmpEngineBoots</H3>
<PRE>
public void <B>setSnmpEngineBoots</B>(int&nbsp;boots)</PRE>
<DL>
<DD>Sets the SnmpEngineBoots (number of times this SNMP engine 
 has booted of this SNMP entity. Used for the agent side
 implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>boots</CODE> - The snmpEngineBoots for this SNMPv3 entity.
 Note : The boots value should be in between 0 and 2147483647.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineTime()"><!-- --></A><H3>
getSnmpEngineTime</H3>
<PRE>
public int <B>getSnmpEngineTime</B>()</PRE>
<DL>
<DD>Gets the SnmpEngineTime. Returns the time in seconds since the 
 engine has been booted. Used for the agent side implementation
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The time in seconds since the agent has been booted.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpEngineTime(int)"><!-- --></A><H3>
setSnmpEngineTime</H3>
<PRE>
public void <B>setSnmpEngineTime</B>(int&nbsp;time)</PRE>
<DL>
<DD>Sets the SnmpEngineTime, the time in seconds after this SNMP engine 
 has booted. Used for an agent side implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - The time in seconds. This is used by the the 
 authoritative SNMP engine to set the engineTime value i.e the time
 in seconds after the SNMP engine has booted.</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeWindow(int)"><!-- --></A><H3>
setTimeWindow</H3>
<PRE>
public void <B>setTimeWindow</B>(int&nbsp;win)</PRE>
<DL>
<DD>Sets the time window in which messages should be accepted by this
 SNMP engine
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>win</CODE> - The time in seconds to set the timeWindow attribute.</DL>
</DD>
</DL>
<HR>

<A NAME="getTimeWindow()"><!-- --></A><H3>
getTimeWindow</H3>
<PRE>
public int <B>getTimeWindow</B>()</PRE>
<DL>
<DD>Gets the time window in which messages are accepted by this 
 SNMP engine.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The timeWindow value in seconds within which the SNMP 
 engine has to accept the message.</DL>
</DD>
</DL>
<HR>

<A NAME="getUSMTable()"><!-- --></A><H3>
getUSMTable</H3>
<PRE>
public java.lang.Object <B>getUSMTable</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>use the following instead.
 <pre> SnmpApi.getSecurityProvider().getTable(USM_SECURITY_MODEL); // where USM_SECURITY_MODEL = 3</pre></I>
<P>
<DD>Gets the USMUserTable reference. The USMUserTable is instantiated
 by the constructor in this class. The USMUserTable has a list of
 USMUserEntries. Use this reference 
 in all the places where this table needs to be referenced.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The USMUserTable reference.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngine()"><!-- --></A><H3>
getSnmpEngine</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html">SnmpEngineTable</A> <B>getSnmpEngine</B>()</PRE>
<DL>
<DD>Gets the SnmpEngineTable reference. The SnmpEngineTable is 
 instantiated by  the constructor in this class. The SnmpEngineTable
 has a list of SnmpEngineEntries. Use this reference 
 in all the places where this table needs to be referred.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The SnmpEngineTable reference.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><CODE>SnmpEngineTable</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="initSecurityProvider()"><!-- --></A><H3>
initSecurityProvider</H3>
<PRE>
public void <B>initSecurityProvider</B>()
                          throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This method initializes the SecurityProvider by reading from the
 file securityProvider.confg . It will register all the security
 models specified in the securityProvider.config file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - if the file could not be found or if the
 security model could not be registered.</DL>
</DD>
</DL>
<HR>

<A NAME="initACMProvider()"><!-- --></A><H3>
initACMProvider</H3>
<PRE>
public void <B>initACMProvider</B>()
                     throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This method initializes the Access Control Provider by reading from the
 file acmProvider.config . It will register all the access control
 models specified in the acmProvider.properties file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - if the file could not be found or if the
 access control model could not be registered.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityProvider()"><!-- --></A><H3>
getSecurityProvider</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A> <B>getSecurityProvider</B>()</PRE>
<DL>
<DD>Gets the SecurityProvider maintained by this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>securityProvider maintained by this SnmpAPI.</DL>
</DD>
</DL>
<HR>

<A NAME="getACMProvider()"><!-- --></A><H3>
getACMProvider</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/ACMProvider.html">ACMProvider</A> <B>getACMProvider</B>()</PRE>
<DL>
<DD>Gets the Access Control Provider maintained bu this SnmpAPI.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>ACMProvider maintained by this SnmpAPI.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpGroup(java.lang.String, int)"><!-- --></A><H3>
getSnmpGroup</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpGroup.html">SnmpGroup</A> <B>getSnmpGroup</B>(java.lang.String&nbsp;local_address,
                              int&nbsp;port)</PRE>
<DL>
<DD>Gets the SnmpGroup Object corresponding to the SnmpSession's 
 local_addrs and local_port. The SnmpGroup counters are maintained
 for each SNMP entity i.e for each local_address, local_port pair
 in the SnmpSession. To get the group counter values, the API user
 will have to retrive the SnmpGroup object using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>local_address</CODE> - The address to which the session is bound. The 
 local_address should be a string representation of the ipAddress.<DD><CODE>port</CODE> - The port at which the session is bound.
<DT><B>Returns:</B><DD>gp the SnmpGroup object corresponding to the specified
 address and port.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpGroup.html"><CODE>SnmpGroup</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSerializeFileName(java.lang.String)"><!-- --></A><H3>
setSerializeFileName</H3>
<PRE>
public void <B>setSerializeFileName</B>(java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Sets the fileName into which the SNMPv3 configuration tables are to 
 be serialized. The security and access control configurations
 can be serialized so that they can be restored when the SNMPv3
 entity is restarted. Right now the USMUserTable and the access 
 control configurations tables which include VacmConetxtTable, 
 VacmGroupTable, VacmGroupAccessTable and VacmViewTreeTable can be 
 serialized. In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The fileName into which the SNMPv3 configuration tables
 can be serialized.</DL>
</DD>
</DL>
<HR>

<A NAME="getSerializeFileName()"><!-- --></A><H3>
getSerializeFileName</H3>
<PRE>
public java.lang.String <B>getSerializeFileName</B>()</PRE>
<DL>
<DD>Gets the fileName into which the SNMPv3 configuration tables are to 
 be serialized. The security and access control configurations
 can be serialized so that they can be restored when the SNMPv3
 entity is restarted. Right now the USMUserTable and the access 
 control configuration tables which include VacmConetxtTable, 
 VacmGroupTable, VacmGroupAccessTable and VacmViewTreeTable can be 
 serialized. In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using the setSerializeFileName
 method. This method returns the fileName in which the SNMPv3
 configuration tables are serialized.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>serializeFileName. The fileName into which the tables can 
 be serialized</DL>
</DD>
</DL>
<HR>

<A NAME="serialize()"><!-- --></A><H3>
serialize</H3>
<PRE>
public boolean <B>serialize</B>()
                  throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This serializes the SNMPV3 Security tables into the file 
 specified by the setSerializeFileName method. 
 The security configurations
 can be serialized so that they can be restored when the SNMPv3
 entity is restarted. The class that extends the securityModelTable
 should implement the serialize(ObjectOutputStream out) method.
 In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using the setSerializeFileName
 method. The serialize method serializes the SNMPv3 
 security tables.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the serialization was successful. Returns false if the
 fileName into which the tables are to be serialized is null.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the serialization throws an IOException<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><CODE>SecurityModelTable</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="deSerialize()"><!-- --></A><H3>
deSerialize</H3>
<PRE>
public boolean <B>deSerialize</B>()
                    throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This deSerializes the SNMPV3 Security tables from the 
 file specified by the setSerializeFileName method.
 The security configurations
 can be serialized so that they can be restored when the SNMPv3
 entity is restarted. The class that extends the securityModelTable
 should implement the serialize(ObjectOutputStream out) method.
 This method deSerializes the file specified in the 
 setSerializeFileName method to restore the SNMPv3 
 security tables.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the deSerialization was successful. Returns false if the
 fileName into which the tables are to be deSerialized is null.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the deSerialization throws an IOException<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><CODE>SecurityModelTable</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setEngineBootsSerializeFileName(java.lang.String)"><!-- --></A><H3>
setEngineBootsSerializeFileName</H3>
<PRE>
public void <B>setEngineBootsSerializeFileName</B>(java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Sets the fileName into which the SNMPv3 engineBoots are to be stored
 so that they are persistant. The engineBoots are stored in a 
 serialized file. The engine boots value will be serialized so that 
 they can be restored when the SNMPv3 entity is restarted and
 serialized. In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The fileName into which the engine boots 
 can be serialized.</DL>
</DD>
</DL>
<HR>

<A NAME="GetEngineBootsSerializeFileName()"><!-- --></A><H3>
GetEngineBootsSerializeFileName</H3>
<PRE>
public java.lang.String <B>GetEngineBootsSerializeFileName</B>()</PRE>
<DL>
<DD>Gets the fileName into which the SNMPv3 engineBoots are to be stored
 so that they are persistant. The engineBoots are stored in a 
 serialized file. The engine boots value will be serialized so that 
 they can be restored when the SNMPv3 entity is restarted and
 serialized. In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the fileName into which the engine boots can be serialized.</DL>
</DD>
</DL>
<HR>

<A NAME="serializeEngineBoots()"><!-- --></A><H3>
serializeEngineBoots</H3>
<PRE>
public boolean <B>serializeEngineBoots</B>()
                             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This serializes the engine boots into the file
 specified by the setSerializeFileName method.
 The engine boots value will be serialized so that
 they can be restored when the SNMPv3 entity is restarted and
 serialized. In order to store configuration information files,
 the API user has to set the file name in which configuration
 information needs to be serialized using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the serialization was successful. Returns false if the
 fileName into which the value is to be serialized is null.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the serialization throws an IOException</DL>
</DD>
</DL>
<HR>

<A NAME="deSerializeEngineBoots()"><!-- --></A><H3>
deSerializeEngineBoots</H3>
<PRE>
public boolean <B>deSerializeEngineBoots</B>()
                               throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This deSerializes the engine boots into the  
 file specified by the setSerializeFileName method.
 The engine boots value will be serialized so that 
 they can be restored when the SNMPv3 entity is restarted and
 serialized. In order to store configuration information files, 
 the API user has to set the file name in which configuration 
 information needs to be serialized using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the serialization was successful. Returns false if the
 fileName into which the value is to be serialized is null.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the serialization throws an IOException</DL>
</DD>
</DL>
<HR>

<A NAME="compare(int[], int[])"><!-- --></A><H3>
compare</H3>
<PRE>
public static boolean <B>compare</B>(int[]&nbsp;a,
                              int[]&nbsp;b)</PRE>
<DL>
<DD>An int array comparison routine. Returns true if both the 
  arrays are equal. Compares all the elements in int array. 
  Returns false if the two int arrays are not equal or if the two arrays
  are of different lengths.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>a</CODE> - The int array to be compared.<DD><CODE>b</CODE> - The int array to be compared.
<DT><B>Returns:</B><DD>if a equals b. False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setDebugLevel(int)"><!-- --></A><H3>
setDebugLevel</H3>
<PRE>
public static void <B>setDebugLevel</B>(int&nbsp;level)</PRE>
<DL>
<DD>sets debugLevel FATAL or CRITICAL or NON_CRITICAL.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="debugPrintHigh(java.lang.Object)"><!-- --></A><H3>
debugPrintHigh</H3>
<PRE>
public static void <B>debugPrintHigh</B>(java.lang.Object&nbsp;str)</PRE>
<DL>
<DD>debugPrint method for FATAL messages.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="debugPrintMedium(java.lang.Object)"><!-- --></A><H3>
debugPrintMedium</H3>
<PRE>
public static void <B>debugPrintMedium</B>(java.lang.Object&nbsp;str)</PRE>
<DL>
<DD>debugPrint method for CRITICAL messages.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="debugPrintLow(java.lang.Object)"><!-- --></A><H3>
debugPrintLow</H3>
<PRE>
public static void <B>debugPrintLow</B>(java.lang.Object&nbsp;str)</PRE>
<DL>
<DD>debugPrint method for NON_CRITICAL messages.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setupStdOutErr()"><!-- --></A><H3>
setupStdOutErr</H3>
<PRE>
public static void <B>setupStdOutErr</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>please use the logging framework instead.</I>
<P>
<DD>makes logs directory for stdout and stderr files.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setupStdOutErr(java.lang.String)"><!-- --></A><H3>
setupStdOutErr</H3>
<PRE>
public static void <B>setupStdOutErr</B>(java.lang.String&nbsp;dirStr)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>please use the logging framework instead.</I>
<P>
<DD>makes specified directory for stdout and stderr files.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMajorVersion()"><!-- --></A><H3>
getMajorVersion</H3>
<PRE>
public static int <B>getMajorVersion</B>()</PRE>
<DL>
<DD>Returns the major version of this release of SNMP Library.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the major version of this release of SNMP Library.</DL>
</DD>
</DL>
<HR>

<A NAME="getMinorVersion()"><!-- --></A><H3>
getMinorVersion</H3>
<PRE>
public static int <B>getMinorVersion</B>()</PRE>
<DL>
<DD>Returns the minor version of this release of SNMP Library.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the minor version of this release of SNMP Library.</DL>
</DD>
</DL>
<HR>

<A NAME="getPatchVersion()"><!-- --></A><H3>
getPatchVersion</H3>
<PRE>
public static int <B>getPatchVersion</B>()</PRE>
<DL>
<DD>Returns the patch version of this release of SNMP Library.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the patch version of this release of SNMP Library.</DL>
</DD>
</DL>
<HR>

<A NAME="getVersionString()"><!-- --></A><H3>
getVersionString</H3>
<PRE>
public static java.lang.String <B>getVersionString</B>()</PRE>
<DL>
<DD>Returns a string describing this version of SNMP Library.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a string describing this version of SNMP Library.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpACM.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpBits.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpAPI.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
