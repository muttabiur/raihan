package DETClient;

import DETServer.* ;
import java.rmi.Naming;
import java.util.Vector;

import org.omg.CORBA.ORB;
import org.omg.CosNaming.NamingContextExt;
import org.omg.CosNaming.NamingContextExtHelper;

import DETApp.DET;
import DETApp.DETHelper;
//import DETServer.AllMessage;

public class DETTestClient {

	static ImplementationEtraderServer detImpl;
		
		public static void main(String args[]) {
		
			
			String url="";
			String itm1="cpu";
			String itm2="ram";
			String itm3="hdd";
							
			int qty=1;
					
			String Naminghost="swaziland";
	   	 	
			String tradeHost1="swaziland";
	   	 	String tradeHost2="djibouti";
	   	 	String tradeHost3="cyprus";
	   	 	
	   	 	String name="DETcpu";
	   	 
	       // create and initialize the ORB
	   	 	String arg1[]={"-ORBInitialHost", Naminghost,"-ORBInitialPort", "1234"};
	  	 
	   	 	ORB orb = ORB.init(arg1, null);
	   	 
	   	 try{	
	       // get the root naming context
	       org.omg.CORBA.Object objRef =  orb.resolve_initial_references("NameService");
	       
	       // Use NamingContextExt instead of NamingContext, 
	       // part of the Interoperable naming Service.  
	       NamingContextExt ncRef =  NamingContextExtHelper.narrow(objRef);

	       // resolve the Object Reference in Naming
	       //String name = "DET";
	       
	       detImpl = DETHelper.narrow(ncRef.resolve_str(name));
	   	}catch(Exception e){
			System.out.println("Exception in testClient: " + e);
		}
		    
	       try{			
			Thread[] t1= new cThread[100];
		/*
			for (int x=0; x<10 ;x++)
			{		
					t1[x]=new cThread(detImpl,itm1,qty);
					t1[x].start();
					
					t1[x]=new cThread(detImpl,itm2,qty);
					t1[x].start();
					
					t1[x]=new cThread(detImpl,itm3,qty);
					t1[x].start();
			}	
			
			
		
		
		*/
			for (int x=10; x<15 ;x++)
			{		
					
				//	t1[x]=new cThread(detImpl,itm1,1,itm2,2,tradeHost1);
				//	t1[x].start();
					
					t1[x]=new cThread(detImpl,itm1,1,itm2,1,tradeHost2);
					t1[x].start();
					
					t1[x]=new cThread(detImpl,itm1,1,itm3,1,tradeHost3);
					t1[x].start();
			}	
			
			
			
		
		 	Thread.sleep(15000);
			
			System.out.println(detImpl.printReport());
			
				 
			}catch(Exception e){
				System.out.println("Exception in testClient: " + e);
			}
			
			
		}
	}