<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:05 IST 2006 -->
<TITLE>
SnmpTarget (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpTarget (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableEvent.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTargetBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTarget.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpTarget</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">com.adventnet.snmp.beans.SnmpServer</A>
        |
        +--<B>com.adventnet.snmp.beans.SnmpTarget</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A>, java.util.EventListener, java.io.Serializable, java.beans.VetoableChangeListener</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html">SnmpPoller</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpTarget</B><DT>extends <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A><DT>implements java.beans.VetoableChangeListener, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></DL>

<P>
This class is a lightweight SNMP session for use with other beans in 
  applications and applets.  It sends synchronous SNMP requests. 
  It contains an array of OIDs specifying variables used in SNMP 
  operations, and list of values for set and trap operations.
  MIB support and other SNMP functions are built into this class.
 The SnmpTarget bean is used for many of the common operations 
 that we do with a SNMP agent such as get, getnext, set and trap operations. 
 MIB support and other SNMP functions are built into this class. This bean 
 can be used to make a single variable request, multiple variable requests, 
 walking a table and a number of operations, including loading MIBs to 
 support SNMP operations, getting all instances of a variable type, etc
  <p>
  To use in an application, simply instantiate,
  specify the object IDs, and perform operations.  For example,
  <pre>
    SnmpTarget target = new SnmpTarget();
    target.setTargetHost("localhost");  // set host, or other parameters
    target.setObjectID(".1.3.6.1.2.1.1.1.0"); // or 1.1.0 with standard prefix
    String result = target.snmpGet();
    <br>
    if (result == null) 
        System.err.println("Failed: "+target.getErrorString());
    else System.out.println("Response: "+result);
    
  </pre>
  
  To use in an applet use an alternate constructor, but the
  procedure is the same.  For example,
  <pre>
    SnmpTarget target = new SnmpTarget(appletInstance);
    target.setTargetHost("localhost");  // set host, or other parameters
    target.setObjectID(".1.3.6.1.2.1.1.1.0");  // or 1.1.0 with standard prefix
    String result = target.snmpGet();
    <br>
    if (result == null) 
        System.err.println("Failed: "+target.getErrorString());
    else System.out.println("Response: "+result);
    
  </pre>
  This class supports multiple variable requests, and a number
  of operations, including loading MIBs to support SNMP operations,
  getting all instances of a variable type, etc..
  <p>
  For multiple variable requests, set the OID list using the
  setObjectIDList(String[]) or setSnmpOIDList(SnmpOID[]) methods.
  Your SNMP operations with this SnmpTarget will use this list.
  <p>
  We can also register for events from the SnmpTarget component, 
 so that we can notify another object whenever a response is received 
 for any request. This may be useful for example in applying the result 
 of a query to multiple objects. However, in most cases, the synchronous 
 use of this component will not use events and event registration.
 The listeners that are registered for receiving responses from the agent 
 should register, using setSendTimeoutEvents(true) to get the timeout 
 events, which otherwise, will not be passed to the listener.
 This class can be used directly, and it will also be used by beans,
 e.g. SnmpPoller bean, which provides SNMP services. For garbage
 collection of the resources used, releaseResources() method should 
 be invoked. 
 Different SnmpTarget instances on the same JVM, will reuse the SnmpAPI, 
 SnmpSession and MibOperations instance. So, for releasing these resources, 
 releaseResources() method should be called on every SnmpTarget instance 
 created and when this method is called on the final instance of SnmpTarget, 
 these will be garbage collected.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpTarget">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#serialize">serialize</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;based on this flag v3 table like USMUserTable and SnmpEngineTable 
 will be serialized</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGET">SNMPGET</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETBULK">SNMPGETBULK</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Get Bulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETNEXT">SNMPGETNEXT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get next request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPINFORM">SNMPINFORM</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 INFORM request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPREPORT">SNMPREPORT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Report request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPRESPONSE">SNMPRESPONSE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP response request</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPSET">SNMPSET</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP set request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPTRAP">SNMPTRAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP trap request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPV2TRAP">SNMPV2TRAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Trap request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION1">VERSION1</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 1.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION2C">VERSION2C</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 2C.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION3">VERSION3</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 3.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget()">SnmpTarget</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used in applications.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(java.applet.Applet)">SnmpTarget</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(java.applet.Applet, int, java.lang.String)">SnmpTarget</A></B>(java.applet.Applet&nbsp;applet,
           int&nbsp;port,
           java.lang.String&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for creating a new session for this applet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(int, com.adventnet.snmp.snmp2.ProtocolOptions)">SnmpTarget</A></B>(int&nbsp;protocol,
           <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used for applications which use protocol
 other than UDP/IP.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(int, java.lang.String)">SnmpTarget</A></B>(int&nbsp;port,
           java.lang.String&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used for creating a new session for this application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.mibs.MibOperations)">SnmpTarget</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;ses,
           <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mib)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used to create an SnmpTarget instance with a specified 
  SnmpSession and MibOperations.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SnmpTarget(java.lang.String[], java.lang.String)">SnmpTarget</A></B>(java.lang.String[]&nbsp;localAddrs,
           java.lang.String&nbsp;sessionName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications in which the session needs to be 
 bound to some local address.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.afp.log.LoggerProperties)">addLogClient</A></B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the Log client for which the target has to redirect the log messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A></B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add the Log client for which the target has to redirect the log messages</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addObjectID(java.lang.String)">addObjectID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method adds an SnmpOID specified by string to the SnmpOID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a listener for events from this target.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">addSnmpOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method adds an SnmpOID to the previously set list of SnmpOID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">addSnmpPropertyListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds SnmpPropertyListener to the SnmpPropertyListener list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addUserError(int, java.lang.String)">addUserError</A></B>(int&nbsp;errorCode,
             java.lang.String&nbsp;errorString)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to add user defined error codes and the corresponding error string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">addV3HandShakeResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a listener to receive the events when SnmpEngineID discovery
 and time Synchronization is performed by the method 
 async_create_v3_tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#enableDebugForPDU(boolean)">enableDebugForPDU</A></B>(boolean&nbsp;setonpdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The debug can be set on the PDU instance itself using this method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generates the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generates the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptComplete()">getAttemptComplete</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns if the splitting pdu is enabled to get the complete data by
 splitting the varbinds into multiple request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptPartial()">getAttemptPartial</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the boolean state of whether this target will try to get
 partial data from an agent if the request is a multiple variable request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthPassword()">getAuthPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 AuthPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthProtocol()">getAuthProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 AuthProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCommunity()">getCommunity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target Community</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpResultObject.html">SnmpResultObject</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCompleteResponse()">getCompleteResponse</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the complete data from the agent by splitting the varbinds into multiple 
 requests.This can set if request pdu is very big.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextID()">getContextID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 contextID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextName()">getContextName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getDebug()">getDebug</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns true if debug mode is enabled and false otherwise</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getEngineID()">getEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the Snmp V3 EngineID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()">getErrorCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the error code for the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Hashtable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCodes()">getErrorCodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the list of all the Error specific for an Snmp Request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorIndex()">getErrorIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the error index corresponding to the errored oid in the pdu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()">getErrorString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the error string for the request sent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCode()">getExceptionCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the exception code for the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Hashtable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCodes()">getExceptionCodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the list of all the Exceptions specific to SnmpV2/V3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value determining whether the new-line characters,
 tabs and carriage returns are printed or their hex values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxNumRows()">getMaxNumRows</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the maximum number of rows that can be processed, 
 default value is 1000.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxRepetitions()">getMaxRepetitions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target max repetitions value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibModules()">getMibModules</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns all the MIBs that are loaded in this applet/application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibOperations()">getMibOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get the MibOperations object reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getNonRepeaters()">getNonRepeaters</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target non-repeaters value for a getbulk request 
 Default is 0.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID()">getObjectID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the first object ID as a string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID(int)">getObjectID</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the object ID at index as a string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectIDList()">getObjectIDList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the list of object IDs  as a string array or null, if no OIDs is set previously.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPduErrorIndex()">getPduErrorIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the error index set in the PDU.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrincipal()">getPrincipal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 Principal</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivPassword()">getPrivPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 PrivPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivProtocol()">getPrivProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 privProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getRetries()">getRetries</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target retries value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityLevel()">getSecurityLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 SecurityLevel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityModel()">getSecurityModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 securityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSendTimeoutEvents()">getSendTimeoutEvents</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the boolean state of whether this target will send timeout
 events to a registered listener.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOID()">getSnmpOID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the first SnmpOID from the list of object IDs 
 or null, if no OID is set previously.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOIDList()">getSnmpOIDList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the list of object IDs  as an array of SnmpOID 
 or null if no OID is set previously.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpVersion()">getSnmpVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target SNMP Version.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetHost()">getTargetHost</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target hostname</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetPort()">getTargetPort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get the SNMP target port number</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTimeout()">getTimeout</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target timeout value</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorCode()">getUserErrorCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the user defined error code for the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorString()">getUserErrorString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get the user defined error string to a specific error code.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getVarBindCount()">getVarBindCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of varbinds used with the splitted pdu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getWriteCommunity()">getWriteCommunity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP target write Community to be used for set requests</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isInSubTree(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)">isInSubTree</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;rootoid,
            <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;objid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if objid has rootoid as an ancestor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isSerialize()">isSerialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the status of Serialization of v3 tables ( USMUserTable
 and SnmpEngineTable )</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#loadMibs(java.lang.String)">loadMibs</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To load the specified mibs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#releaseResources()">releaseResources</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTarget bean instance, this method 
 can be used to immediately release the resources.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeLogClient()">removeLogClient</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the Log client for which the target has been registered to redirect 
 the log Messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes a listener for events from this target.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">removeSnmpPropertyListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the SnmpPropertyListener from the list maintained by this target.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">removeV3HandShakeListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the listener registered for getting events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptComplete(boolean)">setAttemptComplete</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enables the flag to get the complete data from the agent by splitting
 the varbinds into multiple request.This can set if request pdu is very big.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptPartial(boolean)">setAttemptPartial</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the boolean state of whether this target will try to get a
 partial data from an agent if the request is a multi variable request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthPassword(java.lang.String)">setAuthPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 AuthPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthProtocol(int)">setAuthProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 AuthProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setClientID(int)">setClientID</A></B>(int&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Debug can be captured by setting this clientID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setCommunity(java.lang.String)">setCommunity</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target Community</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextID(java.lang.String)">setContextID</A></B>(java.lang.String&nbsp;ctxtID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 contextID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextName(java.lang.String)">setContextName</A></B>(java.lang.String&nbsp;cName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setDebug(boolean)">setDebug</A></B>(boolean&nbsp;debug)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method determines if debug output will be printed</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setEngineID(byte[])">setEngineID</A></B>(byte[]&nbsp;eid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Snmp V3 EngineID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A></B>(boolean&nbsp;specConCode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the value determining whether the new-line characters,
 tabs and carriage returns are printed or their hex values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxNumRows(int)">setMaxNumRows</A></B>(int&nbsp;maxRows)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the maximum number of rows that can be processed, 
 default value is 1000.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxRepetitions(int)">setMaxRepetitions</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target max repetitions value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMibModules(java.lang.String)">setMibModules</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the MIB to be loaded in this applet/application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setNonRepeaters(int)">setNonRepeaters</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target non-repeaters value for a getbulk request 
 Default is 0.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(int, java.lang.String)">setObjectID</A></B>(int&nbsp;index,
            java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the object ID value at index based on specified string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(java.lang.String)">setObjectID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the object ID specified by the String value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the list of object IDs  based on the specified string array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">setParams</A></B>(java.lang.String&nbsp;host,
          java.lang.String&nbsp;port,
          java.lang.String&nbsp;community,
          java.lang.String&nbsp;mib,
          java.lang.String&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set Multiple parameters like TargetHost,Port,Community,MibModule and OID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">setParams</A></B>(java.lang.String&nbsp;host,
          java.lang.String&nbsp;port,
          java.lang.String&nbsp;community,
          java.lang.String&nbsp;mib,
          java.lang.String[]&nbsp;oidlist)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set Multiple parameters like TargetHost,Port,Community,MibModule and OIDList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrincipal(java.lang.String)">setPrincipal</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 Principal</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivPassword(java.lang.String)">setPrivPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 PrivPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivProtocol(int)">setPrivProtocol</A></B>(int&nbsp;privprotocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 PrivProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setRetries(int)">setRetries</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target retries value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityLevel(byte)">setSecurityLevel</A></B>(byte&nbsp;sLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 SecurityLevel.The value will be 0 ,1 or 3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityModel(int)">setSecurityModel</A></B>(int&nbsp;securityModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 SecurityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSendTimeoutEvents(boolean)">setSendTimeoutEvents</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This should be set to true if the listener should be notified of the 	 
 timeout events in case if the request timesout.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">setSnmpOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the SnmpOID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the list of object IDs  as the given array of SnmpOID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpVersion(int)">setSnmpVersion</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target SNMP Version.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetHost(java.lang.String)">setTargetHost</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the SNMP target hostname</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetPort(int)">setTargetPort</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set the SNMP target port number</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTimeout(int)">setTimeout</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target timeout value</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setVarBindCount(int)">setVarBindCount</A></B>(int&nbsp;count)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of varbinds per request to get the 
 complete data from the agent by splitting
 the varbinds into multiple request in case if the request pdu is very big.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setWriteCommunity(java.lang.String)">setWriteCommunity</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP target write Community to be used for set requests</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet()">snmpGet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns as a string 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet(com.adventnet.snmp.snmp2.SnmpOID)">snmpGet</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP variable identified by specified Object Identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllList()">snmpGetAllList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets all instances of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariableBindings()">snmpGetAllVariableBindings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets all instances of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariables()">snmpGetAllVariables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets all instances of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkList()">snmpGetBulkList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get bulk on list of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariableBindings()">snmpGetBulkVariableBindings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get bulk on list of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariables()">snmpGetBulkVariables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get bulk on list of variables in the OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList()">snmpGetList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the list of SNMP variables identified by the Object Identifier 
 list stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext()">snmpGetNext</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns as a string the 
 next SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext(com.adventnet.snmp.snmp2.SnmpOID)">snmpGetNext</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP variable identified by specified Object Identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList()">snmpGetNextList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier list previously set in 
 this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetNextList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the list of SNMP variables identified by the Object Identifier 
 list stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariable()">snmpGetNextVariable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBinding()">snmpGetNextVariableBinding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBindings()">snmpGetNextVariableBindings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariables()">snmpGetNextVariables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier list previously set in this 
 SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariable()">snmpGetVariable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBinding()">snmpGetVariableBinding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the target and returns 
 the SNMP variable binding identified by the first Object Identifier 
 stored in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBindings()">snmpGetVariableBindings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariables()">snmpGetVariables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Queries the agent and returns the list of SNMP variables
 from the agent using the Object Identifier list previously set 
 in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformAcknowledgement(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[], int)">snmpSendInformAcknowledgement</A></B>(long&nbsp;uptime,
                              <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid,
                              <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values,
                              int&nbsp;reqID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is to send the inform acknowledgement PDU to the inform request sender if the setAutoInformResponse 
 is set as false.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendInformRequest</A></B>(long&nbsp;uptime,
                      <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;trapOid,
                      <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to send an SNMPV2 inform pdu with parameters specified and variable
  bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, java.lang.String, java.lang.String[])">snmpSendInformRequest</A></B>(long&nbsp;uptime,
                      java.lang.String&nbsp;trapOid,
                      java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is to send an SNMPV2 inform pdu with parameters specified and variable
  bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendNotification</A></B>(long&nbsp;uptime,
                     <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;trapOid,
                     <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to send an SNMPV2 notification pdu with parameters specified and variable
	bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, java.lang.String, java.lang.String[])">snmpSendNotification</A></B>(long&nbsp;uptime,
                     java.lang.String&nbsp;trapOid,
                     java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to send an SNMPV2 notification pdu with parameters specified and variable
	bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendTrap</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;enterprise,
             java.lang.String&nbsp;agenthost,
             int&nbsp;genericType,
             int&nbsp;specificType,
             long&nbsp;uptime,
             <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to send an SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in this 
 SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])">snmpSendTrap</A></B>(java.lang.String&nbsp;enterprise,
             java.lang.String&nbsp;agenthost,
             int&nbsp;genericType,
             int&nbsp;specificType,
             long&nbsp;uptime,
             java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to send an SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in this 
 SnmpTarget instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String)">snmpSet</A></B>(java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to do an SNMP set to the target using value specified of the first 
 variable on the variable list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String, byte)">snmpSet</A></B>(java.lang.String&nbsp;value,
        byte&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to do an SNMP set to the target of the first variable on the 
 variable list using value specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetList(java.lang.String[])">snmpSetList</A></B>(java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the list of SNMP variable bindings on the agent using 
 the Object Identifier list previously set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariable(com.adventnet.snmp.snmp2.SnmpVar)">snmpSetVariable</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;var)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to do an SNMP set with specified value to the target and returns 
 the SNMP variable identified by the first Object Identifier stored 
 in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariableList(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariableList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to do an SNMP set, with values specified, the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariables(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariables</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to do an SNMP set, with values specified, the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpTarget instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></B>(java.beans.PropertyChangeEvent&nbsp;e)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when a vetoableChange event is fired
 from the propertySetting bean.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#finalize()">finalize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.CustomizerTemplate"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from interface com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#manage_v3_tables()">manage_v3_tables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SNMPGET"><!-- --></A><H3>
SNMPGET</H3>
<PRE>
public static final byte <B>SNMPGET</B></PRE>
<DL>
<DD>Constant for SNMP get request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPGET">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPGETNEXT"><!-- --></A><H3>
SNMPGETNEXT</H3>
<PRE>
public static final byte <B>SNMPGETNEXT</B></PRE>
<DL>
<DD>Constant for SNMP get next request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPGETNEXT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPRESPONSE"><!-- --></A><H3>
SNMPRESPONSE</H3>
<PRE>
public static final byte <B>SNMPRESPONSE</B></PRE>
<DL>
<DD>Constant for SNMP response request
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPRESPONSE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPSET"><!-- --></A><H3>
SNMPSET</H3>
<PRE>
public static final byte <B>SNMPSET</B></PRE>
<DL>
<DD>Constant for SNMP set request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPSET">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPTRAP"><!-- --></A><H3>
SNMPTRAP</H3>
<PRE>
public static final byte <B>SNMPTRAP</B></PRE>
<DL>
<DD>Constant for SNMP trap request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPTRAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPGETBULK"><!-- --></A><H3>
SNMPGETBULK</H3>
<PRE>
public static final byte <B>SNMPGETBULK</B></PRE>
<DL>
<DD>Constant for SNMP V2 Get Bulk request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPGETBULK">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPINFORM"><!-- --></A><H3>
SNMPINFORM</H3>
<PRE>
public static final byte <B>SNMPINFORM</B></PRE>
<DL>
<DD>Constant for SNMP V2 INFORM request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPINFORM">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPV2TRAP"><!-- --></A><H3>
SNMPV2TRAP</H3>
<PRE>
public static final byte <B>SNMPV2TRAP</B></PRE>
<DL>
<DD>Constant for SNMP V2 Trap request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPV2TRAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPREPORT"><!-- --></A><H3>
SNMPREPORT</H3>
<PRE>
public static final byte <B>SNMPREPORT</B></PRE>
<DL>
<DD>Constant for SNMP V2 Report request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.SNMPREPORT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION1"><!-- --></A><H3>
VERSION1</H3>
<PRE>
public static final int <B>VERSION1</B></PRE>
<DL>
<DD>Constant for SNMP Version 1.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.VERSION1">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION2C"><!-- --></A><H3>
VERSION2C</H3>
<PRE>
public static final int <B>VERSION2C</B></PRE>
<DL>
<DD>Constant for SNMP Version 2C.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.VERSION2C">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION3"><!-- --></A><H3>
VERSION3</H3>
<PRE>
public static final int <B>VERSION3</B></PRE>
<DL>
<DD>Constant for SNMP Version 3.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTarget.VERSION3">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="serialize"><!-- --></A><H3>
serialize</H3>
<PRE>
public boolean <B>serialize</B></PRE>
<DL>
<DD>based on this flag v3 table like USMUserTable and SnmpEngineTable 
 will be serialized
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpTarget(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.mibs.MibOperations)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;ses,
                  <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mib)</PRE>
<DL>
<DD>This constructor is used to create an SnmpTarget instance with a specified 
  SnmpSession and MibOperations. Using this constructor the user can 
  decide which SnmpSession and MibOperations instance should be used by SnmpTarget.
<P>
<DT><B>Parameters:</B><DD><CODE>ses</CODE> - Instance of <code>SnmpSession</code> but not null and also the created
 SnmpSession should be opened before using in this constructor.<DD><CODE>mib</CODE> - Instance of <code>MibOperations</code><DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
<HR>

<A NAME="SnmpTarget()"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>()</PRE>
<DL>
<DD>This constructor is used in applications.
<P>
</DL>
<HR>

<A NAME="SnmpTarget(int, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(int&nbsp;protocol,
                  <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</PRE>
<DL>
<DD>This constructor is used for applications which use protocol
 other than UDP/IP.
<P>
</DL>
<HR>

<A NAME="SnmpTarget(int, java.lang.String)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(int&nbsp;port,
                  java.lang.String&nbsp;session)</PRE>
<DL>
<DD>This constructor is used for creating a new session for this application.
 If the session name is same the targets will share the same session.
 If the port is 0 it will use the available free port.
<P>
</DL>
<HR>

<A NAME="SnmpTarget(java.applet.Applet)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Use this constructor for applets.  Applets will try and
 use SAS, and if unsuccessful, will use local sockets.  
 MIB loading from applets may fail from this SnmpTarget 
 instance if you use this constructor. 
 This matters only for the first SnmpTarget instance, and subsequent
 instances will use the same SNMP mechanisms.
<P>
</DL>
<HR>

<A NAME="SnmpTarget(java.applet.Applet, int, java.lang.String)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(java.applet.Applet&nbsp;applet,
                  int&nbsp;port,
                  java.lang.String&nbsp;session)</PRE>
<DL>
<DD>Use this constructor for creating a new session for this applet.
 If the session name is same, the targets will share the same session.
 If the port is 0 it will use the available free port. Applets will
 try and use SAS, and if unsuccessful, will use local sockets.  
 MIB loading from applets may fail from this SnmpTarget 
 instance, if you use this constructor. 
 This matters only for the first SnmpTarget instance, and subsequent
 instances will use the same SNMP mechanisms.
<P>
</DL>
<HR>

<A NAME="SnmpTarget(java.lang.String[], java.lang.String)"><!-- --></A><H3>
SnmpTarget</H3>
<PRE>
public <B>SnmpTarget</B>(java.lang.String[]&nbsp;localAddrs,
                  java.lang.String&nbsp;sessionName)</PRE>
<DL>
<DD>Use this constructor for applications in which the session needs to be 
 bound to some local address.  Usually, the session will be shared across 
 different instances of this class. If  seperate session needs to be used, then 
 specify unique sessionNames for the instances created.
<P>
<DT><B>Parameters:</B><DD><CODE>localAddrs</CODE> - The local addresses to which the session needs 
 to be bound.<DD><CODE>sessionName</CODE> - Specify unique sessionNames for the instances 
 which need to use different SnmpSession instances to send data.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="loadMibs(java.lang.String)"><!-- --></A><H3>
loadMibs</H3>
<PRE>
public void <B>loadMibs</B>(java.lang.String&nbsp;mibs)
              throws <A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A>,
                     java.io.IOException,
                     java.io.FileNotFoundException</PRE>
<DL>
<DD>To load the specified mibs. If first SnmpTarget has been opened with applet
  parameter, then URLs will be used.  MIB loading applies across
  all the beans in this package, i.e. MIBs can be loaded in any
  of the bean instances, and will be available across all the beans
  in this package, across the VM.
  The files can be seperated by a space, tab, new line, carriage return  and pipe symbol. 
  <br>	
  for example,
 		target.loadMibs("../mibs/RFC1213-MIB ../mibs/IF-MIB");
 <br>	
 MIBs can also be loaded from string URLs.
 <p>
 In case of loading the files from space seperated directories, the whole
 String should be given within the double quotes. <br>for example, if the
 MIB file is present in the directory 'Program Files',<br>
 target.loadMibs("\"../../mibs/Program Files/RFC1213-MIB\"")
 <p>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#loadMibs(java.lang.String)">loadMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A></CODE> - is thrown while parser error occurs.
<DD><CODE>java.io.IOException</CODE> - is thrown when IO error occurs.
<DD><CODE>java.io.FileNotFoundException</CODE> - is thrown if the file is not found.</DL>
</DD>
</DL>
<HR>

<A NAME="snmpGet()"><!-- --></A><H3>
snmpGet</H3>
<PRE>
public java.lang.String <B>snmpGet</B>()</PRE>
<DL>
<DD>Queries the target and returns as a string 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: errorCodes SNMP_NOT_INIT, INVALID_VERSION,
 OID_NOT_SPECIFIED, REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, 
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR,
 SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetVariable()"><!-- --></A><H3>
snmpGetVariable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>snmpGetVariable</B>()</PRE>
<DL>
<DD>Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetVariableBinding()"><!-- --></A><H3>
snmpGetVariableBinding</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A> <B>snmpGetVariableBinding</B>()</PRE>
<DL>
<DD>Queries the target and returns 
 the SNMP variable binding identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED, 
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGet(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
snmpGet</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>snmpGet</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>Gets the SNMP variable identified by specified Object Identifier.
 The following errorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetList()"><!-- --></A><H3>
snmpGetList</H3>
<PRE>
public java.lang.String[] <B>snmpGetList</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance. 
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetVariables()"><!-- --></A><H3>
snmpGetVariables</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[] <B>snmpGetVariables</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variables
 from the agent using the Object Identifier list previously set 
 in this SnmpTarget instance.  
 The following ErrorCodes can be set SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetVariableBindings()"><!-- --></A><H3>
snmpGetVariableBindings</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[] <B>snmpGetVariableBindings</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
snmpGetList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[] <B>snmpGetList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</PRE>
<DL>
<DD>Gets the list of SNMP variables identified by the Object Identifier 
 list stored in this SnmpTarget instance.  Return null if no OIDs 
 specified earlier or in case of errors.  See error data for 
 details, i.e. use getErrorString() to see the reason for failure. 
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oids</CODE> - - an Array of SnmpOID
<DT><B>Returns:</B><DD>an Array of SnmpVar if oids is not null, else returns null<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNext()"><!-- --></A><H3>
snmpGetNext</H3>
<PRE>
public java.lang.String <B>snmpGetNext</B>()</PRE>
<DL>
<DD>Queries the target and returns as a string the 
 next SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextVariable()"><!-- --></A><H3>
snmpGetNextVariable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>snmpGetNextVariable</B>()</PRE>
<DL>
<DD>Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextVariableBinding()"><!-- --></A><H3>
snmpGetNextVariableBinding</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A> <B>snmpGetNextVariableBinding</B>()</PRE>
<DL>
<DD>Queries the target and returns 
 the SNMP variable identified by the first Object Identifier 
 stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNext(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
snmpGetNext</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>snmpGetNext</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>Gets the SNMP variable identified by specified Object Identifier.
  The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
  REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
  SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextList()"><!-- --></A><H3>
snmpGetNextList</H3>
<PRE>
public java.lang.String[] <B>snmpGetNextList</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier list previously set in 
 this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextVariables()"><!-- --></A><H3>
snmpGetNextVariables</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[] <B>snmpGetNextVariables</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier list previously set in this 
 SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextVariableBindings()"><!-- --></A><H3>
snmpGetNextVariableBindings</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[] <B>snmpGetNextVariableBindings</B>()</PRE>
<DL>
<DD>Queries the agent and returns the list of SNMP variable bindings
 from the agent using the Object Identifier 
 list previously set in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR,SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetNextList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
snmpGetNextList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[] <B>snmpGetNextList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</PRE>
<DL>
<DD>Gets the list of SNMP variables identified by the Object Identifier 
 list stored in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's  defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSet(java.lang.String)"><!-- --></A><H3>
snmpSet</H3>
<PRE>
public java.lang.String <B>snmpSet</B>(java.lang.String&nbsp;value)
                         throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to do an SNMP set to the target using value specified of the first 
 variable on the variable list.  This method will fail if MIB with 
 this variable is not loaded of this is not a leaf node in the MIB.  
 Throws DataException  if no OID is specified earlier or in case of errors.
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED, 
	REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR,MIB_NODE_UNAVAIL,
 OID_NOT_LEAF,  ERR_CREATING_VARIABLE, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>as a string the value returned by the target.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSet(java.lang.String, byte)"><!-- --></A><H3>
snmpSet</H3>
<PRE>
public java.lang.String <B>snmpSet</B>(java.lang.String&nbsp;value,
                                byte&nbsp;type)
                         throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to do an SNMP set to the target of the first variable on the 
 variable list using value specified.  
 Throws DataException  if no OID is specified earlier or in case of errors.i
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
  REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, ERR_CREATING_VARIABLE, SNMP error's
 defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>as a string the value that is set.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSetVariable(com.adventnet.snmp.snmp2.SnmpVar)"><!-- --></A><H3>
snmpSetVariable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>snmpSetVariable</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;var)
                        throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to do an SNMP set with specified value to the target and returns 
 the SNMP variable identified by the first Object Identifier stored 
 in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
  REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSetVariableList(com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
snmpSetVariableList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[] <B>snmpSetVariableList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                                  throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to do an SNMP set, with values specified, the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpTarget instance.  
 The following ErrorCodes can be set:SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN,SECURITYEXP_CONNECTING_REMOTE_HOST,
  UNKNOWN_ERR,SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
 else returns the VarBinds present in the response
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSetList(java.lang.String[])"><!-- --></A><H3>
snmpSetList</H3>
<PRE>
public java.lang.String[] <B>snmpSetList</B>(java.lang.String[]&nbsp;values)
                               throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method sets the list of SNMP variable bindings on the agent using 
 the Object Identifier list previously set in this SnmpTarget instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
  REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST,UNKNOWN_ERR, MIB_NODE_UNAVAIL OID_NOT_LEAF
 ERR_CREATING_VARIABLE ILLEGAL_ARG,SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSetVariables(com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
snmpSetVariables</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[] <B>snmpSetVariables</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                           throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to do an SNMP set, with values specified, the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpTarget instance.  
 The following ErrorCodes can be set:SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN,SECURITYEXP_CONNECTING_REMOTE_HOST,
  UNKNOWN_ERR,SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])"><!-- --></A><H3>
snmpSendTrap</H3>
<PRE>
public void <B>snmpSendTrap</B>(java.lang.String&nbsp;enterprise,
                         java.lang.String&nbsp;agenthost,
                         int&nbsp;genericType,
                         int&nbsp;specificType,
                         long&nbsp;uptime,
                         java.lang.String[]&nbsp;values)
                  throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to send an SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in this 
 SnmpTarget instance, and the values specified.  
 It will send a notification with appropriate changes 
 if version is not v1.
 The following ErrorCodes can be set: INVALID_GENERIC_TYPE, INVALID_VERSION,
  REQ_TIMEDOUT, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN 
  SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enterprise</CODE> - This is the OID of the management enterprise that defines the trap message in String format.<DD><CODE>agenthost</CODE> - Contains the source IP address/host name from which the Trap was sent.<DD><CODE>genericType</CODE> - Contains the value based on the type of trap.<DD><CODE>specificType</CODE> - The specific trap type indicates the specific trap as defined in an enterprise-specific MIB.<DD><CODE>uptime</CODE> - The sysUptime value. The uptime value is specified in milliseconds.<DD><CODE>values</CODE> - It contains an array of String values corresponding to the oids in the oidList.
<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
snmpSendTrap</H3>
<PRE>
public void <B>snmpSendTrap</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;enterprise,
                         java.lang.String&nbsp;agenthost,
                         int&nbsp;genericType,
                         int&nbsp;specificType,
                         long&nbsp;uptime,
                         <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                  throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to send an SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in this 
 SnmpTarget instance, and the values specified.  
 It will send a notification with appropriate changes if version is not v1
 The following ErrorCodes can be set: INVALID_GENERIC_TYPE, INVALID_VERSION,
 REQ_TIMEDOUT,IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's 
 defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enterprise</CODE> - This is the OID of the management enterprise that defines the trap message in SnmpOID format.<DD><CODE>agenthost</CODE> - Contains the source IP address/host name from which the Trap was sent.<DD><CODE>genericType</CODE> - Contains the value based on the type of trap.<DD><CODE>specificType</CODE> - The specific trap type indicates the specific trap as defined in an enterprise-specific MIB.<DD><CODE>uptime</CODE> - The sysUptime value. The uptime value is specified in milliseconds.<DD><CODE>values</CODE> - It contains an array of SnmpVar values corresponding to the oids in the oidList.
<DT><B>Returns:</B><DD>null, if no OID is specified earlier or in case of errors.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendNotification(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
snmpSendNotification</H3>
<PRE>
public void <B>snmpSendNotification</B>(long&nbsp;uptime,
                                 <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;trapOid,
                                 <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                          throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to send an SNMPV2 notification pdu with parameters specified and variable
	bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.  
 The following ErrorCodes can be set:  INVALID_VERSION, REQ_TIMEDOUT, IP_ADDR_NOT_SPECIFIED 
  SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST
  UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uptime</CODE> - The sysUptime value. This is the first oid sent with the
                 notification. The corresponding oid need not be present 
                 in the oidList.<DD><CODE>values</CODE> - It contains an array of SnmpVar values corresponding to the
                 oids in the oidList.<DD><CODE>trapOid</CODE> - This should contain the oid corresponding to the snmpTrapOID.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown for invalid values.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendNotification(long, java.lang.String, java.lang.String[])"><!-- --></A><H3>
snmpSendNotification</H3>
<PRE>
public void <B>snmpSendNotification</B>(long&nbsp;uptime,
                                 java.lang.String&nbsp;trapOid,
                                 java.lang.String[]&nbsp;values)
                          throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to send an SNMPV2 notification pdu with parameters specified and variable
	bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.  
  The following ErrorCodes can be set: OID_NOT_SPECIFIED INVALID_VERSION, 
 REQ_TIMEDOUT, IP_ADDR_NOT_SPECIFIED SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR , SNMP error's
 defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uptime</CODE> - The sysUptime value. This is the first oid sent with the
                 notification. The corresponding oid need not be present 
                 in the oidList.<DD><CODE>values</CODE> - Contains an array of string values corresponding to the
                 oids in the oidList.<DD><CODE>trapOid</CODE> - This should contain the oid string corresponding to the snmpTrapOID.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown for invalid values.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendInformRequest(long, java.lang.String, java.lang.String[])"><!-- --></A><H3>
snmpSendInformRequest</H3>
<PRE>
public java.lang.String[] <B>snmpSendInformRequest</B>(long&nbsp;uptime,
                                                java.lang.String&nbsp;trapOid,
                                                java.lang.String[]&nbsp;values)
                                         throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is to send an SNMPV2 inform pdu with parameters specified and variable
  bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.  
  The following ErrorCodes can be set: OID_NOT_SPECIFIED INVALID_VERSION, REQ_TIMEDOUT,
 IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN,
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, EMPTY_VAR_BIND, SNMP error's
 defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uptime</CODE> - The sysUptime value. This is the first oid sent with the
                 notification. The corresponding oid need not be present 
                 in the oidList.<DD><CODE>values</CODE> - Contains an array of string values corresponding to the
                 oids in the oidList.<DD><CODE>trapOid</CODE> - This should contain the oid string corresponding to the snmpTrapOID.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown for invalid values.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendInformAcknowledgement(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[], int)"><!-- --></A><H3>
snmpSendInformAcknowledgement</H3>
<PRE>
public void <B>snmpSendInformAcknowledgement</B>(long&nbsp;uptime,
                                          <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid,
                                          <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values,
                                          int&nbsp;reqID)
                                   throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is to send the inform acknowledgement PDU to the inform request sender if the setAutoInformResponse 
 is set as false. The PDU is send with  parameters specified and variable bindings using object ids from the 
 Object Identifier list previously set in this SnmpTarget instance, and the values specified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uptime</CODE> - The sysUptime value. The uptime value is specified in milliseconds.<DD><CODE>oid</CODE> - This should contain the oid corresponding to the snmpTrapOID as SnmpOID object.<DD><CODE>values</CODE> - Contains an array of SnmpVar values corresponding to the oids in the oidList.<DD><CODE>reqID</CODE> - This is the requestID of the Informrequest.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown for invalid values.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpSendInformRequest(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
snmpSendInformRequest</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[] <B>snmpSendInformRequest</B>(long&nbsp;uptime,
                                           <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;trapOid,
                                           <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                                    throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>This method is used to send an SNMPV2 inform pdu with parameters specified and variable
  bindings using object ids from the Object Identifier list previously 
  set in this SnmpTarget instance, and the values specified.  
  The following ErrorCodes can be set: INVALID_VERSION, REQ_TIMEDOUT, IP_ADDR_NOT_SPECIFIED 
  SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST
  UNKNOWN_ERR EMPTY_VAR_BIND,SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uptime</CODE> - The sysUptime value. This is the first oid sent with the
                 notification. The corresponding oid need not be present 
                 in the oidList.<DD><CODE>values</CODE> - Contains an array of SnmpVar values corresponding to the
                 oids in the oidList.<DD><CODE>trapOid</CODE> - This should contain the oid corresponding to the snmpTrapOID.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown for invalid values.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addObjectID(java.lang.String)"><!-- --></A><H3>
addObjectID</H3>
<PRE>
public int <B>addObjectID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>This method adds an SnmpOID specified by string to the SnmpOID list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - - the string may be in any format like 1.5.0 or sysName
<DT><B>Returns:</B><DD>the index of the added entry  in the oidList</DL>
</DD>
</DL>
<HR>

<A NAME="addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
addSnmpOID</H3>
<PRE>
public int <B>addSnmpOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>This method adds an SnmpOID to the previously set list of SnmpOID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - SnmpOID to be added.
<DT><B>Returns:</B><DD>the index of the added entry in the oidList</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectID(int)"><!-- --></A><H3>
getObjectID</H3>
<PRE>
public java.lang.String <B>getObjectID</B>(int&nbsp;index)</PRE>
<DL>
<DD>This method returns the object ID at index as a string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - index in the oidlist whose value is looked up.
<DT><B>Returns:</B><DD>an object ID as a  string in format like iso.org.dod.internet.. 
 if mibs loaded or as a string  in format like .1.3.6.1.. 
 if mibs is not loaded or null if no oid is set previously in that index.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectID()"><!-- --></A><H3>
getObjectID</H3>
<PRE>
public java.lang.String <B>getObjectID</B>()</PRE>
<DL>
<DD>This method returns the first object ID as a string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the first object ID as a  string in format like iso.org.dod.internet.. 	 
 if mibs loaded or as a string  in format like .1.3.6.1.. 
 if mibs is not loaded or null if no oid is set previously.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>This method sets the object ID specified by the String value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - the oid to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(int, java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(int&nbsp;index,
                        java.lang.String&nbsp;s)</PRE>
<DL>
<DD>This method sets the object ID value at index based on specified string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - index where the oid is to be set in the oidlist<DD><CODE>s</CODE> - oid to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectIDList()"><!-- --></A><H3>
getObjectIDList</H3>
<PRE>
public java.lang.String[] <B>getObjectIDList</B>()</PRE>
<DL>
<DD>This method returns the list of object IDs  as a string array or null, if no OIDs is set previously.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String[] of oids.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectIDList(java.lang.String[])"><!-- --></A><H3>
setObjectIDList</H3>
<PRE>
public void <B>setObjectIDList</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>This method sets the list of object IDs  based on the specified string array.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - a String array of OIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpOID()"><!-- --></A><H3>
getSnmpOID</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A> <B>getSnmpOID</B>()</PRE>
<DL>
<DD>This method returns the first SnmpOID from the list of object IDs 
 or null, if no OID is set previously.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the first SnmpOID.</DL>
</DD>
</DL>
<HR>

<A NAME="getDebug()"><!-- --></A><H3>
getDebug</H3>
<PRE>
public boolean <B>getDebug</B>()</PRE>
<DL>
<DD>This method returns true if debug mode is enabled and false otherwise
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setDebug(boolean)"><!-- --></A><H3>
setDebug</H3>
<PRE>
public void <B>setDebug</B>(boolean&nbsp;debug)</PRE>
<DL>
<DD>This method determines if debug output will be printed
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>debug</CODE> - true to get the debug message and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getMibModules()"><!-- --></A><H3>
getMibModules</H3>
<PRE>
public java.lang.String <B>getMibModules</B>()</PRE>
<DL>
<DD>This method returns all the MIBs that are loaded in this applet/application.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a white-space separated list of mib files.</DL>
</DD>
</DL>
<HR>

<A NAME="setMibModules(java.lang.String)"><!-- --></A><H3>
setMibModules</H3>
<PRE>
public void <B>setMibModules</B>(java.lang.String&nbsp;mibs)</PRE>
<DL>
<DD>This method sets the MIB to be loaded in this applet/application.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mibs</CODE> - white-space seperated list of mib file to be loaded.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
setSnmpOID</H3>
<PRE>
public void <B>setSnmpOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>This method sets the SnmpOID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - instance of SnmpOID.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpOIDList()"><!-- --></A><H3>
getSnmpOIDList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[] <B>getSnmpOIDList</B>()</PRE>
<DL>
<DD>This method returns the list of object IDs  as an array of SnmpOID 
 or null if no OID is set previously.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an array of SnmpOIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
setSnmpOIDList</H3>
<PRE>
public void <B>setSnmpOIDList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</PRE>
<DL>
<DD>This method sets the list of object IDs  as the given array of SnmpOID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>list</CODE> - array of SnmpOIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetHost()"><!-- --></A><H3>
getTargetHost</H3>
<PRE>
public java.lang.String <B>getTargetHost</B>()</PRE>
<DL>
<DD>Gets the SNMP target hostname
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getTargetHost()">getTargetHost</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTargetHost(java.lang.String)"><!-- --></A><H3>
setTargetHost</H3>
<PRE>
public void <B>setTargetHost</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>This method sets the SNMP target hostname
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setTargetHost(java.lang.String)">setTargetHost</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetPort()"><!-- --></A><H3>
getTargetPort</H3>
<PRE>
public int <B>getTargetPort</B>()</PRE>
<DL>
<DD>get the SNMP target port number
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getTargetPort()">getTargetPort</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTargetPort(int)"><!-- --></A><H3>
setTargetPort</H3>
<PRE>
public void <B>setTargetPort</B>(int&nbsp;i)</PRE>
<DL>
<DD>set the SNMP target port number
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setTargetPort(int)">setTargetPort</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getContextName()"><!-- --></A><H3>
getContextName</H3>
<PRE>
public java.lang.String <B>getContextName</B>()</PRE>
<DL>
<DD>get the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setContextName(java.lang.String)"><!-- --></A><H3>
setContextName</H3>
<PRE>
public void <B>setContextName</B>(java.lang.String&nbsp;cName)</PRE>
<DL>
<DD>set the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getContextID()"><!-- --></A><H3>
getContextID</H3>
<PRE>
public java.lang.String <B>getContextID</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 contextID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the contextID set on this target.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineID(byte[])"><!-- --></A><H3>
setEngineID</H3>
<PRE>
public void <B>setEngineID</B>(byte[]&nbsp;eid)</PRE>
<DL>
<DD>Sets the Snmp V3 EngineID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>eid</CODE> - The eid to be set on this target.</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineID()"><!-- --></A><H3>
getEngineID</H3>
<PRE>
public byte[] <B>getEngineID</B>()</PRE>
<DL>
<DD>Get the Snmp V3 EngineID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the eid set on this target.</DL>
</DD>
</DL>
<HR>

<A NAME="setContextID(java.lang.String)"><!-- --></A><H3>
setContextID</H3>
<PRE>
public void <B>setContextID</B>(java.lang.String&nbsp;ctxtID)</PRE>
<DL>
<DD>Sets the SNMP V3 contextID. The ContextID is internally stored as an
 array of bytes. The String <--> byte[] conversion is done using
 8859_1 character encoding scheme. If you want to use any other
 character encoding, then you can set the encoding to be used by using 
 the method setCharacterEncoding in SnmpServer (super class of this).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ctxtID</CODE> - The contextID to be set on this target.</DL>
</DD>
</DL>
<HR>

<A NAME="getPrincipal()"><!-- --></A><H3>
getPrincipal</H3>
<PRE>
public java.lang.String <B>getPrincipal</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 Principal
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrincipal(java.lang.String)"><!-- --></A><H3>
setPrincipal</H3>
<PRE>
public void <B>setPrincipal</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the SNMP V3 Principal
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setPrincipal(java.lang.String)">setPrincipal</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityModel()"><!-- --></A><H3>
getSecurityModel</H3>
<PRE>
public int <B>getSecurityModel</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 securityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityModel(int)"><!-- --></A><H3>
setSecurityModel</H3>
<PRE>
public void <B>setSecurityModel</B>(int&nbsp;securityModel)</PRE>
<DL>
<DD>Sets the SNMP V3 SecurityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthProtocol()"><!-- --></A><H3>
getAuthProtocol</H3>
<PRE>
public int <B>getAuthProtocol</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 AuthProtocol
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthProtocol(int)"><!-- --></A><H3>
setAuthProtocol</H3>
<PRE>
public void <B>setAuthProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>Sets the SNMP V3 AuthProtocol
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setAuthProtocol(int)">setAuthProtocol</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthPassword()"><!-- --></A><H3>
getAuthPassword</H3>
<PRE>
public java.lang.String <B>getAuthPassword</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 AuthPassword
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthPassword(java.lang.String)"><!-- --></A><H3>
setAuthPassword</H3>
<PRE>
public void <B>setAuthPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>Sets the SNMP V3 AuthPassword
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setAuthPassword(java.lang.String)">setAuthPassword</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivPassword()"><!-- --></A><H3>
getPrivPassword</H3>
<PRE>
public java.lang.String <B>getPrivPassword</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 PrivPassword
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivPassword(java.lang.String)"><!-- --></A><H3>
setPrivPassword</H3>
<PRE>
public void <B>setPrivPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>Sets the SNMP V3 PrivPassword
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setPrivPassword(java.lang.String)">setPrivPassword</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivProtocol()"><!-- --></A><H3>
getPrivProtocol</H3>
<PRE>
public int <B>getPrivProtocol</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 privProtocol.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivProtocol(int)"><!-- --></A><H3>
setPrivProtocol</H3>
<PRE>
public void <B>setPrivProtocol</B>(int&nbsp;privprotocol)</PRE>
<DL>
<DD>Sets the SNMP V3 PrivProtocol
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getCommunity()"><!-- --></A><H3>
getCommunity</H3>
<PRE>
public java.lang.String <B>getCommunity</B>()</PRE>
<DL>
<DD>Gets the SNMP target Community
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCommunity(java.lang.String)"><!-- --></A><H3>
setCommunity</H3>
<PRE>
public void <B>setCommunity</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the SNMP target Community
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getWriteCommunity()"><!-- --></A><H3>
getWriteCommunity</H3>
<PRE>
public java.lang.String <B>getWriteCommunity</B>()</PRE>
<DL>
<DD>Gets the SNMP target write Community to be used for set requests
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setWriteCommunity(java.lang.String)"><!-- --></A><H3>
setWriteCommunity</H3>
<PRE>
public void <B>setWriteCommunity</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the SNMP target write Community to be used for set requests
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getIgnoreSpecificControlCodes()"><!-- --></A><H3>
getIgnoreSpecificControlCodes</H3>
<PRE>
public boolean <B>getIgnoreSpecificControlCodes</B>()</PRE>
<DL>
<DD>Gets the value determining whether the new-line characters,
 tabs and carriage returns are printed or their hex values.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true indicates that they are printed as they are
 false indicates that their hex value is printed.</DL>
</DD>
</DL>
<HR>

<A NAME="setIgnoreSpecificControlCodes(boolean)"><!-- --></A><H3>
setIgnoreSpecificControlCodes</H3>
<PRE>
public void <B>setIgnoreSpecificControlCodes</B>(boolean&nbsp;specConCode)</PRE>
<DL>
<DD>Sets the value determining whether the new-line characters,
 tabs and carriage returns are printed or their hex values.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>specConCode</CODE> - true implies that they are printed as they are
 false implies that their hex value is printed.</DL>
</DD>
</DL>
<HR>

<A NAME="getTimeout()"><!-- --></A><H3>
getTimeout</H3>
<PRE>
public int <B>getTimeout</B>()</PRE>
<DL>
<DD>Gets the SNMP target timeout value
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>timeout value in Seconds. Default is 5Secs.</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeout(int)"><!-- --></A><H3>
setTimeout</H3>
<PRE>
public void <B>setTimeout</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the SNMP target timeout value
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRetries()"><!-- --></A><H3>
getRetries</H3>
<PRE>
public int <B>getRetries</B>()</PRE>
<DL>
<DD>Gets the SNMP target retries value.  Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setRetries(int)"><!-- --></A><H3>
setRetries</H3>
<PRE>
public void <B>setRetries</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the SNMP target retries value.  Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMaxRepetitions()"><!-- --></A><H3>
getMaxRepetitions</H3>
<PRE>
public int <B>getMaxRepetitions</B>()</PRE>
<DL>
<DD>Gets the SNMP target max repetitions value for a getbulk request.
 Default is 50
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setMaxRepetitions(int)"><!-- --></A><H3>
setMaxRepetitions</H3>
<PRE>
public void <B>setMaxRepetitions</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the SNMP target max repetitions value for a getbulk request. 
 Default is 50
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNonRepeaters()"><!-- --></A><H3>
getNonRepeaters</H3>
<PRE>
public int <B>getNonRepeaters</B>()</PRE>
<DL>
<DD>Gets the SNMP target non-repeaters value for a getbulk request 
 Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setNonRepeaters(int)"><!-- --></A><H3>
setNonRepeaters</H3>
<PRE>
public void <B>setNonRepeaters</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the SNMP target non-repeaters value for a getbulk request 
 Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpVersion()"><!-- --></A><H3>
getSnmpVersion</H3>
<PRE>
public int <B>getSnmpVersion</B>()</PRE>
<DL>
<DD>Gets the SNMP target SNMP Version.  0 is Version 1 (default) and
 1 is Version V2C.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpVersion(int)"><!-- --></A><H3>
setSnmpVersion</H3>
<PRE>
public void <B>setSnmpVersion</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the SNMP target SNMP Version. 0 is Version 1 (default) and
 1 is Version V2C.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setSnmpVersion(int)">setSnmpVersion</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorString()"><!-- --></A><H3>
getErrorString</H3>
<PRE>
public java.lang.String <B>getErrorString</B>()</PRE>
<DL>
<DD>Gets the error string for the request sent.     
 Before sending any request the error string will be "No Error Code Registered".
 The Error index which is the index of the error in the PDU 
 will be appended to this Error String.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error string that gets set in case of error and
 "No Error" if there is no error.</DL>
</DD>
</DL>
<HR>

<A NAME="getUserErrorCode()"><!-- --></A><H3>
getUserErrorCode</H3>
<PRE>
public int <B>getUserErrorCode</B>()</PRE>
<DL>
<DD>Gets the user defined error code for the last request.
  The user error code returns the pdu error only if the corresponding 
  user error string is set.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the pdu error status in case of error and 0 in case of no pdu error
  or no error string is added.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorCode()"><!-- --></A><H3>
getErrorCode</H3>
<PRE>
public int <B>getErrorCode</B>()</PRE>
<DL>
<DD>Gets the error code for the last request.
 Before sending any request the error code will be -1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error code in case of error and 0 if there is no error.</DL>
</DD>
</DL>
<HR>

<A NAME="getExceptionCodes()"><!-- --></A><H3>
getExceptionCodes</H3>
<PRE>
public java.util.Hashtable <B>getExceptionCodes</B>()</PRE>
<DL>
<DD>To get the list of all the Exceptions specific to SnmpV2/V3.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorCodes()"><!-- --></A><H3>
getErrorCodes</H3>
<PRE>
public java.util.Hashtable <B>getErrorCodes</B>()</PRE>
<DL>
<DD>To get the list of all the Error specific for an Snmp Request. Can be used when setAttemptPartial() is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addUserError(int, java.lang.String)"><!-- --></A><H3>
addUserError</H3>
<PRE>
public void <B>addUserError</B>(int&nbsp;errorCode,
                         java.lang.String&nbsp;errorString)</PRE>
<DL>
<DD>This method is used to add user defined error codes and the corresponding error string.
  If the specified error code already exists then the method overwrites the 
  previous error string with the one currently provided.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getUserErrorString()"><!-- --></A><H3>
getUserErrorString</H3>
<PRE>
public java.lang.String <B>getUserErrorString</B>()</PRE>
<DL>
<DD>This method is used to get the user defined error string to a specific error code.
  If the user has not defined any error string to a specific error code then it will return
  AdventNet specific error string or standard error. If AdventNet specific error code is 
  not available then it returns null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getExceptionCode()"><!-- --></A><H3>
getExceptionCode</H3>
<PRE>
public int <B>getExceptionCode</B>()</PRE>
<DL>
<DD>Gets the exception code for the last request.
 Before sending any request the exception code will be -1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the exception code in case of exception and 0 if there is no exception.</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorIndex()"><!-- --></A><H3>
getErrorIndex</H3>
<PRE>
public int <B>getErrorIndex</B>()</PRE>
<DL>
<DD>To get the error index corresponding to the errored oid in the pdu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error index in case of error and 0 if there is no error.</DL>
</DD>
</DL>
<HR>

<A NAME="getPduErrorIndex()"><!-- --></A><H3>
getPduErrorIndex</H3>
<PRE>
public int <B>getPduErrorIndex</B>()</PRE>
<DL>
<DD>To get the error index set in the PDU.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error index set in PDU in case of error and 0 if there is no error.</DL>
</DD>
</DL>
<HR>

<A NAME="getAttemptPartial()"><!-- --></A><H3>
getAttemptPartial</H3>
<PRE>
public boolean <B>getAttemptPartial</B>()</PRE>
<DL>
<DD>Returns the boolean state of whether this target will try to get
 partial data from an agent if the request is a multiple variable request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAttemptPartial(boolean)"><!-- --></A><H3>
setAttemptPartial</H3>
<PRE>
public void <B>setAttemptPartial</B>(boolean&nbsp;b)</PRE>
<DL>
<DD>Sets the boolean state of whether this target will try to get a
 partial data from an agent if the request is a multi variable request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAttemptComplete()"><!-- --></A><H3>
getAttemptComplete</H3>
<PRE>
public boolean <B>getAttemptComplete</B>()</PRE>
<DL>
<DD>Returns if the splitting pdu is enabled to get the complete data by
 splitting the varbinds into multiple request. By default pdu splitting
 is disabled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAttemptComplete(boolean)"><!-- --></A><H3>
setAttemptComplete</H3>
<PRE>
public void <B>setAttemptComplete</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Enables the flag to get the complete data from the agent by splitting
 the varbinds into multiple request.This can set if request pdu is very big.
 The number of varbinds that should to be sent per request can be set using 
 setVarBindCount() method.
 By default pdu splitting is disabled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getVarBindCount()"><!-- --></A><H3>
getVarBindCount</H3>
<PRE>
public int <B>getVarBindCount</B>()</PRE>
<DL>
<DD>Returns the number of varbinds used with the splitted pdu.
 Default value is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setVarBindCount(int)"><!-- --></A><H3>
setVarBindCount</H3>
<PRE>
public void <B>setVarBindCount</B>(int&nbsp;count)</PRE>
<DL>
<DD>Set the number of varbinds per request to get the 
 complete data from the agent by splitting
 the varbinds into multiple request in case if the request pdu is very big.
 Default value is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSendTimeoutEvents()"><!-- --></A><H3>
getSendTimeoutEvents</H3>
<PRE>
public boolean <B>getSendTimeoutEvents</B>()</PRE>
<DL>
<DD>Returns the boolean state of whether this target will send timeout
 events to a registered listener.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSendTimeoutEvents(boolean)"><!-- --></A><H3>
setSendTimeoutEvents</H3>
<PRE>
public void <B>setSendTimeoutEvents</B>(boolean&nbsp;b)</PRE>
<DL>
<DD>This should be set to true if the listener should be notified of the 	 
 timeout events in case if the request timesout.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)"><!-- --></A><H3>
addSnmpPropertyListener</H3>
<PRE>
public void <B>addSnmpPropertyListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds SnmpPropertyListener to the SnmpPropertyListener list.
 Whenever the value of target parameters like targetHostName, targetPort 
 is changed, a event of SnmpPropertyChangeEvent will be thrown to 
 the listeners in this list
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)"><!-- --></A><H3>
removeSnmpPropertyListener</H3>
<PRE>
public void <B>removeSnmpPropertyListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes the SnmpPropertyListener from the list maintained by this target.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
addResultListener</H3>
<PRE>
public void <B>addResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a listener for events from this target.  The listener listens for 
 events from any or all SNMP requests.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
removeResultListener</H3>
<PRE>
public void <B>removeResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes a listener for events from this target.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)"><!-- --></A><H3>
addV3HandShakeResultListener</H3>
<PRE>
public void <B>addV3HandShakeResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a listener to receive the events when SnmpEngineID discovery
 and time Synchronization is performed by the method 
 async_create_v3_tables.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)"><!-- --></A><H3>
removeV3HandShakeListener</H3>
<PRE>
public void <B>removeV3HandShakeListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes the listener registered for getting events.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMibOperations()"><!-- --></A><H3>
getMibOperations</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A> <B>getMibOperations</B>()</PRE>
<DL>
<DD>get the MibOperations object reference.  This allows using
 additonal MibOperations functions if needed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genTimeoutEvent</H3>
<PRE>
protected void <B>genTimeoutEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>Generates the events to the listeners
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genEvent</H3>
<PRE>
protected void <B>genEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>Generates the events to the listeners
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetAllList()"><!-- --></A><H3>
snmpGetAllList</H3>
<PRE>
public java.lang.String[][] <B>snmpGetAllList</B>()</PRE>
<DL>
<DD>Gets all instances of variables in the OID list. Used for columnar OIDs, mainly for SNMP Table Column. 
 If the OID list contains more than one table column OIDs then each table column OID will be 
 queried consecutively for each row.  The OID list must contain the OIDs of the Table column without
 instances. setMaxNumRows method sets the maximum number of rows that can be requested for all the 
 table column specified in the OID list. The maximum number of rows that can be processed by default is 1000. 
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>variables as a two dimensional array of strings
 Returns null if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetAllVariables()"><!-- --></A><H3>
snmpGetAllVariables</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[][] <B>snmpGetAllVariables</B>()</PRE>
<DL>
<DD>Gets all instances of variables in the OID list.
 The maximum number of rows that can be processed by default is 1000. 
 To increase the number of rows to be processed use setMaxNumRows().
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN,SECURITYEXP_CONNECTING_REMOTE_HOST,
 UNKNOWN_ERR, SNMP error's  defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>variables as a two dimensional array of SnmpVar's
 Useful for small tables.
 Return null if no OIDs  specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetAllVariableBindings()"><!-- --></A><H3>
snmpGetAllVariableBindings</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[][] <B>snmpGetAllVariableBindings</B>()</PRE>
<DL>
<DD>Gets all instances of variables in the OID list.
 The maximum number of rows that can be processed by default is 1000. 
 To increase the number of rows to be processed use setMaxNumRows().
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN,SECURITYEXP_CONNECTING_REMOTE_HOST,
 UNKNOWN_ERR, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>variables as a two dimensional array of SnmpVarBind's
 Useful for small tables.
 Returns null, if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetBulkList()"><!-- --></A><H3>
snmpGetBulkList</H3>
<PRE>
public java.lang.String[][] <B>snmpGetBulkList</B>()</PRE>
<DL>
<DD>Get bulk on list of variables in the OID list.  Available in SNMPv2c 
 and SNMPv3 cases.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String-valued variables as a two dimensional array of String's.
 Returns null if no OIDs specified earlier or in case of errors.<DT><B>See Also:</B><DD><CODE>data for details, i.e. use getErrorString() 
 to see the reason for failure. 
 <p>
 Please see RFC 1905 if you're not familiar with getbulk.
 Beyond the first set of non-repeater OIDS, i.e. OIDs that
 want only a single next value, the data can be viewed as a table,
 where we're getting rows upto "max repetitions" rows.
 The returned data is composed of a two-dimensional array
 where the first "nonRepeaters" columns have only the first
 data element filled in.  The remaining have the rows filled
 in as expected.  Typically, non-repeaters is 0, and we'd be
 returning a completely filled-in 2-D array of values.
 <p>
 The OID List after this request is set to the last set of OIDs
 in the returned bulk data, except for the initial non-repeaters
 for which it is set to the first and only returned OID.    
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, 
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST,
 UNKNOWN_ERR, INVALID_NON_REP SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.</CODE>, 
<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetBulkVariables()"><!-- --></A><H3>
snmpGetBulkVariables</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[][] <B>snmpGetBulkVariables</B>()</PRE>
<DL>
<DD>Get bulk on list of variables in the OID list.  Available in SNMPv2c 
 and SNMPv3 cases.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><CODE>data for details, i.e. use getErrorString() 
 to see the reason for failure. 
 <p>
 Please see RFC 1905 if you're not familiar with getbulk.
 Beyond the first set of non-repeater OIDS, i.e. OIDs that
 want only a single next value, the data can be viewed as a table,
 where we're getting rows upto "max repetitions" rows.
 The returned data is composed of a two-dimensional array
 where the first "nonRepeaters" columns have only the first
 data element filled in.  The remaining have the rows filled
 in as expected.  Typically, non-repeaters is 0, and we'd be
 returning a completely filled-in 2-D array of values.
 <p>
 The OID List after this request is set to the last set of OIDs
 in the returned bulk data, except for the initial non-repeaters
 for which it is set to the first and only returned OID.    
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED, 
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN,SECURITYEXP_CONNECTING_REMOTE_HOST,
 UNKNOWN_ERR, INVALID_NON_REP SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.</CODE>, 
<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="snmpGetBulkVariableBindings()"><!-- --></A><H3>
snmpGetBulkVariableBindings</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[][] <B>snmpGetBulkVariableBindings</B>()</PRE>
<DL>
<DD>Get bulk on list of variables in the OID list.  Available in SNMPv2c 
 and SNMPv3 cases.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>variable bindings as a two dimensional array of SnmpVarBind's.
 Returns null if no OID is specified earlier or in case of errors.<DT><B>See Also:</B><DD><CODE>data for details, i.e. use getErrorString() 
 to see the reason for failure. 
 <p>
 Please see RFC 1905 if you're not familiar with getbulk.
 Beyond the first set of non-repeater OIDS, i.e. OIDs that
 want only a single next value, the data can be viewed as a table,
 where we're getting rows upto "max repetitions" rows.
 The returned data is composed of a two-dimensional array
 where the first "nonRepeaters" columns have only the first
 data element filled in.  The remaining have the rows filled
 in as expected.  Typically, non-repeaters is 0, and we'd be
 returning a completely filled-in 2-D array of values.
 <p>
 The OID List after this request is set to the last set of OIDs
 in the returned bulk data, except for the initial non-repeaters
 for which it is set to the first and only returned OID. 
 The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION,
 OID_NOT_SPECIFIED, REQ_TIMEDOUT,EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST,
 UNKNOWN_ERR, INVALID_NON_REP, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.</CODE>, 
<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isInSubTree(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
isInSubTree</H3>
<PRE>
public static boolean <B>isInSubTree</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;rootoid,
                                  <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;objid)</PRE>
<DL>
<DD>Check if objid has rootoid as an ancestor. Return true if it does.
 This performs a straightforward comparison to see if the object-id
 starts with the rootoid. It is useful for walking through a column
 in which a walk could be terminated when the returned object id 
 is not in the sub-tree of the column oid.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityLevel()"><!-- --></A><H3>
getSecurityLevel</H3>
<PRE>
public java.lang.String <B>getSecurityLevel</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 SecurityLevel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityLevel(byte)"><!-- --></A><H3>
setSecurityLevel</H3>
<PRE>
public void <B>setSecurityLevel</B>(byte&nbsp;sLevel)</PRE>
<DL>
<DD>Sets the SNMP V3 SecurityLevel.The value will be 0 ,1 or 3.
	For other values, warning message will be given and it will
  take value as 0.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setSecurityLevel(byte)">setSecurityLevel</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isSerialize()"><!-- --></A><H3>
isSerialize</H3>
<PRE>
public boolean <B>isSerialize</B>()</PRE>
<DL>
<DD>Returns the status of Serialization of v3 tables ( USMUserTable
 and SnmpEngineTable )
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSerialize()">isSerialize</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="vetoableChange(java.beans.PropertyChangeEvent)"><!-- --></A><H3>
vetoableChange</H3>
<PRE>
public void <B>vetoableChange</B>(java.beans.PropertyChangeEvent&nbsp;e)</PRE>
<DL>
<DD>This method is called when a vetoableChange event is fired
 from the propertySetting bean. Creates new users if required
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>vetoableChange</CODE> in interface <CODE>java.beans.VetoableChangeListener</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setMaxNumRows(int)"><!-- --></A><H3>
setMaxNumRows</H3>
<PRE>
public void <B>setMaxNumRows</B>(int&nbsp;maxRows)</PRE>
<DL>
<DD>Sets the maximum number of rows that can be processed, 
 default value is 1000.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMaxNumRows()"><!-- --></A><H3>
getMaxNumRows</H3>
<PRE>
public int <B>getMaxNumRows</B>()</PRE>
<DL>
<DD>Gets the maximum number of rows that can be processed, 
 default value is 1000.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
setParams</H3>
<PRE>
public void <B>setParams</B>(java.lang.String&nbsp;host,
                      java.lang.String&nbsp;port,
                      java.lang.String&nbsp;community,
                      java.lang.String&nbsp;mib,
                      java.lang.String&nbsp;oid)</PRE>
<DL>
<DD>To set Multiple parameters like TargetHost,Port,Community,MibModule and OID.
 If any of these parameters need not be set,then it should be given as null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - target host<DD><CODE>port</CODE> - target port<DD><CODE>community</CODE> - community name<DD><CODE>mib</CODE> - mib file<DD><CODE>oid</CODE> - OID</DL>
</DD>
</DL>
<HR>

<A NAME="setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"><!-- --></A><H3>
setParams</H3>
<PRE>
public void <B>setParams</B>(java.lang.String&nbsp;host,
                      java.lang.String&nbsp;port,
                      java.lang.String&nbsp;community,
                      java.lang.String&nbsp;mib,
                      java.lang.String[]&nbsp;oidlist)</PRE>
<DL>
<DD>To set Multiple parameters like TargetHost,Port,Community,MibModule and OIDList.
 If any of these parameters need not be set,then it should be given as null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - target host<DD><CODE>port</CODE> - target port<DD><CODE>community</CODE> - community name<DD><CODE>mib</CODE> - mib file<DD><CODE>oidlist</CODE> - a String array of OIDs</DL>
</DD>
</DL>
<HR>

<A NAME="addLogClient(com.adventnet.utils.LogInterface)"><!-- --></A><H3>
addLogClient</H3>
<PRE>
public void <B>addLogClient</B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</PRE>
<DL>
<DD>Add the Log client for which the target has to redirect the log messages
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setClientID(int)"><!-- --></A><H3>
setClientID</H3>
<PRE>
public void <B>setClientID</B>(int&nbsp;client)</PRE>
<DL>
<DD>The Debug can be captured by setting this clientID. This clientID will be  returned by the 
  addLogClient() method in the LogManager class. This will enable the user to capture the packet,
  for debugging purpose.
  For capturing the packets the LogInterface should be implemented.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="enableDebugForPDU(boolean)"><!-- --></A><H3>
enableDebugForPDU</H3>
<PRE>
public void <B>enableDebugForPDU</B>(boolean&nbsp;setonpdu)</PRE>
<DL>
<DD>The debug can be set on the PDU instance itself using this method. This will enable to capture packets that 
  the user wishes from a set of packets sent/ received. To get the dumps for all the packets setDebug(boolean) 
  can be used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeLogClient()"><!-- --></A><H3>
removeLogClient</H3>
<PRE>
public void <B>removeLogClient</B>()</PRE>
<DL>
<DD>Removes the Log client for which the target has been registered to redirect 
 the log Messages.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getCompleteResponse()"><!-- --></A><H3>
getCompleteResponse</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/beans/SnmpResultObject.html">SnmpResultObject</A> <B>getCompleteResponse</B>()</PRE>
<DL>
<DD>Gets the complete data from the agent by splitting the varbinds into multiple 
 requests.This can set if request pdu is very big. The number of varbinds 
 that should be sent per request can be set using setVarBindCount() 
 method. Also, if there is any errored varbind, it will be removed and the
 response for the rest of the varbind will be obtained. The errored index
 with the corresponding error, the successful responses and the success 
 code (SUCCESS, PARTIAL or NOSUCCESS) can be obtained from 
 SnmpResultObject returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>SnmpResultObject containing the error, successful responses and
               the success code.</DL>
</DD>
</DL>
<HR>

<A NAME="addLogClient(com.adventnet.afp.log.LoggerProperties)"><!-- --></A><H3>
addLogClient</H3>
<PRE>
public void <B>addLogClient</B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps)
                  throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>Adds the Log client for which the target has to redirect the log messages.
 This method can be called when advanced method level logging mechanism 
 needs to be used. This method is used to create a new Logger. The 
 properties of the module are specified in the loggerProps.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>loggerProps</CODE> - - A LoggerProperties instance having the properties 
 of the Logger such as loggingLevel.
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="releaseResources()"><!-- --></A><H3>
releaseResources</H3>
<PRE>
public void <B>releaseResources</B>()</PRE>
<DL>
<DD>Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTarget bean instance, this method 
 can be used to immediately release the resources.
 <b>
 Close the session and api if number of targets sharing it becomes zero.
 Otherwise decrement the targets count for that session and api.</b>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#releaseResources()">releaseResources</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableEvent.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTargetBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTarget.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
