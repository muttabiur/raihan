<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:51 IST 2009 -->
<TITLE>
ClippedTable (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="ClippedTable (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ClippedTable.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  ClippedTable</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">com.adventnet.snmp.beans.SnmpServer</A>
        |
        +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">com.adventnet.snmp.beans.SnmpTarget</A>
              |
              +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">com.adventnet.snmp.beans.SnmpTable</A>
                    |
                    +--<B>com.adventnet.snmp.beans.ClippedTable</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A>, java.util.EventListener, java.lang.Runnable, java.io.Serializable, java.beans.VetoableChangeListener</DD>
</DL>
<HR>
<DL>
<DT>public class <B>ClippedTable</B><DT>extends <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></DL>

<P>
The ClippedTable class is an extention of SnmpTable for large SNMP tables.
 A bean that uses this class is the SnmpTablePanel bean in the
 com.adventnet.snmp.ui package.  Use the SnmpTablePanel bean
 when you need to display large tables.
 <p>
 
 <p>
 See the largetable.java application example in the uiapplications
 directory.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.ClippedTable">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#indeces">indeces</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTable"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SNMP_VARIABLE_BINDING_DATA">SNMP_VARIABLE_BINDING_DATA</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SNMP_VARIABLE_DATA">SNMP_VARIABLE_DATA</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#STRING_DATA">STRING_DATA</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#serialize">serialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGET">SNMPGET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETBULK">SNMPGETBULK</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETNEXT">SNMPGETNEXT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPINFORM">SNMPINFORM</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPREPORT">SNMPREPORT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPRESPONSE">SNMPRESPONSE</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPSET">SNMPSET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPTRAP">SNMPTRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPV2TRAP">SNMPV2TRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION1">VERSION1</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION2C">VERSION2C</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION3">VERSION3</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_3DES">CBC_3DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_192">CFB_AES_192</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_256">CFB_AES_256</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#ClippedTable()">ClippedTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for Applications</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#ClippedTable(java.applet.Applet)">ClippedTable</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for Applets</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#addRow(boolean, java.lang.String[])">addRow</A></B>(boolean&nbsp;status,
       java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To add a row of data into the table .Rows can be added to a table only if,
 the table is a SMIv1 table with EntryStatus defined or SMIv2 table with RowStatus defined.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#emptyStack()">emptyStack</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear the contents of origin stack</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#emptyStackInd()">emptyStackInd</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clear the contents of index stack</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#finalize()">finalize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cleans up an object when there are no more references to that object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getAllColumnNodes()">getAllColumnNodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets all the column mib nodes available in the snmpTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getColumnIndex(java.lang.String)">getColumnIndex</A></B>(java.lang.String&nbsp;colName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the index value of the column name specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getColumnMibNodes()">getColumnMibNodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the mib nodes for the columns in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getColumns()">getColumns</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns vector of names of columns in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getCurrentPage()">getCurrentPage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get currentPage</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getHoles()">getHoles</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the index of the not-implemented columns.Holes are the columns 
 that are not defined by the agent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getIndexMibNodes()">getIndexMibNodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Mibnodes for the indices in Table</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getIndexNames()">getIndexNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the names of the indices in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getInstanceStr(int)">getInstanceStr</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;used to display the index value of the selected row in table</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getLeafSyntax()">getLeafSyntax</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getModeOfGettingTable()">getModeOfGettingTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.Returns the mode of getting table</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getNext()">getNext</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the state of the button "Next" in SnmpTablePanel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getNotAccessibleIndex()">getNotAccessibleIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the values for the not-accessible indices of the snmpTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getNotAccessIndexColumns()">getNotAccessIndexColumns</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the names of the not-accessible index columns in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getNumCols()">getNumCols</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the total number of columns present in the SnmpTable</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getNumOfVisibleRows()">getNumOfVisibleRows</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the number of rows that will be visible in the SnmpTablePanel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getOverwriteCMI()">getOverwriteCMI</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the overwrite compiled mibs boolean.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getPageSize()">getPageSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of pages in table stack, i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getPolledNumRows()">getPolledNumRows</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the number of rows actually polled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getSerializedMibFileName()">getSerializedMibFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the name of the Serialized Mib file</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getSnmpVarVec(int)">getSnmpVarVec</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets a vector of SnmpVar value of the specified row in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getStringValueAt(int, int)">getStringValueAt</A></B>(int&nbsp;i,
                 int&nbsp;j)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the string value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#getTableColumnNames()">getTableColumnNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isAugmentedDisplay()">isAugmentedDisplay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns the status of table whether it is agugmented table or of its 
 original table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isAugmentedTable()">isAugmentedTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns whether the table is augmented one or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isCellEditable(int, int)">isCellEditable</A></B>(int&nbsp;rowIndex,
               int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the boolean state of a cell whether the cell is editable or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isEndOfTable()">isEndOfTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the boolean state whether the end of table is reached or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the mib will be loaded from CompiledMib files or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the mib will be loaded from Serialized Mib files or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isReadDesc()">isReadDesc</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retuns the boolean state of the reading descriptions from compiled modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#isSerializeMibs()">isSerializeMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the serializeMibs boolean</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#refresh()">refresh</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;refresh the table</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The run method does polling and updates of the table at specified polling itervals.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#run1()">run1</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method added for the purpose of Table Updation.Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setAugmentedDisplay(boolean)">setAugmentedDisplay</A></B>(boolean&nbsp;augmented)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set the status of table whether it is augumented table or of its 
 original table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setHeaderName(int, java.lang.String)">setHeaderName</A></B>(int&nbsp;index,
              java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the string value as the column header of the column given by the index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setIndex()">setIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adjust the oidList in stack for further operation 
 when getting rows from origin.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setIndexForIndex()">setIndexForIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to create a oidList from the index box ,push
 that oidlist into index stack and polling the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setIndexInd()">setIndexInd</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adjust the oidList in stack for further operation 
 when getting rows starting with given index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to load mib from compiled MIBs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to load MIB from serialized file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setModeOfGettingTable(int)">setModeOfGettingTable</A></B>(int&nbsp;mode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.set the mode of getting table</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setNext_1(boolean)">setNext_1</A></B>(boolean&nbsp;bool)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setNext(boolean)">setNext</A></B>(boolean&nbsp;bool)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setNumCols(int)">setNumCols</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the number of columns to be visible in the SnmpTable panel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setNumOfVisibleRows(int)">setNumOfVisibleRows</A></B>(int&nbsp;numVisibleRow)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the number rows to be visible in the SnmpTablePanel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the list of object IDs based on the specified string array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setOverwriteCMI(boolean)">setOverwriteCMI</A></B>(boolean&nbsp;overWrite)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to overwrite the existing compiled MIB files.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setReadDesc(boolean)">setReadDesc</A></B>(boolean&nbsp;readFlag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the flag to read descriptions from compiled mib modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A></B>(java.lang.String&nbsp;serFileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines the name of the Serialized MIB File.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setSerializeMibs(boolean)">setSerializeMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method defines whether to serialize the MibModule 
 This flag should be set before loading the MIBs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the list of object IDs given as an array of SnmpOID instances.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setStringOID(java.lang.String)">setStringOID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setStringValueAt(java.lang.String, int, int)">setStringValueAt</A></B>(java.lang.String&nbsp;data,
                 int&nbsp;i,
                 int&nbsp;j)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setsubOidList()">setsubOidList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setTableOID(java.lang.String)">setTableOID</A></B>(java.lang.String&nbsp;tableOID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify table to be used with this SnmpTable instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setvalue(java.lang.Object, int, int)">setvalue</A></B>(java.lang.Object&nbsp;aValue,
         int&nbsp;rowIndex,
         int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#showErrorMessage(java.lang.String)">showErrorMessage</A></B>(java.lang.String&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#stopCurrentThread(boolean)">stopCurrentThread</A></B>(boolean&nbsp;st)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to stop the thread from reading table data 
 Not for API users.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#stopPolling()">stopPolling</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This will stop the polling of table data.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpTable"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#addRow(boolean, java.lang.String[], java.lang.String[])">addRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#addSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)">addSnmpTableListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#checkDifferences(java.util.Vector)">checkDifferences</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#compareRow(int, java.util.Vector)">compareRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#deleteRow(java.lang.String)">deleteRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#deleteTableRow(java.lang.String)">deleteTableRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#genTableEvent(com.adventnet.snmp.beans.SnmpTableEvent)">genTableEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getCellValue(java.lang.String, int, int)">getCellValue</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumn(int)">getColumn</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumn(java.lang.String)">getColumn</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnClass(int)">getColumnClass</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnCount()">getColumnCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnMibNode(int)">getColumnMibNode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnName(int)">getColumnName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getDataType()">getDataType</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getIndices()">getIndices</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getNotAccessibleIndexColumns()">getNotAccessibleIndexColumns</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPerformSets()">getPerformSets</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPerformSets(boolean)">getPerformSets</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPollInterval()">getPollInterval</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRetrievalMode()">getRetrievalMode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(int)">getRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(java.lang.String, java.lang.String)">getRow</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRowCount()">getRowCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getTableOID()">getTableOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getValueAt(int, int)">getValueAt</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#refreshTable()">refreshTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#removeSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)">removeSnmpTableListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setCellValue(java.lang.String, java.lang.Object, int, int)">setCellValue</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setColumnsPolled(java.util.Vector)">setColumnsPolled</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setDataType(int)">setDataType</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setParams(java.lang.String, java.lang.String, java.lang.String)">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setPollInterval(int)">setPollInterval</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setRetrievalMode(boolean)">setRetrievalMode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setTableOIDWoStart(java.lang.String)">setTableOIDWoStart</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setValueAt(java.lang.Object, int, int)">setValueAt</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#startPollingTable()">startPollingTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#stopPollingTable()">stopPollingTable</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.afp.log.LoggerProperties)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addObjectID(java.lang.String)">addObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">addSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">addSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addUserError(int, java.lang.String)">addUserError</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">addV3HandShakeResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#enableDebugForPDU(boolean)">enableDebugForPDU</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptComplete()">getAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptPartial()">getAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthPassword()">getAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthProtocol()">getAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCommunity()">getCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCompleteResponse()">getCompleteResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextID()">getContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextName()">getContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getDebug()">getDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getEngineID()">getEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()">getErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCodes()">getErrorCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorIndex()">getErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()">getErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCode()">getExceptionCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCodes()">getExceptionCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxNumRows()">getMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxRepetitions()">getMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibModules()">getMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibOperations()">getMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getNonRepeaters()">getNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID()">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID(int)">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectIDList()">getObjectIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPduErrorIndex()">getPduErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrincipal()">getPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivPassword()">getPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivProtocol()">getPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getRetries()">getRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityLevel()">getSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityModel()">getSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSendTimeoutEvents()">getSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOID()">getSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOIDList()">getSnmpOIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpVersion()">getSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetHost()">getTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetPort()">getTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTimeout()">getTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorCode()">getUserErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorString()">getUserErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getVarBindCount()">getVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getWriteCommunity()">getWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isInSubTree(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)">isInSubTree</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isSerialize()">isSerialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#loadMibs(java.lang.String)">loadMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#releaseResources()">releaseResources</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeLogClient()">removeLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">removeSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">removeV3HandShakeListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptComplete(boolean)">setAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptPartial(boolean)">setAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthPassword(java.lang.String)">setAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthProtocol(int)">setAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setClientID(int)">setClientID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setCommunity(java.lang.String)">setCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextID(java.lang.String)">setContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextName(java.lang.String)">setContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setDebug(boolean)">setDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setEngineID(byte[])">setEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxNumRows(int)">setMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxRepetitions(int)">setMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMibModules(java.lang.String)">setMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setNonRepeaters(int)">setNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(int, java.lang.String)">setObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(java.lang.String)">setObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrincipal(java.lang.String)">setPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivPassword(java.lang.String)">setPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivProtocol(int)">setPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setRetries(int)">setRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityLevel(byte)">setSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityModel(int)">setSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSendTimeoutEvents(boolean)">setSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">setSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpVersion(int)">setSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetHost(java.lang.String)">setTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetPort(int)">setTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTimeout(int)">setTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setVarBindCount(int)">setVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setWriteCommunity(java.lang.String)">setWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet()">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet(com.adventnet.snmp.snmp2.SnmpOID)">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllList()">snmpGetAllList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariableBindings()">snmpGetAllVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariables()">snmpGetAllVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkList()">snmpGetBulkList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariableBindings()">snmpGetBulkVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariables()">snmpGetBulkVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList()">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext()">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext(com.adventnet.snmp.snmp2.SnmpOID)">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList()">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariable()">snmpGetNextVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBinding()">snmpGetNextVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBindings()">snmpGetNextVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariables()">snmpGetNextVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariable()">snmpGetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBinding()">snmpGetVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBindings()">snmpGetVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariables()">snmpGetVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformAcknowledgement(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[], int)">snmpSendInformAcknowledgement</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, java.lang.String, java.lang.String[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, java.lang.String, java.lang.String[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String, byte)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetList(java.lang.String[])">snmpSetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariable(com.adventnet.snmp.snmp2.SnmpVar)">snmpSetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariableList(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariableList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariables(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setErrorFlagEnable(boolean)">setErrorFlagEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.CustomizerTemplate"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from interface com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#manage_v3_tables()">manage_v3_tables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="indeces"><!-- --></A><H3>
indeces</H3>
<PRE>
public int[] <B>indeces</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="ClippedTable()"><!-- --></A><H3>
ClippedTable</H3>
<PRE>
public <B>ClippedTable</B>()</PRE>
<DL>
<DD>Use this constructor for Applications
<P>
</DL>
<HR>

<A NAME="ClippedTable(java.applet.Applet)"><!-- --></A><H3>
ClippedTable</H3>
<PRE>
public <B>ClippedTable</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Use this constructor for Applets
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="isAugmentedTable()"><!-- --></A><H3>
isAugmentedTable</H3>
<PRE>
public boolean <B>isAugmentedTable</B>()</PRE>
<DL>
<DD>returns whether the table is augmented one or not
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAugmentedDisplay(boolean)"><!-- --></A><H3>
setAugmentedDisplay</H3>
<PRE>
public void <B>setAugmentedDisplay</B>(boolean&nbsp;augmented)</PRE>
<DL>
<DD>set the status of table whether it is augumented table or of its 
 original table. Set true if the visible table is its augmented table,
 set returns false if it is a original table what specified in setTableOID
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isAugmentedDisplay()"><!-- --></A><H3>
isAugmentedDisplay</H3>
<PRE>
public boolean <B>isAugmentedDisplay</B>()</PRE>
<DL>
<DD>returns the status of table whether it is agugmented table or of its 
 original table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if the visible table is its augmented table,
 returns  false if it is a original table what specified in setTableOID.</DL>
</DD>
</DL>
<HR>

<A NAME="setTableOID(java.lang.String)"><!-- --></A><H3>
setTableOID</H3>
<PRE>
public void <B>setTableOID</B>(java.lang.String&nbsp;tableOID)
                 throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>Specify table to be used with this SnmpTable instance.
 MIB containing this table must be loaded in this VM.
 This will set the following errors codes INVALID_TABLE_OID,MIB_NODE_UNAVAIL,INVALID_TABLE_OID
  EXT_INDEX_UNAVAIL.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setTableOID(java.lang.String)">setTableOID</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - the Object ID of the table, e.g. ifTable.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown on errors.<DT><B>See Also:</B><DD><CODE>ErrorMessages.</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getColumnMibNodes()"><!-- --></A><H3>
getColumnMibNodes</H3>
<PRE>
public java.util.Vector <B>getColumnMibNodes</B>()</PRE>
<DL>
<DD>Gets the mib nodes for the columns in the table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>vector of MibNodes for columns in table specified by tableOID.</DL>
</DD>
</DL>
<HR>

<A NAME="getAllColumnNodes()"><!-- --></A><H3>
getAllColumnNodes</H3>
<PRE>
public java.util.Vector <B>getAllColumnNodes</B>()</PRE>
<DL>
<DD>Gets all the column mib nodes available in the snmpTable.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>vector of MibNodes for columns in table specified by 
 tableOID</DL>
</DD>
</DL>
<HR>

<A NAME="getColumnIndex(java.lang.String)"><!-- --></A><H3>
getColumnIndex</H3>
<PRE>
public int <B>getColumnIndex</B>(java.lang.String&nbsp;colName)</PRE>
<DL>
<DD>Gets the index value of the column name specified.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>colName</CODE> - column name of the table, e.g. ifType
<DT><B>Returns:</B><DD>the index of the column name as an int value.</DL>
</DD>
</DL>
<HR>

<A NAME="getIndexNames()"><!-- --></A><H3>
getIndexNames</H3>
<PRE>
public java.util.Vector <B>getIndexNames</B>()</PRE>
<DL>
<DD>Gets the names of the indices in the table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>vector of names of indexes in the table specified by tableOID</DL>
</DD>
</DL>
<HR>

<A NAME="addRow(boolean, java.lang.String[])"><!-- --></A><H3>
addRow</H3>
<PRE>
public void <B>addRow</B>(boolean&nbsp;status,
                   java.lang.String[]&nbsp;s)
            throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To add a row of data into the table .Rows can be added to a table only if,
 the table is a SMIv1 table with EntryStatus defined or SMIv2 table with RowStatus defined.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>status</CODE> - true if the table has EntryStatus column and false if it has RowStatus column.<DD><CODE>s</CODE> - array of values to be added in the table.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown on errors</DL>
</DD>
</DL>
<HR>

<A NAME="emptyStack()"><!-- --></A><H3>
emptyStack</H3>
<PRE>
public void <B>emptyStack</B>()</PRE>
<DL>
<DD>clear the contents of origin stack
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="emptyStackInd()"><!-- --></A><H3>
emptyStackInd</H3>
<PRE>
public void <B>emptyStackInd</B>()</PRE>
<DL>
<DD>clear the contents of index stack
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setIndexForIndex()"><!-- --></A><H3>
setIndexForIndex</H3>
<PRE>
public void <B>setIndexForIndex</B>()</PRE>
<DL>
<DD>Used to create a oidList from the index box ,push
 that oidlist into index stack and polling the table.
 Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getCurrentPage()"><!-- --></A><H3>
getCurrentPage</H3>
<PRE>
public void <B>getCurrentPage</B>()</PRE>
<DL>
<DD>get currentPage
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setIndex()"><!-- --></A><H3>
setIndex</H3>
<PRE>
public void <B>setIndex</B>()</PRE>
<DL>
<DD>adjust the oidList in stack for further operation 
 when getting rows from origin.
 Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setIndexInd()"><!-- --></A><H3>
setIndexInd</H3>
<PRE>
public void <B>setIndexInd</B>()</PRE>
<DL>
<DD>adjust the oidList in stack for further operation 
 when getting rows starting with given index.
 Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getInstanceStr(int)"><!-- --></A><H3>
getInstanceStr</H3>
<PRE>
public java.lang.String <B>getInstanceStr</B>(int&nbsp;index)</PRE>
<DL>
<DD>used to display the index value of the selected row in table
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stopCurrentThread(boolean)"><!-- --></A><H3>
stopCurrentThread</H3>
<PRE>
public void <B>stopCurrentThread</B>(boolean&nbsp;st)</PRE>
<DL>
<DD>Used to stop the thread from reading table data 
 Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <B>run</B>()</PRE>
<DL>
<DD>The run method does polling and updates of the table at specified polling itervals.
 The following errorCodes can be set SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED, 
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN,
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR, SNMP errors defined in ErrorMessages 
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#run()">run</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="run1()"><!-- --></A><H3>
run1</H3>
<PRE>
public void <B>run1</B>()</PRE>
<DL>
<DD>method added for the purpose of Table Updation.Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="refresh()"><!-- --></A><H3>
refresh</H3>
<PRE>
protected void <B>refresh</B>()</PRE>
<DL>
<DD>refresh the table
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="showErrorMessage(java.lang.String)"><!-- --></A><H3>
showErrorMessage</H3>
<PRE>
protected void <B>showErrorMessage</B>(java.lang.String&nbsp;str)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#showErrorMessage(java.lang.String)">showErrorMessage</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getHoles()"><!-- --></A><H3>
getHoles</H3>
<PRE>
public int[] <B>getHoles</B>()</PRE>
<DL>
<DD>Gets the index of the not-implemented columns.Holes are the columns 
 that are not defined by the agent.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getHoles()">getHoles</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>int[] int array of indices of columns that are not implemented 
 in agent</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpVarVec(int)"><!-- --></A><H3>
getSnmpVarVec</H3>
<PRE>
public java.util.Vector <B>getSnmpVarVec</B>(int&nbsp;i)</PRE>
<DL>
<DD>Gets a vector of SnmpVar value of the specified row in the table.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - Row index for which the SnmpVar value is required.
<DT><B>Returns:</B><DD>a vector of SnmpVar value of the specified row in the table.</DL>
</DD>
</DL>
<HR>

<A NAME="setvalue(java.lang.Object, int, int)"><!-- --></A><H3>
setvalue</H3>
<PRE>
public void <B>setvalue</B>(java.lang.Object&nbsp;aValue,
                     int&nbsp;rowIndex,
                     int&nbsp;columnIndex)</PRE>
<DL>
<DD>Sets the value for the cell specified by the row and column index. The row
 and column index represent the position of the row and column in the table,
 both starting with zero.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>aValue</CODE> - the new value to be set at the specified cell<DD><CODE>rowIndex</CODE> - the index of the row whose value is to be changed.<DD><CODE>columnIndex</CODE> - the index of the column whose value is to be changed.</DL>
</DD>
</DL>
<HR>

<A NAME="finalize()"><!-- --></A><H3>
finalize</H3>
<PRE>
protected void <B>finalize</B>()
                 throws java.lang.Throwable</PRE>
<DL>
<DD>Cleans up an object when there are no more references to that object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#finalize()">finalize</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Throwable</CODE> - in case of finalization errors
<DD><CODE>java.lang.Throwable</CODE> - - in case of finalization errors.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectIDList(java.lang.String[])"><!-- --></A><H3>
setObjectIDList</H3>
<PRE>
public void <B>setObjectIDList</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>Sets the list of object IDs based on the specified string array.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - a one dimensional array of column names</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
setSnmpOIDList</H3>
<PRE>
public void <B>setSnmpOIDList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</PRE>
<DL>
<DD>Sets the list of object IDs given as an array of SnmpOID instances.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>list</CODE> - array of SnmpOIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="getPageSize()"><!-- --></A><H3>
getPageSize</H3>
<PRE>
public int <B>getPageSize</B>()</PRE>
<DL>
<DD>Returns the number of pages in table stack, i.e. the number of pages that are done with this table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the number of pages in the table stack.</DL>
</DD>
</DL>
<HR>

<A NAME="getStringValueAt(int, int)"><!-- --></A><H3>
getStringValueAt</H3>
<PRE>
public java.lang.String <B>getStringValueAt</B>(int&nbsp;i,
                                         int&nbsp;j)</PRE>
<DL>
<DD>Gets the string value for the cell specified by the row and column index. 
 The row and column index represent the position of the row and column in 
 the table,both starting with zero.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - row index ( position of the row whose value is to be got )<DD><CODE>j</CODE> - column index ( position of the column whose value is to be got )
<DT><B>Returns:</B><DD>the String value at the specified row and column index.Null if the table OID is invalid.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html#setStringValueAt(java.lang.String, int, int)"><CODE>setStringValueAt(java.lang.String data, int i, int j).</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setStringValueAt(java.lang.String, int, int)"><!-- --></A><H3>
setStringValueAt</H3>
<PRE>
public void <B>setStringValueAt</B>(java.lang.String&nbsp;data,
                             int&nbsp;i,
                             int&nbsp;j)</PRE>
<DL>
<DD>Sets the value for the cell specified by the row and column index. The row 
 and column index represent the position of the row and column in the table,both 
 starting with zero.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>data</CODE> - new value to be set at the specified cell.<DD><CODE>i</CODE> - row index ( position of the row whose value is to be changed )<DD><CODE>j</CODE> - column index ( position of the column whose value is to be changed )</DL>
</DD>
</DL>
<HR>

<A NAME="setsubOidList()"><!-- --></A><H3>
setsubOidList</H3>
<PRE>
public void <B>setsubOidList</B>()</PRE>
<DL>
<DD>Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getModeOfGettingTable()"><!-- --></A><H3>
getModeOfGettingTable</H3>
<PRE>
public int <B>getModeOfGettingTable</B>()</PRE>
<DL>
<DD>Not for API users.Returns the mode of getting table
<P>
<DD><DL>

<DT><B>Returns:</B><DD>1 if the table will be retrieved from the first row and
 2 if the table will be retrieved from a particular index.</DL>
</DD>
</DL>
<HR>

<A NAME="setModeOfGettingTable(int)"><!-- --></A><H3>
setModeOfGettingTable</H3>
<PRE>
public void <B>setModeOfGettingTable</B>(int&nbsp;mode)</PRE>
<DL>
<DD>Not for API users.set the mode of getting table
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mode</CODE> - 1 to get the table data from the beginning and 
 2 to get the table data starting from the index.</DL>
</DD>
</DL>
<HR>

<A NAME="isEndOfTable()"><!-- --></A><H3>
isEndOfTable</H3>
<PRE>
public boolean <B>isEndOfTable</B>()</PRE>
<DL>
<DD>Returns the boolean state whether the end of table is reached or not.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true if the end of table is reached and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getNext()"><!-- --></A><H3>
getNext</H3>
<PRE>
public boolean <B>getNext</B>()</PRE>
<DL>
<DD>Returns the state of the button "Next" in SnmpTablePanel.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the true if the "Next" button is enabled and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setNext(boolean)"><!-- --></A><H3>
setNext</H3>
<PRE>
public void <B>setNext</B>(boolean&nbsp;bool)</PRE>
<DL>
<DD>Not for API users.
 Used to set the state of the Button "Next" in SnmpTablePanel.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setNext_1(boolean)"><!-- --></A><H3>
setNext_1</H3>
<PRE>
public void <B>setNext_1</B>(boolean&nbsp;bool)</PRE>
<DL>
<DD>Not for API users.
 Used to set the state of button "Next" 
 within the Operation of "Next".
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPolledNumRows()"><!-- --></A><H3>
getPolledNumRows</H3>
<PRE>
public int <B>getPolledNumRows</B>()</PRE>
<DL>
<DD>Gets the number of rows actually polled.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the number of rows actually polled.</DL>
</DD>
</DL>
<HR>

<A NAME="getIndexMibNodes()"><!-- --></A><H3>
getIndexMibNodes</H3>
<PRE>
public java.util.Vector <B>getIndexMibNodes</B>()</PRE>
<DL>
<DD>Gets the Mibnodes for the indices in Table
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the vector of mibnodes for indices.</DL>
</DD>
</DL>
<HR>

<A NAME="setHeaderName(int, java.lang.String)"><!-- --></A><H3>
setHeaderName</H3>
<PRE>
public void <B>setHeaderName</B>(int&nbsp;index,
                          java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Sets the string value as the column header of the column given by the index.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index of the column whose header value has to be set.<DD><CODE>name</CODE> - the new name with which the column header has to be changed.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumns()"><!-- --></A><H3>
getColumns</H3>
<PRE>
public java.util.Vector <B>getColumns</B>()</PRE>
<DL>
<DD>Returns vector of names of columns in the table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>vector of names of the columns.</DL>
</DD>
</DL>
<HR>

<A NAME="getTableColumnNames()"><!-- --></A><H3>
getTableColumnNames</H3>
<PRE>
public java.lang.String[] <B>getTableColumnNames</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafSyntax()"><!-- --></A><H3>
getLeafSyntax</H3>
<PRE>
public java.util.Vector <B>getLeafSyntax</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNumOfVisibleRows()"><!-- --></A><H3>
getNumOfVisibleRows</H3>
<PRE>
public int <B>getNumOfVisibleRows</B>()</PRE>
<DL>
<DD>Gets the number of rows that will be visible in the SnmpTablePanel.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the number of rows to be visible in the SnmpTablePanel</DL>
</DD>
</DL>
<HR>

<A NAME="setNumOfVisibleRows(int)"><!-- --></A><H3>
setNumOfVisibleRows</H3>
<PRE>
public void <B>setNumOfVisibleRows</B>(int&nbsp;numVisibleRow)</PRE>
<DL>
<DD>Sets the number rows to be visible in the SnmpTablePanel.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>numVisibleRow</CODE> - the number of rows to be visible.</DL>
</DD>
</DL>
<HR>

<A NAME="getNumCols()"><!-- --></A><H3>
getNumCols</H3>
<PRE>
public int <B>getNumCols</B>()</PRE>
<DL>
<DD>Gets the total number of columns present in the SnmpTable
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the number of columns present in the snmpTable.</DL>
</DD>
</DL>
<HR>

<A NAME="setNumCols(int)"><!-- --></A><H3>
setNumCols</H3>
<PRE>
public void <B>setNumCols</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the number of columns to be visible in the SnmpTable panel.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - the number of columns to be visible.</DL>
</DD>
</DL>
<HR>

<A NAME="stopPolling()"><!-- --></A><H3>
stopPolling</H3>
<PRE>
public void <B>stopPolling</B>()</PRE>
<DL>
<DD>This will stop the polling of table data.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setStringOID(java.lang.String)"><!-- --></A><H3>
setStringOID</H3>
<PRE>
public void <B>setStringOID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Not for API users.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSerializeMibs(boolean)"><!-- --></A><H3>
setSerializeMibs</H3>
<PRE>
public void <B>setSerializeMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>method defines whether to serialize the MibModule 
 This flag should be set before loading the MIBs. If this is set 
 to true it will serialize the loaded MIBs. For ex: if RMON2-MIB is 
 loaded, it will serialize this module along with the Imported Modules
 viz ., RFC1271-MIB,RFC1213-MIB,TOKEN-RING-RMON and saves it in a 
 single file.The name of the serialized file can be set using the
 setSerializedMibFileName() method. In case,if serialized file name
 is not set,it will save the serialized file with the MIB file name
 along with ".ser" extension.Here, it will save it as RMON2-MIB.ser.
 Serialization is not supported in applets.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isSerializeMibs()"><!-- --></A><H3>
isSerializeMibs</H3>
<PRE>
public boolean <B>isSerializeMibs</B>()</PRE>
<DL>
<DD>gets the serializeMibs boolean
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadFromSerializedMibs(boolean)"><!-- --></A><H3>
setLoadFromSerializedMibs</H3>
<PRE>
public void <B>setLoadFromSerializedMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to load MIB from serialized file. This flag should be 
 set before loading the MIBs. If both serializeMibs and loadFromSerializedMibs 
 is set to true, it will just try to load the MIB as a serialized file.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - true or false.</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadFromCompiledMibs(boolean)"><!-- --></A><H3>
setLoadFromCompiledMibs</H3>
<PRE>
public void <B>setLoadFromCompiledMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to load mib from compiled MIBs. This flag should be set before
 loading the MIBs (By default it is set to false). If this flag is set to true, 
 it will load from compiled file( i.e; .cmi and .cds files). For ex: RMON2-MIB is 
 loaded, it will automatically load RMON2-MIB.cmi if it exists.otherwise it creates 
 compiled files by parsing and then loads from it. If this flag is set to false, the 
 mib is loaded without creating .cmi and .cds files. This is recommended in case of 
 applets where you have security restrictions for file creation. This is slightly 
 slower than loading from precompiled mibs. In Applets, precompiled mibs can be 
 loaded but it cannot create/write compiled files.  
          <p>
 If both loadFromSerializedMibs and loadFromCompiledMibs is set to true, it will just
 try to load the MIB as a serialized file.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - true or false</DL>
</DD>
</DL>
<HR>

<A NAME="setOverwriteCMI(boolean)"><!-- --></A><H3>
setOverwriteCMI</H3>
<PRE>
public void <B>setOverwriteCMI</B>(boolean&nbsp;overWrite)</PRE>
<DL>
<DD>Defines whether to overwrite the existing compiled MIB files. NOTE: This applies 
 only when the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>overWrite</CODE> - true to overwrite excisting mibfiles and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getOverwriteCMI()"><!-- --></A><H3>
getOverwriteCMI</H3>
<PRE>
public boolean <B>getOverwriteCMI</B>()</PRE>
<DL>
<DD>Gets the overwrite compiled mibs boolean.
 NOTE: This applies only when the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setReadDesc(boolean)"><!-- --></A><H3>
setReadDesc</H3>
<PRE>
public void <B>setReadDesc</B>(boolean&nbsp;readFlag)</PRE>
<DL>
<DD>Sets the flag to read descriptions from compiled mib modules. Default is true.
 Set it to false if you don't need the descriptions. NOTE: This applies only when 
 the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>readFlag</CODE> - - true or false.</DL>
</DD>
</DL>
<HR>

<A NAME="isReadDesc()"><!-- --></A><H3>
isReadDesc</H3>
<PRE>
public boolean <B>isReadDesc</B>()</PRE>
<DL>
<DD>Retuns the boolean state of the reading descriptions from compiled modules.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if reading descriptions from compiled modules is enabled and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadFromSerializedMibs()"><!-- --></A><H3>
isLoadFromSerializedMibs</H3>
<PRE>
public boolean <B>isLoadFromSerializedMibs</B>()</PRE>
<DL>
<DD>To check whether the mib will be loaded from Serialized Mib files or not.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the mib will be loaded from serialized mib files and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadFromCompiledMibs()"><!-- --></A><H3>
isLoadFromCompiledMibs</H3>
<PRE>
public boolean <B>isLoadFromCompiledMibs</B>()</PRE>
<DL>
<DD>To check whether the mib will be loaded from CompiledMib files or not.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the mib will be loaded from compiled mib files and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setSerializedMibFileName(java.lang.String)"><!-- --></A><H3>
setSerializedMibFileName</H3>
<PRE>
public void <B>setSerializedMibFileName</B>(java.lang.String&nbsp;serFileName)</PRE>
<DL>
<DD>Defines the name of the Serialized MIB File. The Serialized File will be saved
 with this filename in the directory from which the mib is loaded.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>serFileName</CODE> - Name of the serialized file.</DL>
</DD>
</DL>
<HR>

<A NAME="getSerializedMibFileName()"><!-- --></A><H3>
getSerializedMibFileName</H3>
<PRE>
public java.lang.String <B>getSerializedMibFileName</B>()</PRE>
<DL>
<DD>gets the name of the Serialized Mib file
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getNotAccessibleIndex()"><!-- --></A><H3>
getNotAccessibleIndex</H3>
<PRE>
public java.lang.String[][] <B>getNotAccessibleIndex</B>()</PRE>
<DL>
<DD>Gets the values for the not-accessible indices of the snmpTable.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getNotAccessibleIndex()">getNotAccessibleIndex</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a two dimesional String array of the values of not-accessible 
 indices of the snmpTable.Null if the table does not have any not-accessible index.</DL>
</DD>
</DL>
<HR>

<A NAME="getNotAccessIndexColumns()"><!-- --></A><H3>
getNotAccessIndexColumns</H3>
<PRE>
public java.util.Vector <B>getNotAccessIndexColumns</B>()</PRE>
<DL>
<DD>Gets the names of the not-accessible index columns in the table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a vector of names of the not-accessible index columns.Null 
 if the table does not have any not-accessible index column.</DL>
</DD>
</DL>
<HR>

<A NAME="isCellEditable(int, int)"><!-- --></A><H3>
isCellEditable</H3>
<PRE>
public boolean <B>isCellEditable</B>(int&nbsp;rowIndex,
                              int&nbsp;columnIndex)</PRE>
<DL>
<DD>Returns the boolean state of a cell whether the cell is editable or not.
 The cell is specified by the corresponding row index and column index.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#isCellEditable(int, int)">isCellEditable</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html">SnmpTable</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rowIndex</CODE> - the index of the row which has to be checked.<DD><CODE>columnIndex</CODE> - the index of the column which has to be checked.
<DT><B>Returns:</B><DD>true if the cell is editable and false if the cell is not-editable.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ClippedTable.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
