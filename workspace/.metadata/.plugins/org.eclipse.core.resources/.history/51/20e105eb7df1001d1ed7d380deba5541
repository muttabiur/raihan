<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:50 IST 2009 -->
<TITLE>
SnmpIpv6Address (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpIpv6Address (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpIpv6Address.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpIpv6Address</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">com.adventnet.snmp.snmp2.SnmpVar</A>
        |
        +--<B>com.adventnet.snmp.snmp2.SnmpIpv6Address</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpIpv6Address</B><DT>extends <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></DL>

<P>
Class of SNMP Ipv6Address Variable - Sub-class of SnmpVar.
 This class can be used to created a SnmpVar object of OCTET STRING TC such as Ipv6Address, InetAddress and InetAddressIPv6.
 It also has methods to retrieve the value in different forms(eg. String,
  byte).
 Value is stored as String of length 16 with each lower byte
 corresponding to the raw IPV6 address.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpIpv6Address">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#enc">enc</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Standard encoding string on which all encoding will be done.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#SnmpIpv6Address(byte[])">SnmpIpv6Address</A></B>(byte[]&nbsp;address)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpIpv6Address by accepting the raw 
 IP address - 16 bytes or 4 bytes for Ipv6Adderess/InetAddress datatype.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#SnmpIpv6Address(java.lang.String)">SnmpIpv6Address</A></B>(java.lang.String&nbsp;ipv6Address)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpIpv6Address with the specified host name 
 or IP address as a string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#SnmpIpv6Address(java.lang.String, java.lang.String)">SnmpIpv6Address</A></B>(java.lang.String&nbsp;ipv6Address,
                java.lang.String&nbsp;enc)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpIpv6Address with the specified host name 
 or IP address as a string.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#createVariable(java.lang.String, byte)">createVariable</A></B>(java.lang.String&nbsp;value,
               byte&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new  SnmpVar object with the specified value and of type SnmpAPI.STRING.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#getVarObject()">getVarObject</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpIpv6Address object as a printable
 string object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#Ipv6bToString(byte[])">Ipv6bToString</A></B>(byte[]&nbsp;byteValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A converter from raw IP address (byte[]) to string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#toBytes()">toBytes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To return the value of this SnmpString object as raw bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To convert the value of this SnmpString object to a printable ipv6Address format</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#toTagString()">toTagString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To convert the value of this SnmpString object to a printable 
 string where the type is tagged before the value with a tag STRING:.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html#toValue()">toValue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpString object as a printable
 string object.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.snmp2.SnmpVar"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getError()">getError</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getNumericValueAsString()">getNumericValueAsString</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getType()">getType</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getTypeString()">getTypeString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="enc"><!-- --></A><H3>
enc</H3>
<PRE>
public static java.lang.String <B>enc</B></PRE>
<DL>
<DD>The Standard encoding string on which all encoding will be done.
 This will refer to SnmpAPI for the encoding string.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpIpv6Address(java.lang.String)"><!-- --></A><H3>
SnmpIpv6Address</H3>
<PRE>
public <B>SnmpIpv6Address</B>(java.lang.String&nbsp;ipv6Address)</PRE>
<DL>
<DD>Constructs a new SnmpIpv6Address with the specified host name 
 or IP address as a string.
 This does not throw any exceptions. To ensure that a valid IpAddress
 is created, always try to use a colon format ipv6 address.
 Supplying host name to this constructor could result in delays
 caused by DNS lookups and in case a failure occurs then the toValue
 will return a null. If DNS lookups returns ipaddress as ipv4, it will create
 SnmpIpv6Address instance as with ipv4Address. 
 If a 'null' parameter is passed as an argument
 to this constructor, then the object will be initialized with the 
 IP-address "0000:0000:0000:0000:0000:0000:0000:0000".
<P>
<DT><B>Parameters:</B><DD><CODE>ipv6Address</CODE> - host name or IP address as a string.</DL>
<HR>

<A NAME="SnmpIpv6Address(java.lang.String, java.lang.String)"><!-- --></A><H3>
SnmpIpv6Address</H3>
<PRE>
public <B>SnmpIpv6Address</B>(java.lang.String&nbsp;ipv6Address,
                       java.lang.String&nbsp;enc)</PRE>
<DL>
<DD>Constructs a new SnmpIpv6Address with the specified host name 
 or IP address as a string.
 This does not throw any exceptions. To ensure that a valid IpAddress
 is created, always try to use a colon format ipv6 address.
 Supplying host name to this constructor could result in delays
 caused by DNS lookups and in case a failure occurs then the toValue
 will return a null. If DNS lookups returns ipaddress as ipv4, it will create
 SnmpIpv6Address instance as with ipv4Address. 
 If a 'null' parameter is passed as an argument
 to this constructor, then the object will be initialized with the 
 IP-address "0000:0000:0000:0000:0000:0000:0000:0000".
<P>
<DT><B>Parameters:</B><DD><CODE>ipv6Address</CODE> - host name or IP address as a string.<DD><CODE>enc</CODE> - The string for the encoding scheme to be used.</DL>
<HR>

<A NAME="SnmpIpv6Address(byte[])"><!-- --></A><H3>
SnmpIpv6Address</H3>
<PRE>
public <B>SnmpIpv6Address</B>(byte[]&nbsp;address)</PRE>
<DL>
<DD>Constructs a new SnmpIpv6Address by accepting the raw 
 IP address - 16 bytes or 4 bytes for Ipv6Adderess/InetAddress datatype.
<P>
<DT><B>Parameters:</B><DD><CODE>address</CODE> - raw IPv6 address - 16 bytes/ 4 bytes</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getVarObject()"><!-- --></A><H3>
getVarObject</H3>
<PRE>
public java.lang.Object <B>getVarObject</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpIpv6Address object as a printable
 string object. This method is the same as toValue()
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getVarObject()">getVarObject</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of SnmpIpv6Address object as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="toValue()"><!-- --></A><H3>
toValue</H3>
<PRE>
public java.lang.Object <B>toValue</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpString object as a printable
 string object. This method is the same as toString()
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toValue()">toValue</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of SnmpIpv6Address object as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="toBytes()"><!-- --></A><H3>
toBytes</H3>
<PRE>
public byte[] <B>toBytes</B>()</PRE>
<DL>
<DD>To return the value of this SnmpString object as raw bytes.
 To avoid any kind of problems with String encoding, one can use this
 method to retrive the value. Similarly one can use the 
 new SnmpString(byte[]) for creating new SnmpString object.
 With these methods none of the String encoding routines in java is 
 used. Instead it uses the bytes directly.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toBytes()">toBytes</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The value of this SnmpIpv6Address as byte value.</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>To convert the value of this SnmpString object to a printable ipv6Address format
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toString()">toString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of SnmpString object as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="Ipv6bToString(byte[])"><!-- --></A><H3>
Ipv6bToString</H3>
<PRE>
public static java.lang.String <B>Ipv6bToString</B>(byte[]&nbsp;byteValue)</PRE>
<DL>
<DD>A converter from raw IP address (byte[]) to string. This takes the 
 IP address as a byte[] and returns as a string in the form x:x:x:x:x:x:x:x .
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The value of the IPAddress as a string in the form
 x:x:x:x:x:x:x:x .</DL>
</DD>
</DL>
<HR>

<A NAME="toTagString()"><!-- --></A><H3>
toTagString</H3>
<PRE>
public java.lang.String <B>toTagString</B>()</PRE>
<DL>
<DD>To convert the value of this SnmpString object to a printable 
 string where the type is tagged before the value with a tag STRING:.
 For e.g if the SnmpString has the value 3f fe 0b 00 0c 18 1f ff 02 d0 70 ff fe 00 29 c0, then this
 method will return - STRING: 3ffe:b00:c18:1fff:2d0:70ff:fe00:29c0.
 If the SnmpString has the value of 7F 00 00 01, then this method will return
  STRING - 127.0.0.1
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toTagString()">toTagString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of SnmpString object as a printable string where 
 the type is tagged before the value with a Tag - STRING: ipv6Address value.</DL>
</DD>
</DL>
<HR>

<A NAME="createVariable(java.lang.String, byte)"><!-- --></A><H3>
createVariable</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>createVariable</B>(java.lang.String&nbsp;value,
                                     byte&nbsp;type)
                              throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates a new  SnmpVar object with the specified value and of type SnmpAPI.STRING.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - String value for creating a new SnmpVar object.<DD><CODE>type</CODE> - SnmpAPI.STRING type (a constant from SnmpAPI) for creating a 
 new SnmpVar object.
<DT><B>Returns:</B><DD>the SnmpVar object created.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown when the type is other than SnmpAPI.STRING.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpIpv6Address.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
