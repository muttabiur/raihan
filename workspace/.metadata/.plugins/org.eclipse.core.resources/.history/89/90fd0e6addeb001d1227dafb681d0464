<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:05 IST 2006 -->
<TITLE>
MibNode (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="MibNode (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibModuleCompliance.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MibNode.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.mibs</FONT>
<BR>
Class  MibNode</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.mibs.MibNode</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>MibNode</B><DT>extends java.lang.Object<DT>implements java.io.Serializable</DL>

<P>
This class represents an MIB node in the MIB module tree.
 Using the methods available in this class, we can get the
 Node information of different MacroTypes.
 <p>
 The MibNode instance can be obtained using any one of the 
 following methods after loading the corresponding MIB files.
 <p>
 <pre>
 MibOperations mibOps = new MibOperations();
 mibOps.loadMibModules("mibFile");
 <p>
 <u>Method 1</u>
 MibNode node = mibOps.getMibNode("nodeName");
 <p>
 <u>Method 2</u>
 SnmpOID oid = mibOps.getSnmpOID("nodeName");
 MibNode node = mibOps.getSnmpOID(oid);
 <p>
 <u>Method 3</u>
 MibModule module = mibOps.getMibModule("moduleName");
 MibNode mn = module.getMibNode("nodeName");
 <p>
 <u>Method 4</u>
 MibModule module = mibOps.getMibModule("moduleName");
 SnmpOID oid = mibOps.getSnmpOID("nodeName");
 MibNode node = module.getMibNode(oid);
 <p> 
 </pre>
 Getting MibNode from MibOperations class can be used, only 
 if we don't know the ModuleName.
 <p>
 It is better to avoid getting the MibNode using the methods
 getMibNode() present in the MibOperations class because 
 <ul>   
 <li>The MibNode is searched in all the loaded MibModules 
 consuming more time.
 <li>Also when a node occurs in more than one Module, the 
 first occurence of a MibNode will be returned which may 
 not be the MibNode you are looking for. 
 </ul>
 <p>
 It is derived from parsing an MIB module which contains 
 references to its parents,children and the dependents.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.mibs.MibNode">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->


<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#createSnmpVarBind(java.util.Vector, com.adventnet.snmp.snmp2.SnmpVar, java.util.Vector)">createSnmpVarBind</A></B>(java.util.Vector&nbsp;indexes,
                  <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;value,
                  java.util.Vector&nbsp;indexMibNodes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an SnmpVarBind instance with supplied parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#decodeDefval()">decodeDefval</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the decoded value of the DEFVAL field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getAccess()">getAccess</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the access value for this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getAgentCapabilities()">getAgentCapabilities</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the various clauses in AGENT-CAPABILITIES as a Vector of AgentCapabilitiesModule</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getAugments()">getAugments</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the augmented table entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getChild(int)">getChild</A></B>(int&nbsp;subId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the child node corresponding to the particular sub-id.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getChild(long)">getChild</A></B>(long&nbsp;subOid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the child node corresponding to the suboid.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getChildList()">getChildList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the child nodes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getCommonAncestorWith(com.adventnet.snmp.mibs.MibNode)">getCommonAncestorWith</A></B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the common ancestor node for this node and the specified node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getContactinfo()">getContactinfo</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of CONTACT-INFO clause in MODULE-IDENTITY macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getDefval()">getDefval</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The defval for this node can be obtained using this method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getDescription()">getDescription</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the description for this node</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getExternalIndices()">getExternalIndices</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the external indices present in the table entry</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getImpliedNode()">getImpliedNode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the implied node name present in the INDEX list of this MIB node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getImportedModuleName()">getImportedModuleName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name of the module from where this node is imported.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIndexes(com.adventnet.snmp.mibs.MibOperations)">getIndexes</A></B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the indexes as a Vector of MibNodes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIndexNames()">getIndexNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the index names defined for this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIsAugmented()">getIsAugmented</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether the entry node contains the AUGMENTS clause.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getLabel()">getLabel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name of this MIB Node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getLastupdated()">getLastupdated</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of the LAST-UPDATED clause in MODULE-IDENTITY macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getMacroType()">getMacroType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the macro-type of this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getModuleCompliance()">getModuleCompliance</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the various clauses in MODULE-COMPLIANCE macro.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getModuleName()">getModuleName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name of the module this node is defined 
	
 return the module name e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getNextLeafNode()">getNextLeafNode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the next leaf node by searching through the current module.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getNotificationsNames()">getNotificationsNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the NOTIFICATIONS clause names in NOTIFICATION-GROUP macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getNumberedOIDString()">getNumberedOIDString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the numbered OID string of the node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getObjectNames()">getObjectNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>use the getObjects method instead.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getObjects()">getObjects</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the OBJECT clause names in OBJECT-GROUP and NOTIFICATION-TYPE macro.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getOID()">getOID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the numbered OID of the node as an array of ints.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getOIDString()">getOIDString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the named OID of the node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getOIDVector()">getOIDVector</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the named OID of the node as a Vector of String.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getOIDVectorIds()">getOIDVectorIds</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the numbered OID of the node as a Vector of Integer objects.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getOrganization()">getOrganization</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of ORGANIZATION clause in MODULE-IDENTITY macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getParent()">getParent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;We can make use this method to get the parent of this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getProductrelease()">getProductrelease</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the value of PRODUCT-RELEASE clause in AGENT-CAPABILITIES macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getReference()">getReference</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets string reference for this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevdescription()">getRevdescription</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getRevisionDescriptions()</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevision()">getRevision</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getRevisions()</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevisionDescriptions()">getRevisionDescriptions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the revision descriptions as a vector of String Elements.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevisions()">getRevisions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the revisions as a Vector of String Elements.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRowName()">getRowName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name of the row sequence.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getStatus()">getStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the status value of this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getSubid()">getSubid</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getSubID()</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getSubID()">getSubID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the sub-identifier of this node's object-identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/LeafSyntax.html">LeafSyntax</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getSyntax()">getSyntax</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the syntax associated with this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getTableItems()">getTableItems</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Will give the names of the items in the row sequence.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getTableSequence()">getTableSequence</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name in the SEQUENCE OF "name" item</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getUnits()">getUnits</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of UNITS clause in OBJECT-TYPE macro</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isAncestorOf(com.adventnet.snmp.mibs.MibNode)">isAncestorOf</A></B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this node is an ancestor of the specified node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isDescendentOf(com.adventnet.snmp.mibs.MibNode)">isDescendentOf</A></B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this method we can find whether this node is descendent of the specified node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isImplied()">isImplied</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to find whether the INDEX clause contains an IMPLIED keyword.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isImportedNode()">isImportedNode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to find whether this is an imported node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isInCurrentTable(java.lang.String)">isInCurrentTable</A></B>(java.lang.String&nbsp;nodeLabel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to find whether the given node is a column of the current table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isIndex()">isIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this method we can find whether this is an index node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isLeaf()">isLeaf</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this is a leaf node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isReadable()">isReadable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this node is readable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isScalar()">isScalar</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this method we can find whether this node is Scalar or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isTable()">isTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this is a table node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isTableColumn()">isTableColumn</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this node is a table column or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isTableEntry()">isTableEntry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to find whether this node is a table entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isWriteable()">isWriteable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to know whether this node is writeable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printAccess()">printAccess</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the access value as a string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printDescription()">printDescription</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the Description string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printIndex()">printIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The names of the index nodes can be obtained using this method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printReference()">printReference</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the Reference string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printStatus()">printStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the status value as a string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#setDefval(java.lang.String)">setDefval</A></B>(java.lang.String&nbsp;defval)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the defval as defined in the MIB.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gives the name of this node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#toTagString()">toTagString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets detailed information about the node, much like the MIB definition itself.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->


<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="isImportedNode()"><!-- --></A><H3>
isImportedNode</H3>
<PRE>
public boolean <B>isImportedNode</B>()</PRE>
<DL>
<DD>Used to find whether this is an imported node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the node is imported from other MIB Module<br>
         false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getSubid()"><!-- --></A><H3>
getSubid</H3>
<PRE>
public int <B>getSubid</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getSubID()</I>
<P>
<DD>Gets the subid of this MIB Node. 
 <br>For example, the subid for the node sysName with  OID .1.3.6.1.2.1.1.5 will be 5
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>int. The subid for this node.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getSubID()"><CODE>getSubID()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSubID()"><!-- --></A><H3>
getSubID</H3>
<PRE>
public long <B>getSubID</B>()</PRE>
<DL>
<DD>Gives the sub-identifier of this node's object-identifier.
 The ObjectIdentifier have the 128 sub-identifiers, each 
 sub-identifier can have the value ranges from 0 to 4294967295.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>long. The subid of this node.<DT><B>Since:</B><DD>AdventNet SNMP API 4</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getChildList()"><!-- --></A><H3>
getChildList</H3>
<PRE>
public java.util.Vector <B>getChildList</B>()</PRE>
<DL>
<DD>Gets the child nodes.
 for example, For the node <i>system</i> in RFC1213-MIB, the childList 
 returned by this method will be the following MibNodes -
 <br><i>sysDescr, sysObjectId, sysUpTime, sysContact, sysName, 
 sysLocation, sysServices.</i>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of child nodes<br>
		   empty Vector if there is no children.
		   or if this is a leaf node.</DL>
</DD>
</DL>
<HR>

<A NAME="getChild(int)"><!-- --></A><H3>
getChild</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getChild</B>(int&nbsp;subId)</PRE>
<DL>
<DD>Gets the child node corresponding to the particular sub-id.
 The child node could be in another MIB.

 For example, the subId of sysDescr will be 1.<br>
 So that getChild on system Node with 1 as input argument 
 will return the sysDescr node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>subId</CODE> - sub-oid of the child node.
<DT><B>Returns:</B><DD>the child node corresponding to the sub-id.<br>
          null if no node with that sub-id occurs in the child list.</DL>
</DD>
</DL>
<HR>

<A NAME="getChild(long)"><!-- --></A><H3>
getChild</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getChild</B>(long&nbsp;subOid)</PRE>
<DL>
<DD>Gets the child node corresponding to the suboid.
 The child node could be another MIB.
 As per the standard, the maximum value of the 
 suboid cannot exceed the 4294967295.
 <p>
 For example, the subId of sysDescr will be 1.<br>
 So that getChild on system Node with 1 will 
 return the sysDescr node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>subOid</CODE> - The sub-oid of the child node.
<DT><B>Returns:</B><DD>the child node corresponding to the sub-id.<br>
          null if no node with that sub-id occurs in the child list.</DL>
</DD>
</DL>
<HR>

<A NAME="getAugments()"><!-- --></A><H3>
getAugments</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getAugments</B>()</PRE>
<DL>
<DD>Gets the augmented table entry.
 <p>
 If you want to know whether a table entry is augmented, then 
 the method getIsAugmented() can be used.
 <p>
 NOTE : This method is supposed to be invoked on a table entry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the augmented MibNode<br>null, if the table does not 
		   uses augmented table entry or if this node is not a
		   table entry.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIsAugmented()"><CODE>getIsAugmented()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Gives the name of this node. Similar to the getLabel() method.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String. The name of this node.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getLabel()"><CODE>getLabel()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="toTagString()"><!-- --></A><H3>
toTagString</H3>
<PRE>
public java.lang.String <B>toTagString</B>()</PRE>
<DL>
<DD>Gets detailed information about the node, much like the MIB definition itself.
 <p>
 This method gives the node information such as the OIDString, syntax, 
 access, status, description, reference. The index nodes are also printed, 
 if this is a table entry.
 <p>
 If this a table node, then table items are also printed in addition
 to the above information.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the node details</DL>
</DD>
</DL>
<HR>

<A NAME="getOID()"><!-- --></A><H3>
getOID</H3>
<PRE>
public int[] <B>getOID</B>()</PRE>
<DL>
<DD>Gives the numbered OID of the node as an array of ints.

 For example, for the node <i>sysDescr</i> in the MIB 
 RFC1213-MIB, this method will return int array containing 
 the elements 1,3,6,1,2,1,1,1
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the int array containing the OID elements.</DL>
</DD>
</DL>
<HR>

<A NAME="getOIDString()"><!-- --></A><H3>
getOIDString</H3>
<PRE>
public java.lang.String <B>getOIDString</B>()</PRE>
<DL>
<DD>Gives the named OID of the node. 

 For example, for the node <i>sysDescr</i>, in the MIB
 RFC1213-MIB, this method will return the String
 ".iso.org.dod.internet.mgmt.mib-2.system.sysDescr"
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>named OID of the node as a String.</DL>
</DD>
</DL>
<HR>

<A NAME="getNumberedOIDString()"><!-- --></A><H3>
getNumberedOIDString</H3>
<PRE>
public java.lang.String <B>getNumberedOIDString</B>()</PRE>
<DL>
<DD>Gives the numbered OID string of the node. 

 For example, for the node <i>sysDescr</i>, in the MIB
 RFC1213-MIB, this method will return ".1.3.6.1.2.1.1.1"
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>numbered OID of the node as a String.</DL>
</DD>
</DL>
<HR>

<A NAME="getOIDVector()"><!-- --></A><H3>
getOIDVector</H3>
<PRE>
public java.util.Vector <B>getOIDVector</B>()</PRE>
<DL>
<DD>Gets the named OID of the node as a Vector of String. 

 For example, for the node <i>sysDescr</i>, in the MIB
 RFC1213-MIB, this method will return the Vector whose 
 elements are iso, org, dod, internet, mgmt, mib-2, system
 and sysDescr.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector whose elements form the named OID of the node.</DL>
</DD>
</DL>
<HR>

<A NAME="getOIDVectorIds()"><!-- --></A><H3>
getOIDVectorIds</H3>
<PRE>
public java.util.Vector <B>getOIDVectorIds</B>()</PRE>
<DL>
<DD>Gives the numbered OID of the node as a Vector of Integer objects.

 For example, for the node <i>sysDescr</i>, in the MIB
 RFC1213-MIB, this method will return the Vector whose 
 elements are 1, 3, 6, 1, 2, 1, 1 and  1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector whose elements form the numbered OID of the node.</DL>
</DD>
</DL>
<HR>

<A NAME="printIndex()"><!-- --></A><H3>
printIndex</H3>
<PRE>
public java.util.Vector <B>printIndex</B>()</PRE>
<DL>
<DD>The names of the index nodes can be obtained using this method.
 This method is same as getIndexNames(). 
 <p>
 NOTE : This method is supposed to be invoked on a table entry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of the Index Names.<br>null if the node is not 
 		   a table entry or if the table entry does not have the 
		   INDEX clause.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIndexNames()"><CODE>getIndexNames()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIndexes(com.adventnet.snmp.mibs.MibOperations)"><CODE>getIndexes(com.adventnet.snmp.mibs.MibOperations)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isImplied()"><!-- --></A><H3>
isImplied</H3>
<PRE>
public boolean <B>isImplied</B>()</PRE>
<DL>
<DD>Used to find whether the INDEX clause contains an IMPLIED keyword.
 <p> 
 The IMPLIED keyword can only be present for a node having a 
 variable-length syntax i.e. OCTET STRING with variable length 
 or OBJECT IDENTIFIER. Also the IMPLIED keyword can be associated
 only with the last object in the INDEX clause.
 
 NOTE : This method is supposed to be invoked on a table entry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the IMPLIED keyword is present in the INDEX clause.<br>
	   	   false, if the IMPLIED keyword is absent in the INDEX clause or if
		   the node is other than a table entry.</DL>
</DD>
</DL>
<HR>

<A NAME="getNextLeafNode()"><!-- --></A><H3>
getNextLeafNode</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getNextLeafNode</B>()</PRE>
<DL>
<DD>Gives the next leaf node by searching through the current module. 
 <p>
 This is useful for agents looking for the OID or label for the 
 next MIB node for the getnext requests.  This assumes the MIB module
 file objects were defined in the desired order. And, it also it spans 
 multiple modules.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the next node in the tree - if the node exists,<br> 
			null - if end of the MIB tree is reached.</DL>
</DD>
</DL>
<HR>

<A NAME="createSnmpVarBind(java.util.Vector, com.adventnet.snmp.snmp2.SnmpVar, java.util.Vector)"><!-- --></A><H3>
createSnmpVarBind</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A> <B>createSnmpVarBind</B>(java.util.Vector&nbsp;indexes,
                                     <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;value,
                                     java.util.Vector&nbsp;indexMibNodes)</PRE>
<DL>
<DD>Creates an SnmpVarBind instance with supplied parameters.
 Used for creating SNMP OIDs with instance values for tables.
 Supply the value when using for SNMP set. For the get requests
 the value is null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>indexes</CODE> - The ordered list of index values which can be 
				  	SnmpVar values. this parameter can be null for 
				    non-tabular columns<DD><CODE>value</CODE> - The SnmpVar value to be used for creating the
					SnmpVarBind instance<DD><CODE>indexMibNodes</CODE> - The index nodes for this node's parent
<DT><B>Returns:</B><DD>the SnmpVarbind instance</DL>
</DD>
</DL>
<HR>

<A NAME="isTableColumn()"><!-- --></A><H3>
isTableColumn</H3>
<PRE>
public boolean <B>isTableColumn</B>()</PRE>
<DL>
<DD>Used to know whether this node is a table column or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this node is a table column<br> 
 		   false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isInCurrentTable(java.lang.String)"><!-- --></A><H3>
isInCurrentTable</H3>
<PRE>
public boolean <B>isInCurrentTable</B>(java.lang.String&nbsp;nodeLabel)</PRE>
<DL>
<DD>Used to find whether the given node is a column of the current table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>nodeLabel</CODE> - the name of the node which is to be checked whether it is in this table.
<DT><B>Returns:</B><DD>true if the node is a column of the current table.<br>
 	       false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isReadable()"><!-- --></A><H3>
isReadable</H3>
<PRE>
public boolean <B>isReadable</B>()</PRE>
<DL>
<DD>Used to know whether this node is readable.
 A node is considered readable if the ACCESS clause specifies the access to read-only, read-write or read-create.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the node is readable.<br>
	   false if not readable or if the node is not a leaf node.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isWriteable()"><CODE>isWriteable()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isLeaf()"><CODE>isLeaf()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isWriteable()"><!-- --></A><H3>
isWriteable</H3>
<PRE>
public boolean <B>isWriteable</B>()</PRE>
<DL>
<DD>Used to know whether this node is writeable.
 A mib variable is writeable if the access specifies it to read-write,write-only or read-create type.
 A writeable access in the MIB does not ensure that a Set will succeed on this variable.
 Factors contributing to failure could be agent
 implementation dependent(certain device capabilities) or
 access control on agent ( which could e.g., be community based )
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this node is writeable.<br>
         false if not writable or if the node is not a leaf node.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isReadable()"><CODE>isReadable()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isLeaf()"><CODE>isLeaf()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isScalar()"><!-- --></A><H3>
isScalar</H3>
<PRE>
public boolean <B>isScalar</B>()</PRE>
<DL>
<DD>Using this method we can find whether this node is Scalar or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the node is a Scalar variable.<br>  
	  		false otherwise.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isLeaf()"><CODE>isLeaf()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isTable()"><!-- --></A><H3>
isTable</H3>
<PRE>
public boolean <B>isTable</B>()</PRE>
<DL>
<DD>Used to know whether this is a table node.
 A table is defined in terms of a SEQUENCE of MibNodes
 forming the table. In case a table AUGMENTS another table
 the children of the table getting augmented will not be
 part of the tableItems of this node.
 A table node will usually have only one child node corresponding
 to the tableEntry node. A tableEntry node will contain
 information pertaining to the INDEX columns for the table
 or the reference to the Augmented tableEntry from which the 
 index for this table can be derived.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this node is the root of a table.<br>
 	   	   false otherwise.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isTableEntry()"><CODE>isTableEntry()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isTableEntry()"><!-- --></A><H3>
isTableEntry</H3>
<PRE>
public boolean <B>isTableEntry</B>()</PRE>
<DL>
<DD>Used to find whether this node is a table entry.
 A table entry is identified by the fact that there is an INDEX
 component defined for it or an AUGMENTS clause defined in it.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this node is a table entry e.g. ifEntry <br>
         false otherwise and also in case of table e.g ifTable.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isTable()"><CODE>isTable()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isLeaf()"><!-- --></A><H3>
isLeaf</H3>
<PRE>
public boolean <B>isLeaf</B>()</PRE>
<DL>
<DD>Used to know whether this is a leaf node. A leaf node is either a scalar object
  or a columnar object and always associated with a syntax.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this node is leaf.
	    	false otherwise.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#isScalar()"><CODE>isScalar()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getIndexes(com.adventnet.snmp.mibs.MibOperations)"><!-- --></A><H3>
getIndexes</H3>
<PRE>
public java.util.Vector <B>getIndexes</B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mibs)</PRE>
<DL>
<DD>Gives the indexes as a Vector of MibNodes.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mibs</CODE> - The MibOperations instance.
<DT><B>Returns:</B><DD>Vector of Index MibNodes.
	  	   null if not a table column.<br> 
         Vector element will be null if the MibNode is not found.</DL>
</DD>
</DL>
<HR>

<A NAME="decodeDefval()"><!-- --></A><H3>
decodeDefval</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>decodeDefval</B>()
                     throws <A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A>,
                            <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Gives the decoded value of the DEFVAL field.
 SnmpOID is supported for only numbered format, eg {{N N N}}
 This method decodes the DEFVAL value that is being defined for this node in the 
 MIB, creates and returns the corresponding SnmpVar object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Defval as SnmpVar<br>
		   null if the OID is in label format<br>
         empty String if there is no DEFVAL field
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A></CODE> - is thrown if syntax type is not one of the standard types.
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown on format errors.</DL>
</DD>
</DL>
<HR>

<A NAME="getRevisions()"><!-- --></A><H3>
getRevisions</H3>
<PRE>
public java.util.Vector <B>getRevisions</B>()</PRE>
<DL>
<DD>Gives the revisions as a Vector of String Elements.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the revision strings in a Vector.
  	   The elements will be null,if setReadDesc(boolean) is set to false.<br> 
 	   	   The size of the Vector denotes the number of revisions. Applicable to module-identity.</DL>
</DD>
</DL>
<HR>

<A NAME="getRevisionDescriptions()"><!-- --></A><H3>
getRevisionDescriptions</H3>
<PRE>
public java.util.Vector <B>getRevisionDescriptions</B>()</PRE>
<DL>
<DD>Gives the revision descriptions as a vector of String Elements.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the revision descriptions string in a Vector.
	       The elements will be null, if setReadDesc(boolean) is set to false.<br>
         The size of the Vector denotes the number of revisions. Applicable to module-identity.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjects()"><!-- --></A><H3>
getObjects</H3>
<PRE>
public java.util.Vector <B>getObjects</B>()</PRE>
<DL>
<DD>Gets the OBJECT clause names in OBJECT-GROUP and NOTIFICATION-TYPE macro.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector containing the String objects.<br>
         null, if the macro-type is other than OBJECT-GROUP and NOTIFICATION-TYPE.</DL>
</DD>
</DL>
<HR>

<A NAME="getModuleName()"><!-- --></A><H3>
getModuleName</H3>
<PRE>
public java.lang.String <B>getModuleName</B>()</PRE>
<DL>
<DD>Gets the name of the module this node is defined 
	
 return the module name e.g. RFC1213-MIB
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMacroType()"><!-- --></A><H3>
getMacroType</H3>
<PRE>
public java.lang.String <B>getMacroType</B>()</PRE>
<DL>
<DD>Gets the macro-type of this node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String corresponding to the type. The values
 are OBJECT-TYPE,OBJECT-IDENTITY,MODULE-IDENTITY etc.</DL>
</DD>
</DL>
<HR>

<A NAME="getLabel()"><!-- --></A><H3>
getLabel</H3>
<PRE>
public java.lang.String <B>getLabel</B>()</PRE>
<DL>
<DD>Gets the name of this MIB Node. 
 This method is same as toString().
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#toString()"><CODE>toString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getParent()"><!-- --></A><H3>
getParent</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getParent</B>()</PRE>
<DL>
<DD>We can make use this method to get the parent of this node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getChild(int)"><CODE>getChild(int subId)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getChildList()"><CODE>getChildList()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSyntax()"><!-- --></A><H3>
getSyntax</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/LeafSyntax.html">LeafSyntax</A> <B>getSyntax</B>()</PRE>
<DL>
<DD>Gives the syntax associated with this node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>LeafSyntax object, if the syntax is basic.<br>
         MibTC object, if the syntax is a TC.</DL>
</DD>
</DL>
<HR>

<A NAME="getAccess()"><!-- --></A><H3>
getAccess</H3>
<PRE>
public int <B>getAccess</B>()</PRE>
<DL>
<DD>Gets the access value for this node.
 The following are the return values, which are mapped as<br>
	not-accessible 	 - SnmpAPI.NOACCESS<br>
	read-only		 - SnmpAPI.RONLY<br>
	read-write		 - SnmpAPI.RWRITE<br>
	write-only		 - SnmpAPI.WONLY<br>
	read-create	 	 - SnmpAPI.RCREATE<br>
	accessible-for-notify - SnmpAPI.ACCESSFORNOTIFY
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getStatus()"><!-- --></A><H3>
getStatus</H3>
<PRE>
public java.lang.String <B>getStatus</B>()</PRE>
<DL>
<DD>Gets the status value of this node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getDescription()"><!-- --></A><H3>
getDescription</H3>
<PRE>
public java.lang.String <B>getDescription</B>()</PRE>
<DL>
<DD>Gets the description for this node
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getReference()"><!-- --></A><H3>
getReference</H3>
<PRE>
public java.lang.String <B>getReference</B>()</PRE>
<DL>
<DD>Gets string reference for this node. This clause specifies the source 
 of the definition e.g documents from standards organization
 or a document for a proprietary system.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getIndexNames()"><!-- --></A><H3>
getIndexNames</H3>
<PRE>
public java.util.Vector <B>getIndexNames</B>()</PRE>
<DL>
<DD>Gives the index names defined for this node.
 <p>
 As per the standard, every table entry should have
 either an INDEX clause or an AUGMENTS clause.
 <p>
 This method return the names that are defined in the 
 INDEX clause of table entry node.
 <p>
 The elements of the Vector returned by this method are String.
 If you need the indexes as Vector of MibNodes, the method 
 getIndexes(MibOperations) can be used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of the index names.<br>null, if the node 
		   is not a table entry or if the table entry doesnot 
		   have the INDEX clause.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getIndexes(com.adventnet.snmp.mibs.MibOperations)"><CODE>getIndexes(com.adventnet.snmp.mibs.MibOperations)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#printIndex()"><CODE>printIndex()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDefval()"><!-- --></A><H3>
getDefval</H3>
<PRE>
public java.lang.String <B>getDefval</B>()</PRE>
<DL>
<DD>The defval for this node can be obtained using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The defval for the node if present.<br>
         empty String if there is no DEFVAL field.</DL>
</DD>
</DL>
<HR>

<A NAME="setDefval(java.lang.String)"><!-- --></A><H3>
setDefval</H3>
<PRE>
public void <B>setDefval</B>(java.lang.String&nbsp;defval)</PRE>
<DL>
<DD>Sets the defval as defined in the MIB.
 The value set is not reflected in the MIB.
 To check whether the value is set, the getDefval() method can be used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>defval</CODE> - the value to be set.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getDefval()"><CODE>getDefval()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTableSequence()"><!-- --></A><H3>
getTableSequence</H3>
<PRE>
public java.lang.String <B>getTableSequence</B>()</PRE>
<DL>
<DD>Gets the name in the SEQUENCE OF "name" item
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the name of the SEQUENCE.<br>
	       null, if not a table node.</DL>
</DD>
</DL>
<HR>

<A NAME="getRowName()"><!-- --></A><H3>
getRowName</H3>
<PRE>
public java.lang.String <B>getRowName</B>()</PRE>
<DL>
<DD>Gets the name of the row sequence.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the name of the SEQUENCE.<br>
 	   	   null, if not a table entry</DL>
</DD>
</DL>
<HR>

<A NAME="getTableItems()"><!-- --></A><H3>
getTableItems</H3>
<PRE>
public java.util.Vector <B>getTableItems</B>()</PRE>
<DL>
<DD>Will give the names of the items in the row sequence.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the columnar fields of the table as a Vector.<br>
 	   	   null, if not a table node.</DL>
</DD>
</DL>
<HR>

<A NAME="getIsAugmented()"><!-- --></A><H3>
getIsAugmented</H3>
<PRE>
public boolean <B>getIsAugmented</B>()</PRE>
<DL>
<DD>Used to know whether the entry node contains the AUGMENTS clause.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the AUGMENTS clause is present in the entry node.<br>
	       false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getUnits()"><!-- --></A><H3>
getUnits</H3>
<PRE>
public java.lang.String <B>getUnits</B>()</PRE>
<DL>
<DD>Gets the value of UNITS clause in OBJECT-TYPE macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value present in the UNITS clause<br>
	 	   empty String if the UNITS clause is not present.</DL>
</DD>
</DL>
<HR>

<A NAME="getLastupdated()"><!-- --></A><H3>
getLastupdated</H3>
<PRE>
public java.lang.String <B>getLastupdated</B>()</PRE>
<DL>
<DD>Gets the value of the LAST-UPDATED clause in MODULE-IDENTITY macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of LAST-UPDATED clause<br>
	       null if the macro-type is not MODULE-IDENTITY</DL>
</DD>
</DL>
<HR>

<A NAME="getOrganization()"><!-- --></A><H3>
getOrganization</H3>
<PRE>
public java.lang.String <B>getOrganization</B>()</PRE>
<DL>
<DD>Gets the value of ORGANIZATION clause in MODULE-IDENTITY macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the  value of ORGANIZATION clause<br>
	       null, if the macro-type is not MODULE-IDENTITY</DL>
</DD>
</DL>
<HR>

<A NAME="getContactinfo()"><!-- --></A><H3>
getContactinfo</H3>
<PRE>
public java.lang.String <B>getContactinfo</B>()</PRE>
<DL>
<DD>Gets the value of CONTACT-INFO clause in MODULE-IDENTITY macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of the CONTACT-INFO clause<br>
 		    null, if the macro-type is not MODULE-IDENTITY</DL>
</DD>
</DL>
<HR>

<A NAME="getRevision()"><!-- --></A><H3>
getRevision</H3>
<PRE>
public java.lang.String <B>getRevision</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getRevisions()</I>
<P>
<DD>Gets the value of REVISION clause in MODULE-IDENTITY macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of REVISION clause<br>
         null, if the macro-type is not MODULE-IDENTITY<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevisions()"><CODE>getRevisions()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getRevdescription()"><!-- --></A><H3>
getRevdescription</H3>
<PRE>
public java.lang.String <B>getRevdescription</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>since 4.0. Instead you can use the method getRevisionDescriptions()</I>
<P>
<DD>Gets the value of DESCRIPTION field under REVISION clause in MODULE-IDENTITY macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the DESCRIPTION value<br>
	   	   null, if the macro-type is not MODULE-IDENTITY<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getRevisionDescriptions()"><CODE>getRevisionDescriptions()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getModuleCompliance()"><!-- --></A><H3>
getModuleCompliance</H3>
<PRE>
public java.util.Vector <B>getModuleCompliance</B>()</PRE>
<DL>
<DD>Gets the various clauses in MODULE-COMPLIANCE macro.
 The Vector contains all the clauses in the MODULE-COMPLIANCE macro (MODULE, OBJECTS, GROUPS etc.)
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of MibModuleCompliance object<br>
	       empty vector, if the macro-type is not MODULE-COMPLIANCE</DL>
</DD>
</DL>
<HR>

<A NAME="getAgentCapabilities()"><!-- --></A><H3>
getAgentCapabilities</H3>
<PRE>
public java.util.Vector <B>getAgentCapabilities</B>()</PRE>
<DL>
<DD>Gets the various clauses in AGENT-CAPABILITIES as a Vector of AgentCapabilitiesModule
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of AgentCapabilities object<br>
	  	   empty Vector if the macro-type is not AGENT-CAPABILITIES</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectNames()"><!-- --></A><H3>
getObjectNames</H3>
<PRE>
public java.lang.String <B>getObjectNames</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>use the getObjects method instead.</I>
<P>
<DD>Gets the OBJECT clause names in OBJECT-GROUP and NOTIFICATION-TYPE macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html#getObjects()"><CODE>getObjects()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getNotificationsNames()"><!-- --></A><H3>
getNotificationsNames</H3>
<PRE>
public java.lang.String <B>getNotificationsNames</B>()</PRE>
<DL>
<DD>Gets the NOTIFICATIONS clause names in NOTIFICATION-GROUP macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value present in the NOTIFICATIONS clause.<br>
         null, if the macro-type is not NOTIFICATION-GROUP</DL>
</DD>
</DL>
<HR>

<A NAME="getProductrelease()"><!-- --></A><H3>
getProductrelease</H3>
<PRE>
public java.lang.String <B>getProductrelease</B>()</PRE>
<DL>
<DD>Get the value of PRODUCT-RELEASE clause in AGENT-CAPABILITIES macro
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of PRODUCT-RELEASE clause.<br>
  	   null, if the macro-type is not AGENT-CAPABILITIES.</DL>
</DD>
</DL>
<HR>

<A NAME="isAncestorOf(com.adventnet.snmp.mibs.MibNode)"><!-- --></A><H3>
isAncestorOf</H3>
<PRE>
public boolean <B>isAncestorOf</B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</PRE>
<DL>
<DD>Used to know whether this node is an ancestor of the specified node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>node</CODE> - the MibNode object.
<DT><B>Returns:</B><DD>true if the node is ancestor of the specified node.<br>
 	   	   false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isDescendentOf(com.adventnet.snmp.mibs.MibNode)"><!-- --></A><H3>
isDescendentOf</H3>
<PRE>
public boolean <B>isDescendentOf</B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</PRE>
<DL>
<DD>Using this method we can find whether this node is descendent of the specified node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>node</CODE> - the MibNode object
<DT><B>Returns:</B><DD>true if this node is descendent of the specified node.<br>
	       false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getCommonAncestorWith(com.adventnet.snmp.mibs.MibNode)"><!-- --></A><H3>
getCommonAncestorWith</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getCommonAncestorWith</B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A>&nbsp;node)</PRE>
<DL>
<DD>Gives the common ancestor node for this node and the specified node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>node</CODE> - the MibNode object
<DT><B>Returns:</B><DD>the parent node which is common to both the nodes.<br>
         null, if there are no common ancestor<br>
         eg: for the nodes one under iso root and the other under ccitt root, this method will return null.</DL>
</DD>
</DL>
<HR>

<A NAME="printAccess()"><!-- --></A><H3>
printAccess</H3>
<PRE>
public java.lang.String <B>printAccess</B>()</PRE>
<DL>
<DD>Gives the access value as a string.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the access string (read-only, write-only, read-write, 
          not-accessible, read-create, accessible-for-notify)<br>
          null, if none of these.</DL>
</DD>
</DL>
<HR>

<A NAME="printStatus()"><!-- --></A><H3>
printStatus</H3>
<PRE>
public java.lang.String <B>printStatus</B>()</PRE>
<DL>
<DD>Returns the status value as a string.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="printDescription()"><!-- --></A><H3>
printDescription</H3>
<PRE>
public java.lang.String <B>printDescription</B>()</PRE>
<DL>
<DD>Returns the Description string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="printReference()"><!-- --></A><H3>
printReference</H3>
<PRE>
public java.lang.String <B>printReference</B>()</PRE>
<DL>
<DD>Returns the Reference string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getImpliedNode()"><!-- --></A><H3>
getImpliedNode</H3>
<PRE>
public java.lang.String <B>getImpliedNode</B>()</PRE>
<DL>
<DD>Gives the implied node name present in the INDEX list of this MIB node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The implied node name, if the IMPLIED keyword is present<br>
         null otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isIndex()"><!-- --></A><H3>
isIndex</H3>
<PRE>
public boolean <B>isIndex</B>()</PRE>
<DL>
<DD>Using this method we can find whether this is an index node.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if this is an index node<br>
 	       false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getExternalIndices()"><!-- --></A><H3>
getExternalIndices</H3>
<PRE>
public java.util.Vector <B>getExternalIndices</B>()</PRE>
<DL>
<DD>Gets the external indices present in the table entry
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Vector of node names which is imported from the other table entry<br>
 	       empty vector if not a tableEntry or if the node doesn't contain external indices.</DL>
</DD>
</DL>
<HR>

<A NAME="getImportedModuleName()"><!-- --></A><H3>
getImportedModuleName</H3>
<PRE>
public java.lang.String <B>getImportedModuleName</B>()</PRE>
<DL>
<DD>Gets the name of the module from where this node is imported. 
	The standard nodes and TCs are not imported since they are predefined.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibModuleCompliance.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MibNode.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
