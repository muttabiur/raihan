<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:50 IST 2009 -->
<TITLE>
SnmpIpAddress (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpIpAddress (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpInt.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpIpAddress.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.snmp.snmp2.SnmpString">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpIpAddress</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">com.adventnet.snmp.snmp2.SnmpVar</A>
        |
        +--<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">com.adventnet.snmp.snmp2.SnmpString</A>
              |
              +--<B>com.adventnet.snmp.snmp2.SnmpIpAddress</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNetworkAddress.html">SnmpNetworkAddress</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpIpAddress</B><DT>extends <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></DL>

<P>
Class of SNMP IpAddress Variable - Sub-class of SnmpVar.
 This class can be used to created a SnmpVar object of type SnmpIpAddress.
 It also has methods to retrieve the value in different forms(eg. String,
 byte).
 Value is stored as String of length 4 with each lower byte
 corresponding to the raw IP address.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpIpAddress">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.snmp2.SnmpString"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#enc">enc</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#SnmpIpAddress(byte[])">SnmpIpAddress</A></B>(byte[]&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpIpAddress by accepting the raw 
 IP address - 4 bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#SnmpIpAddress(java.lang.String)">SnmpIpAddress</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpIpAddress with the specified host name 
 or IP address as a string.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#getNumericValueAsString()">getNumericValueAsString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will throw UnsupportedOperationException since this
 is not a numeric data type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#getVarObject()">getVarObject</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the values of this SnmpIpAddress as a printable 
 String object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#netbToString(byte[])">netbToString</A></B>(byte[]&nbsp;rawIpAddr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A converter from raw IP address (byte[]) to string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#toHostName()">toHostName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To convert the object to a host name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To convert the value of this SnmpIpAddress object to a 
 printable string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#toTagString()">toTagString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To convert the value of this SnmpIpAddress object to a printable 
 string where the type is tagged before the value with a tag 
 IpAddress:.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#toValue()">toValue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpIpAddress as a String object.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.snmp2.SnmpString"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#equals(java.lang.Object)">equals</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toBytes()">toBytes</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toByteString()">toByteString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.snmp2.SnmpVar"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#createVariable(java.lang.String, byte)">createVariable</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getError()">getError</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getType()">getType</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getTypeString()">getTypeString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpIpAddress(java.lang.String)"><!-- --></A><H3>
SnmpIpAddress</H3>
<PRE>
public <B>SnmpIpAddress</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Constructs a new SnmpIpAddress with the specified host name 
 or IP address as a string.
 This does not throw any exceptions. To ensure that a valid IpAddress
 is created, always try to use a dotted format ip address.
 Supplying host name to this constructor could result in delays
 caused by DNS lookups and in case a failure occurs then the toValue
 will return a null. If a 'null' parameter is passed as an argument
 to this constructor, then the object will be initialized with the 
 IP-address "0.0.0.0".
<P>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - host name or IP address as a string.</DL>
<HR>

<A NAME="SnmpIpAddress(byte[])"><!-- --></A><H3>
SnmpIpAddress</H3>
<PRE>
public <B>SnmpIpAddress</B>(byte[]&nbsp;b)</PRE>
<DL>
<DD>Constructs a new SnmpIpAddress by accepting the raw 
 IP address - 4 bytes.
<P>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - raw IP address - 4 bytes</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getVarObject()"><!-- --></A><H3>
getVarObject</H3>
<PRE>
public java.lang.Object <B>getVarObject</B>()</PRE>
<DL>
<DD>Returns the values of this SnmpIpAddress as a printable 
 String object. This method is the same as toString() 
 Eg. Returns the IPAddress as x.x.x.x . Same as toString()
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#getVarObject()">getVarObject</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of the SnmpIpAddress as a printable string 
 Object or 'null' in case of invalid IPAddress.</DL>
</DD>
</DL>
<HR>

<A NAME="toValue()"><!-- --></A><H3>
toValue</H3>
<PRE>
public java.lang.Object <B>toValue</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpIpAddress as a String object. 
 This does not return the string corresponding to the IPAddress
 ( that is returned by the toString method), but instead returns a
 4-char String representing the four bytes comprising an IPAddress.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toValue()">toValue</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String Object
             Null if IPAddress is invalid. This happens only if 
             object has been initialised with a wrong host name.
             This does not return the string corresponding to the
             IPAddress ( that is returned by the toString method), but
             instead returns a 4-char String representing the four bytes
             comprising an ipaddress.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toValue()"><CODE>SnmpString.toValue()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpAddress.html#SnmpIpAddress(byte[])"><CODE>SnmpIpAddress(byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>To convert the value of this SnmpIpAddress object to a 
 printable string. This returns the dotted ipaddress string always.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toString()">toString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpIpAddress as a printable string Object, 
 or 'null' in case of invalid IPAddress.</DL>
</DD>
</DL>
<HR>

<A NAME="toTagString()"><!-- --></A><H3>
toTagString</H3>
<PRE>
public java.lang.String <B>toTagString</B>()</PRE>
<DL>
<DD>To convert the value of this SnmpIpAddress object to a printable 
 string where the type is tagged before the value with a tag 
 IpAddress:. For e.g if the SnmpIpAddress has the value 127.0.0.1,
 then this method will return - IpAddress: 127.0.0.1 .
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#toTagString()">toTagString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpIpAddress object as a printable 
 string where the type is tagged before the value with a tag - 
 IpAddress: .</DL>
</DD>
</DL>
<HR>

<A NAME="toHostName()"><!-- --></A><H3>
toHostName</H3>
<PRE>
public java.lang.String <B>toHostName</B>()</PRE>
<DL>
<DD>To convert the object to a host name. In case of UnknownHostName 
 or SecurityException, this will return the dotted ip address.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Host name</DL>
</DD>
</DL>
<HR>

<A NAME="netbToString(byte[])"><!-- --></A><H3>
netbToString</H3>
<PRE>
public static java.lang.String <B>netbToString</B>(byte[]&nbsp;rawIpAddr)</PRE>
<DL>
<DD>A converter from raw IP address (byte[]) to string. This takes the 
 IP address as a byte[] and returns as a string in the form x.x.x.x .
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rawIpAddr</CODE> - The IP Address as a byte[].
<DT><B>Returns:</B><DD>The value of the IPAddress as a string in the form
 x.x.x.x .</DL>
</DD>
</DL>
<HR>

<A NAME="getNumericValueAsString()"><!-- --></A><H3>
getNumericValueAsString</H3>
<PRE>
public java.lang.String <B>getNumericValueAsString</B>()</PRE>
<DL>
<DD>This method will throw UnsupportedOperationException since this
 is not a numeric data type.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html#getNumericValueAsString()">getNumericValueAsString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Nothing is returned since this method throws an exception.
<DT><B>Throws:</B>
<DD><CODE>java.lang.UnsupportedOperationException</CODE> - Since this
 is not a numeric data type.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpInt.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpIpAddress.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.snmp.snmp2.SnmpString">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
