<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:52 IST 2009 -->
<TITLE>
SnmpPoller (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpPoller (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpAugmentTable.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpPollerBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpPoller.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpPoller</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">com.adventnet.snmp.beans.SnmpServer</A>
        |
        +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">com.adventnet.snmp.beans.SnmpTarget</A>
              |
              +--<B>com.adventnet.snmp.beans.SnmpPoller</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A>, java.util.EventListener, java.lang.Runnable, java.io.Serializable, java.beans.VetoableChangeListener</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpPoller</B><DT>extends <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A><DT>implements java.lang.Runnable, java.beans.VetoableChangeListener</DL>

<P>
<p>
 This class is an SNMP Poller bean for automatic polling of one or more
 variables from a given remote agent.  
 After each poll, it generates events, i.e. ResultEvent objects,
 for which listeners can be registered.It can be used with bean builders and
 other applications, where you can set up SNMP polling and automatic updates.
 <p>
 The SnmpPoller bean is a sub-class of the SnmpTarget bean. It uses 
 SnmpTarget for polling the data. The class using SnmpPoller should 
 instantiate SnmpPoller and set up the properties like hostname, port, 
 version, community of the agent, etc., to match the agent that needs to 
 be queried. Set the ObjectID to be polled and add one or more listeners 
 for receiving the polled data. The result data can also be plotted in Graph 
 (LineGraph or BarGraph). 
 <p>
 <pre>
	SnmpPoller poller = new SnmpPoller(); // Instantiate SnmpPoller.  
	poller.setObjectID("1.3.0");  //the OID to be polled  
	poller.setTargetHost("localhost"); //the host name or IP address of the machine.  
	poller.setPollInterval(10); //polling interval in seconds. Default is 5 seconds.
	poller.setSendTimeoutEvents(true);  // to receive timeout events. 
	ResultAdapter listener = new ResultAdapter() { 
 		public void setResult(ResultEvent evt) { 
			if(evt.isSuccess())	{
				System.err.println("SnmpPoller Response: "+evt.getValue(0)); 
			}
			else	{
				System.out.println("Error String : " + evt.getErrorString());
			}
		} 
	}; 
	poller.addResultListener(listener);
 </pre>
 <p>
 In some cases it may be required that the poller should not start polling automatically. 
 To achieve this:
 <pre>
 	poller.setAutoActive(false); //to avoid polling getting started automatically
 </pre>
 Now the poller will not start polling automatically. To start polling the data:
 <pre>
	poller.restartPolling(); //to start polling the SNMP data.
 </pre>
 <p>
 For polling multiple OIDs, 
 <pre>
	 poller.setObjectIDList(oids); 
	ResultListener listener = new ResultListener() { 
		public void setResult(ResultEvent evt) { 
			if(evt.isSuccess())	{
				System.out.println("SnmpPoller Response: ");
				for(int i=0;i<oids.length;i++) 
					System.out.println(evt.getValue(i));
			}
			else	{
				System.out.println("Error String : " + evt.getErrorString());
			}  
		} 
	};
 </pre>
 <p>
 Different SnmpPoller instances on the same JVM, will reuse the SnmpAPI, 
 SnmpSession and MibOperations instance. So, for releasing these resources, 
 releaseResources() method should be called on every SnmpPoller instance 
 created and when this method is called on the final instance of SnmpPoller, 
 these will be garbage collected.
 <p>
 See the superclass SnmpTarget, for details on parameters
 and more on methods for setting up the poller parameters.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html"><CODE>SnmpTarget</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ResultEvent.html"><CODE>ResultEvent</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html"><CODE>ResultListener</CODE></A>, 
<A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpPoller">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#serialize">serialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGET">SNMPGET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETBULK">SNMPGETBULK</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETNEXT">SNMPGETNEXT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPINFORM">SNMPINFORM</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPREPORT">SNMPREPORT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPRESPONSE">SNMPRESPONSE</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPSET">SNMPSET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPTRAP">SNMPTRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPV2TRAP">SNMPV2TRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION1">VERSION1</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION2C">VERSION2C</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION3">VERSION3</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_3DES">CBC_3DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_192">CFB_AES_192</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_256">CFB_AES_256</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#SnmpPoller()">SnmpPoller</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used for polling data applications.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#SnmpPoller(java.applet.Applet)">SnmpPoller</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used for applets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#SnmpPoller(int, com.adventnet.snmp.snmp2.ProtocolOptions)">SnmpPoller</A></B>(int&nbsp;protocol,
           <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used for applications which use protocols
 other than UDP/IP.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add a listener for events from this poller.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#finalize()">finalize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this cleans up if no one is using</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generate the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#getAbsoluteCounters()">getAbsoluteCounters</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get whether the value returned by the poller will be the absolute value or 
 the difference between successive counters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#getPollingStatus()">getPollingStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns whether the polling of some data is going on or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#getPollInterval()">getPollInterval</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get the current polling interval in seconds</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#isAutoActive()">isAutoActive</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns whether the poller will be started automatically i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#pausePolling()">pausePolling</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stops the polling.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove a listener for events from this poller.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#restartPolling()">restartPolling</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Restart the SNMP polling.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the work done by the polling thread.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setAbsoluteCounters(boolean)">setAbsoluteCounters</A></B>(boolean&nbsp;absoluteCounters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets whether counter values should be absolute - applies only for single
 variable requests.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setAutoActive(boolean)">setAutoActive</A></B>(boolean&nbsp;isAutoActive)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To make the poller to start polling automatically after setting either OID or
 poll interval or after adding the first result listener.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setObjectID(int, java.lang.String)">setObjectID</A></B>(int&nbsp;index,
            java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the object ID value at index based on specified string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setObjectID(java.lang.String)">setObjectID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the object ID specified by the String value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the list of object IDs  based on the specified string array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#setPollInterval(int)">setPollInterval</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set the polling interval in seconds</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#stopPolling()">stopPolling</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stop the polling and Stops the thread - disables the data collection from 
 the agent and event generation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpPoller.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></B>(java.beans.PropertyChangeEvent&nbsp;evt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the properties constrained properties.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.afp.log.LoggerProperties)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addObjectID(java.lang.String)">addObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">addSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">addSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addUserError(int, java.lang.String)">addUserError</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">addV3HandShakeResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#enableDebugForPDU(boolean)">enableDebugForPDU</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptComplete()">getAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptPartial()">getAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthPassword()">getAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthProtocol()">getAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCommunity()">getCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCompleteResponse()">getCompleteResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextID()">getContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextName()">getContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getDebug()">getDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getEngineID()">getEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()">getErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCodes()">getErrorCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorIndex()">getErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()">getErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCode()">getExceptionCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCodes()">getExceptionCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxNumRows()">getMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxRepetitions()">getMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibModules()">getMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibOperations()">getMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getNonRepeaters()">getNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID()">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID(int)">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectIDList()">getObjectIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPduErrorIndex()">getPduErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrincipal()">getPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivPassword()">getPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivProtocol()">getPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getRetries()">getRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityLevel()">getSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityModel()">getSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSendTimeoutEvents()">getSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOID()">getSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOIDList()">getSnmpOIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpVersion()">getSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetHost()">getTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetPort()">getTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTimeout()">getTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorCode()">getUserErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorString()">getUserErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getVarBindCount()">getVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getWriteCommunity()">getWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isInSubTree(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)">isInSubTree</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isSerialize()">isSerialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#loadMibs(java.lang.String)">loadMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#releaseResources()">releaseResources</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeLogClient()">removeLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">removeSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">removeV3HandShakeListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptComplete(boolean)">setAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptPartial(boolean)">setAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthPassword(java.lang.String)">setAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthProtocol(int)">setAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setClientID(int)">setClientID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setCommunity(java.lang.String)">setCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextID(java.lang.String)">setContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextName(java.lang.String)">setContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setDebug(boolean)">setDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setEngineID(byte[])">setEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxNumRows(int)">setMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxRepetitions(int)">setMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMibModules(java.lang.String)">setMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setNonRepeaters(int)">setNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrincipal(java.lang.String)">setPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivPassword(java.lang.String)">setPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivProtocol(int)">setPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setRetries(int)">setRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityLevel(byte)">setSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityModel(int)">setSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSendTimeoutEvents(boolean)">setSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">setSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpVersion(int)">setSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetHost(java.lang.String)">setTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetPort(int)">setTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTimeout(int)">setTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setVarBindCount(int)">setVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setWriteCommunity(java.lang.String)">setWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet()">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet(com.adventnet.snmp.snmp2.SnmpOID)">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllList()">snmpGetAllList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariableBindings()">snmpGetAllVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariables()">snmpGetAllVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkList()">snmpGetBulkList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariableBindings()">snmpGetBulkVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariables()">snmpGetBulkVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList()">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext()">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext(com.adventnet.snmp.snmp2.SnmpOID)">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList()">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariable()">snmpGetNextVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBinding()">snmpGetNextVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBindings()">snmpGetNextVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariables()">snmpGetNextVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariable()">snmpGetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBinding()">snmpGetVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBindings()">snmpGetVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariables()">snmpGetVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformAcknowledgement(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[], int)">snmpSendInformAcknowledgement</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, java.lang.String, java.lang.String[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, java.lang.String, java.lang.String[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String, byte)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetList(java.lang.String[])">snmpSetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariable(com.adventnet.snmp.snmp2.SnmpVar)">snmpSetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariableList(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariableList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariables(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setErrorFlagEnable(boolean)">setErrorFlagEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.CustomizerTemplate"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from interface com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#manage_v3_tables()">manage_v3_tables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpPoller()"><!-- --></A><H3>
SnmpPoller</H3>
<PRE>
public <B>SnmpPoller</B>()</PRE>
<DL>
<DD>This constructor is used for polling data applications.
<P>
</DL>
<HR>

<A NAME="SnmpPoller(java.applet.Applet)"><!-- --></A><H3>
SnmpPoller</H3>
<PRE>
public <B>SnmpPoller</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>This constructor is used for applets.
<P>
</DL>
<HR>

<A NAME="SnmpPoller(int, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
SnmpPoller</H3>
<PRE>
public <B>SnmpPoller</B>(int&nbsp;protocol,
                  <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</PRE>
<DL>
<DD>This constructor is used for applications which use protocols
 other than UDP/IP.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <B>run</B>()</PRE>
<DL>
<DD>the work done by the polling thread.  
     
	The following ErrorCodes can be set: SNMP_NOT_INIT, INVALID_VERSION,
   OID_NOT_SPECIFIED, REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED,
   SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST,  UNKNOWN_ERR, 
   SNMPERROR'S defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="finalize()"><!-- --></A><H3>
finalize</H3>
<PRE>
protected void <B>finalize</B>()
                 throws java.lang.Throwable</PRE>
<DL>
<DD>this cleans up if no one is using
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#finalize()">finalize</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Throwable</CODE> - in case of finalization errors</DL>
</DD>
</DL>
<HR>

<A NAME="getPollingStatus()"><!-- --></A><H3>
getPollingStatus</H3>
<PRE>
public boolean <B>getPollingStatus</B>()</PRE>
<DL>
<DD>returns whether the polling of some data is going on or not. If polling has stopped
 or if the polling thread has died,it will return false.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stopPolling()"><!-- --></A><H3>
stopPolling</H3>
<PRE>
public void <B>stopPolling</B>()</PRE>
<DL>
<DD>Stop the polling and Stops the thread - disables the data collection from 
 the agent and event generation.  Prior to  2.1 release, stop polling only stops the polling and not the thread.  To pause the polling stopping the thread use pausePolling.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="pausePolling()"><!-- --></A><H3>
pausePolling</H3>
<PRE>
public void <B>pausePolling</B>()</PRE>
<DL>
<DD>stops the polling.  Does not stop the thread - disables the data 
 collection from the agent and event generation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="restartPolling()"><!-- --></A><H3>
restartPolling</H3>
<PRE>
public void <B>restartPolling</B>()</PRE>
<DL>
<DD>Restart the SNMP polling.  If the thread has died for any reason, 
 reinstantiate the polling thread and start it again.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isAutoActive()"><!-- --></A><H3>
isAutoActive</H3>
<PRE>
public boolean <B>isAutoActive</B>()</PRE>
<DL>
<DD>returns whether the poller will be started automatically i.e. Once if the
 objectID or poll interval is set or the first result listener is added.
 By default this method will return true and hence after setting objectID using setObjectID
 or after setting the poll interval using setPollInterval(poll interval) or after adding the
 result listener using addResultListener() the Poller will start Polling automatically.
 To avoid this, setAutoActive to false can be used. In such  case restartPolling can be used to start Polling.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAutoActive(boolean)"><!-- --></A><H3>
setAutoActive</H3>
<PRE>
public void <B>setAutoActive</B>(boolean&nbsp;isAutoActive)</PRE>
<DL>
<DD>To make the poller to start polling automatically after setting either OID or
 poll interval or after adding the first result listener. Boolean true should be passed to this method.
 If the poller should not start polling by itself,then false should be passed in which such case,
 polling should be initiated using restartpolling method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPollInterval()"><!-- --></A><H3>
getPollInterval</H3>
<PRE>
public int <B>getPollInterval</B>()</PRE>
<DL>
<DD>get the current polling interval in seconds
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPollInterval(int)"><!-- --></A><H3>
setPollInterval</H3>
<PRE>
public void <B>setPollInterval</B>(int&nbsp;i)</PRE>
<DL>
<DD>set the polling interval in seconds
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAbsoluteCounters()"><!-- --></A><H3>
getAbsoluteCounters</H3>
<PRE>
public boolean <B>getAbsoluteCounters</B>()</PRE>
<DL>
<DD>To get whether the value returned by the poller will be the absolute value or 
 the difference between successive counters.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the poller will return the absolute value of the counters and 
 false if the poller will return the difference between the successive counter values.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Set the object ID specified by the String value.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(java.lang.String)">setObjectID</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - the oid to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(int, java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(int&nbsp;index,
                        java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Set the object ID value at index based on specified string
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(int, java.lang.String)">setObjectID</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - index where the oid is to be set in the oidlist<DD><CODE>s</CODE> - oid to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectIDList(java.lang.String[])"><!-- --></A><H3>
setObjectIDList</H3>
<PRE>
public void <B>setObjectIDList</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>Set the list of object IDs  based on the specified string array.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - a String array of OIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="setAbsoluteCounters(boolean)"><!-- --></A><H3>
setAbsoluteCounters</H3>
<PRE>
public void <B>setAbsoluteCounters</B>(boolean&nbsp;absoluteCounters)</PRE>
<DL>
<DD>sets whether counter values should be absolute - applies only for single
 variable requests.  This has an impact only on the results of the
 counter data types only. If it is set to true, the poller will return
 the absolute value of the counter. If it is set to false, the result
 returned will be a difference between successive counter values. This
 will be useful for plotting the counter values.
 For multi-oid requests, it's up to the listener
 to process the counters correctly.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genEvent</H3>
<PRE>
protected void <B>genEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>generate the events to the listeners
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
addResultListener</H3>
<PRE>
public void <B>addResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>add a listener for events from this poller.  The listener listens
 for events from any or all SNMP requests.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
removeResultListener</H3>
<PRE>
public void <B>removeResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Remove a listener for events from this poller.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="vetoableChange(java.beans.PropertyChangeEvent)"><!-- --></A><H3>
vetoableChange</H3>
<PRE>
public void <B>vetoableChange</B>(java.beans.PropertyChangeEvent&nbsp;evt)</PRE>
<DL>
<DD>Sets the properties constrained properties.  
  
 	PropertyChangeEvent.getNewValue() expects a Hashtable of constrainted properties.
  Constrained property set are:
  SNMP Version with key VERSION
  Host Name with key HOST
  Port Number with key PORT
  Polling Interval with key POLL
 	Timeout value with key TIMEOUT
  Retries value with key RETRIES
  Auth Protocol with key AUTHPROT
  User Name with key USERNAME
  Auth Password with key AUTHPASS
  Privacy Password with key PRIVPASS
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>vetoableChange</CODE> in interface <CODE>java.beans.VetoableChangeListener</CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpAugmentTable.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpPollerBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpPoller.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
