<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:04 IST 2006 -->
<TITLE>
SnmpRequestServer (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpRequestServer (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyChangeEvent.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServerBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpRequestServer.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpRequestServer</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">com.adventnet.snmp.beans.SnmpServer</A>
        |
        +--<B>com.adventnet.snmp.beans.SnmpRequestServer</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A>, java.util.EventListener, <A HREF="../../../../com/adventnet/snmp/beans/RequestListener.html">RequestListener</A>, java.io.Serializable, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A>, java.beans.VetoableChangeListener</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpRequestServer</B><DT>extends <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A><DT>implements <A HREF="../../../../com/adventnet/snmp/beans/RequestListener.html">RequestListener</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A>, java.beans.VetoableChangeListener, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></DL>

<P>
<p>
  This class is an SNMP Server bean for performing asynchronous
  SNMP requests on a list of variables.  It supports event generation per the
  JDK 1.1 event model.  It allows sending request events to it or invoking its 
 asynchronous request methods  and receiving response events, 
  i.e. ResultEvent objects, from it when responses arrive or timeout.
  <p>
  See the requestServerDemo.java applet example in the applications
  directory.
  <p>
  To use in an application, instantiate the server,
  and register to receive results.  For example,
  the following is a trivial listener that prints the return value.
  <pre>
    SnmpRequestServer server = new SnmpRequestServer();
    
    ResultListener listener = new ResultListener() {
        public void setResult(ResultEvent evt) {
            System.err.println("Response: "+evt.getValue());
        }
    };
    <br>
    server.addResultListener(listener);
  </pre>
  Then use the asynchronous methods to make requests,
  or you can generate events, e.g.
  <pre>
       RequestEvent evt = 
           new RequestEvent(b1, getParameter("OID"), RequestEvent.GET);
       server.addRequest(evt);
  </pre>
  The above is a somewhat simplified example for event generation.
  <p>
  To receive timeout events,use setSendTimeoutEvents(true).
  Otherwise if the request times out,then the timeout events will not be
  sent to the listener.
  <p>  
  Normally, you would allow registration of RequestListener objects,
  and send events to all registered listeners.
  The advantage of generating events really lies in being able
  to write components that do not know at build time
  the request server they will send events to.
  <p>
 Major difference between this and SnmpRequestServer is the ability to 
 use the RequestEvent objects to send requests to the SnmpRequestServer. 
 The benefit of this feature is that event connections between sources of request 
 events, and SnmpRequestServer instances can be more readily be defined, 
 in bean builders for example. So a button that generates a request event can 
 be flexibly connected to the appropriate SnmpRequestServer instance in a 
 bean builder. The SnmpRequestServer provides a convenience object for 
 many of the common operations you do with an SNMP agent.
 <p>
For garbagecollection of the resources used, releaseResources() method 
 should be invoked.  Different SnmpRequestServer instances on the same 
 JVM, will reuse the SnmpAPI, SnmpSession and MibOperations instance. 
 So, for releasing  these resources, releaseResources() method should be 
 called on every  SnmpRequestServer instance created and when this method 
 is called on the final instance of SnmpRequestServer, these will be garbage 
 collected.
  <p>
  Supply the applet in the constructor if using applets and may need
  to use SAS.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/RequestEvent.html"><CODE>RequestEvent</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ResultEvent.html"><CODE>ResultEvent</CODE></A>, 
<A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpRequestServer">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#serialize">serialize</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;based on this flag the v3 tables ( USMUserTable and SnmpEngineTable )
 will be serialized.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGET">SNMPGET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGETBULK">SNMPGETBULK</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGETNEXT">SNMPGETNEXT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPINFORM">SNMPINFORM</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPREPORT">SNMPREPORT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPRESPONSE">SNMPRESPONSE</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPSET">SNMPSET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPTRAP">SNMPTRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPV2TRAP">SNMPV2TRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION1">VERSION1</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION2C">VERSION2C</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION3">VERSION3</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer()">SnmpRequestServer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer(java.applet.Applet)">SnmpRequestServer</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer(java.applet.Applet, int, java.lang.String)">SnmpRequestServer</A></B>(java.applet.Applet&nbsp;applet,
                  int&nbsp;localPort,
                  java.lang.String&nbsp;sessionName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for appletswhich will create a session with name 
 and in specific localport..</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer(int, com.adventnet.snmp.snmp2.ProtocolOptions)">SnmpRequestServer</A></B>(int&nbsp;protocol,
                  <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications which uses protocols
  other than UDP/IP.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer(int, java.lang.String)">SnmpRequestServer</A></B>(int&nbsp;localPort,
                  java.lang.String&nbsp;sessionName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications which will create a session 
 with name and in specific localport.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#SnmpRequestServer(java.lang.String[], java.lang.String)">SnmpRequestServer</A></B>(java.lang.String[]&nbsp;localAddrs,
                  java.lang.String&nbsp;sessionName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications in which the session needs to be 
 bound to some local address.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addLogClient(com.adventnet.afp.log.LoggerProperties)">addLogClient</A></B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the Log client for which the target has to redirect the log messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A></B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add the Log client for which the SnmpRequestServer
  has to redirect the log messages</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addObjectID(java.lang.String)">addObjectID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an ObjectID specified by string to the existing OID list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addRequest(com.adventnet.snmp.beans.RequestEvent)">addRequest</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/RequestEvent.html">RequestEvent</A>&nbsp;e)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To add a request to the already existing requests.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a Listener to the list that is notified each time when a response arrives.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">addSnmpOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an SnmpOID to the existing list of OIDs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">addSnmpPropertyListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds SnmpPropertyListener to the Listeners list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addUserError(int, java.lang.String)">addUserError</A></B>(int&nbsp;errorCode,
             java.lang.String&nbsp;errorString)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to add user defined error codes and the corresponding error string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">addV3HandShakeResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a listener to receive the events when SnmpEngineID discovery
 and time Synchronization is performed by the method
 async_create_v3_tables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)">authenticate</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
             java.lang.String&nbsp;community)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the SnmpClient method implementation used to authenticate a PDU.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)">callback</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
         <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
         int&nbsp;requestID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the SnmpClient method implementation method that processes 
 and forwards the result.The response returned by the RequestServer will 
 be received by this method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#debugPrint(java.lang.String)">debugPrint</A></B>(java.lang.String&nbsp;debugOutput)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the SnmpClient method implementation that prints the
 standard error.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#deSerializeUSM()">deSerializeUSM</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This will deserialize the v3 tables like USMUserTable and 
 SnmpEngineTable from serialized file if the serilaized file
 already exists</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate the response event to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate the timeout events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getAttemptPartial()">getAttemptPartial</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>SnmpRequestServer cannot get the partial data. It is
 specifically for SnmpTarget bean which does synchronous comm..</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getAuthPassword()">getAuthPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 AuthPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getAuthProtocol()">getAuthProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 AuthProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getCommunity()">getCommunity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target Community</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getContextID()">getContextID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 contextID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getContextName()">getContextName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getDebug()">getDebug</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check if Debug mode is enabled or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getEngineID()">getEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 engineID value for v3</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()">getErrorCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the error code from the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorResultString(com.adventnet.snmp.snmp2.SnmpPDU)">getErrorResultString</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the error string associated with the response PDU</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()">getErrorString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the error string from the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getMaxRepetitions()">getMaxRepetitions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target max repetitions value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getMibModules()">getMibModules</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the MIBs (/white-space separated list of mib files)that is(/are) 
 loaded in this applet/application</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getMibOperations()">getMibOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the MibOperations object reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getNonRepeaters()">getNonRepeaters</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target non-repeaters value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getObjectID()">getObjectID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the first object ID from a list of ObjectIDs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getObjectID(int)">getObjectID</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the object ID at the specified index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getObjectIDList()">getObjectIDList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the list of object IDs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getPrincipal()">getPrincipal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 username</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getPrivPassword()">getPrivPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 PrivPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getPrivProtocol()">getPrivProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 privProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getRetries()">getRetries</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target retries value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSecurityLevel()">getSecurityLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 SecurityLevel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSecurityModel()">getSecurityModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP V3 securityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSendTimeoutEvents()">getSendTimeoutEvents</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check if the target will send timeout
 events to registered listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSnmpOID()">getSnmpOID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the first SnmpOID from the list of object IDs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSnmpOIDList()">getSnmpOIDList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the list of object IDs  as an array of SnmpOID instances</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getSnmpVersion()">getSnmpVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target SNMP Version.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getTargetHost()">getTargetHost</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target hostname</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getTargetPort()">getTargetPort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target port number</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getTimeout()">getTimeout</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target timeout value in Seconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getUserErrorCode()">getUserErrorCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the user defined error code for the last request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getUserErrorString()">getUserErrorString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get the user defined error string to a specific error code.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getWriteCommunity()">getWriteCommunity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the SNMP target write Community to be used for set requests</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#isBroadCastEnabled()">isBroadCastEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the current status as to whether broadcasting is enabled/disabled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#isSerialize()">isSerialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check the status of Serialization of v3 tables 
 (USMUserTable and SnmpEngineTable)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#loadMibs(java.lang.String)">loadMibs</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loads the specified mib.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#readFromDatabase()">readFromDatabase</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This will read the v3table like USmUserTable and SnmpEngineTable 
 from Database after establishing connection</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#releaseResources()">releaseResources</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpRequestServer bean instance, this method 
 can be used to immediately release the resources.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#removeLogClient()">removeLogClient</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the Log client that has been registered to redirect 
 the log Messages for this instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes a listener for response events from the list of listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">removeSnmpPropertyListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the SnmpPropertyListener from the list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">removeV3HandShakeListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the listener registered for getting events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetBulkRequestList()">sendGetBulkRequestList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a GetBulk request to get a list of SNMP variable bindings 
 from the agent using the Object Identifier list previously set 
 in this SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetNextRequest()">sendGetNextRequest</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a getnext request for the SNMP variable identified 
 by the first Object Identifier set in this SnmpRequestServer 
 instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetNextRequest(com.adventnet.snmp.snmp2.SnmpOID)">sendGetNextRequest</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a getnext request for the SNMP variable identified 
 by specified Object Identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetNextRequestList()">sendGetNextRequestList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a getnext request for a list of SNMP variable bindings 
 identified by the Object Identifier list previously set 
 in this SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetNextRequestList(com.adventnet.snmp.snmp2.SnmpOID[])">sendGetNextRequestList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a getnext request for a list of SNMP variables identified 
 by the Object Identifier list stored in this SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetRequest()">sendGetRequest</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a get request for the the SNMP variable identified by 
 the first Object Identifier stored in the SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetRequest(com.adventnet.snmp.snmp2.SnmpOID)">sendGetRequest</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a get request for the the SNMP variable identified 
 by specified Object Identifier.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetRequestList()">sendGetRequestList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a get request for the list of SNMP variable bindings  
 identified by the Object Identifier list previously set in this 
 SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendGetRequestList(com.adventnet.snmp.snmp2.SnmpOID[])">sendGetRequestList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a get request for a list of SNMP variables identified 
 by the Object Identifier list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendSetRequest(java.lang.String)">sendSetRequest</A></B>(java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a set request with the value to be set for the ObjectID 
 This method will fail if MIB with this variable 
 is not loaded or this is not a leaf node in the MIB.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendSetRequest(java.lang.String, byte)">sendSetRequest</A></B>(java.lang.String&nbsp;value,
               byte&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a set request with the value to be set and the type of the variable 
 Throws DataException  
 if no OID specified earlier or in case of errors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendSetRequestList(java.lang.String[])">sendSetRequestList</A></B>(java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the list of SNMP variable bindings on the agent using 
 the Object Identifier list previously set in this SnmpRequestServer 
 instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendSetRequestVariable(com.adventnet.snmp.snmp2.SnmpVar)">sendSetRequestVariable</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;var)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a set request to set the specified SnmpVar value for the OID
 that is set in the SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendSetRequestVariables(com.adventnet.snmp.snmp2.SnmpVar[])">sendSetRequestVariables</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a set request to set the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpRequestServer instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])">sendTrap</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;enterprise,
         java.lang.String&nbsp;agenthost,
         int&nbsp;genericType,
         int&nbsp;specificType,
         long&nbsp;uptime,
         <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set 
 in this SnmpRequestServer instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#sendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])">sendTrap</A></B>(java.lang.String&nbsp;enterprise,
         java.lang.String&nbsp;agenthost,
         int&nbsp;genericType,
         int&nbsp;specificType,
         long&nbsp;uptime,
         java.lang.String[]&nbsp;values)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To send a SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in 
 this SnmpRequestServer instance, and the values specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setAttemptPartial(boolean)">setAttemptPartial</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>SnmpRequestServer cannot get partial data by enabling the
 flag. It is specific for SnmpTarget bean which does synchronous comm..</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setAuthPassword(java.lang.String)">setAuthPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 AuthPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setAuthProtocol(int)">setAuthProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 AuthProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setBroadCastEnable(boolean)">setBroadCastEnable</A></B>(boolean&nbsp;broadcast)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calling this method with a "true" value will indicate that
 the request is to be sent as a broadcast request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setCommunity(java.lang.String)">setCommunity</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target Community</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setContextID(java.lang.String)">setContextID</A></B>(java.lang.String&nbsp;ctxtID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 contextID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setContextName(java.lang.String)">setContextName</A></B>(java.lang.String&nbsp;cName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setDebug(boolean)">setDebug</A></B>(boolean&nbsp;debug)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To enable or disable the Debug mode.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setEngineID(byte[])">setEngineID</A></B>(byte[]&nbsp;engID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 engineID value for v3</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setMaxRepetitions(int)">setMaxRepetitions</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target max repetitions value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setMibModules(java.lang.String)">setMibModules</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To load the MIB in this applet/application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setNonRepeaters(int)">setNonRepeaters</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target non-repeaters value for a getbulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setObjectID(int, java.lang.String)">setObjectID</A></B>(int&nbsp;index,
            java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the object ID value specified the string at the given index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setObjectID(java.lang.String)">setObjectID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the object ID value specified by the string</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the list of object IDs specified by the string array</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">setParams</A></B>(java.lang.String&nbsp;host,
          java.lang.String&nbsp;port,
          java.lang.String&nbsp;community,
          java.lang.String&nbsp;mib,
          java.lang.String&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set Multiple parameters like TargetHost,Port,Community,MibModule and OID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">setParams</A></B>(java.lang.String&nbsp;host,
          java.lang.String&nbsp;port,
          java.lang.String&nbsp;community,
          java.lang.String&nbsp;mib,
          java.lang.String[]&nbsp;oidlist)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set Multiple parameters like TargetHost,Port,Community,MibModule and OIDList.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setPrincipal(java.lang.String)">setPrincipal</A></B>(java.lang.String&nbsp;uName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 username</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setPrivPassword(java.lang.String)">setPrivPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 PrivPassword</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setPrivProtocol(int)">setPrivProtocol</A></B>(int&nbsp;privprotocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 PrivProtocol</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setRetries(int)">setRetries</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Set the SNMP target retries value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSecurityLevel(byte)">setSecurityLevel</A></B>(byte&nbsp;sLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 SecurityLevel.The value will be 0 ,1 or 3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSecurityModel(int)">setSecurityModel</A></B>(int&nbsp;securityModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP V3 SecurityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSendTimeoutEvents(boolean)">setSendTimeoutEvents</A></B>(boolean&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the boolean state of whether this target will send timeout
 events to registered listeners or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">setSnmpOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SnmpOID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the list of object IDs given as an array of SnmpOIDs</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setSnmpVersion(int)">setSnmpVersion</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target SNMP Version.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setTargetHost(java.lang.String)">setTargetHost</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target hostname</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setTargetPort(int)">setTargetPort</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target port number</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setTimeout(int)">setTimeout</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Set the SNMP target timeout value in Seconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#setWriteCommunity(java.lang.String)">setWriteCommunity</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the SNMP target write Community to be used for set requests</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></B>(java.beans.PropertyChangeEvent&nbsp;e)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called when a vetoableChange event is fired from 
 the propertySetting bean.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#finalize()">finalize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.CustomizerTemplate"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from interface com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#manage_v3_tables()">manage_v3_tables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="serialize"><!-- --></A><H3>
serialize</H3>
<PRE>
public boolean <B>serialize</B></PRE>
<DL>
<DD>based on this flag the v3 tables ( USMUserTable and SnmpEngineTable )
 will be serialized.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpRequestServer()"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>()</PRE>
<DL>
<DD>Use this constructor for applications.  Use for applets only if
 you want to prevent the use of SAS.  MIB loading from applets may
 fail from this SnmpRequestServer instance if you use this constructor. 
 This matters only for the first SnmpRequestServer instance, and 
 subsequent instances will use the same SNMP mechanisms 
 for the same port.
<P>
</DL>
<HR>

<A NAME="SnmpRequestServer(int, java.lang.String)"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>(int&nbsp;localPort,
                         java.lang.String&nbsp;sessionName)</PRE>
<DL>
<DD>Use this constructor for applications which will create a session 
 with name and in specific localport.  Use for applets only if
 you want to prevent use of SAS.  MIB loading from applets may
 fail from this SnmpRequestServer instance if you use this constructor. 
 This matters only for the first SnmpRequestServer instance, and 
 subsequent instances will use the same SNMP mechanisms 
 for the same port.
<P>
</DL>
<HR>

<A NAME="SnmpRequestServer(int, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>(int&nbsp;protocol,
                         <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</PRE>
<DL>
<DD>Use this constructor for applications which uses protocols
  other than UDP/IP.
<P>
</DL>
<HR>

<A NAME="SnmpRequestServer(java.applet.Applet, int, java.lang.String)"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>(java.applet.Applet&nbsp;applet,
                         int&nbsp;localPort,
                         java.lang.String&nbsp;sessionName)</PRE>
<DL>
<DD>Use this constructor for appletswhich will create a session with name 
 and in specific localport..  Applets will try and use SAS, 
 and if unsuccessful will use local sockets.
<P>
</DL>
<HR>

<A NAME="SnmpRequestServer(java.applet.Applet)"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Use this constructor for applets.  Applets will try and use SAS, 
 and if unsuccessful will use local sockets.
<P>
</DL>
<HR>

<A NAME="SnmpRequestServer(java.lang.String[], java.lang.String)"><!-- --></A><H3>
SnmpRequestServer</H3>
<PRE>
public <B>SnmpRequestServer</B>(java.lang.String[]&nbsp;localAddrs,
                         java.lang.String&nbsp;sessionName)</PRE>
<DL>
<DD>Use this constructor for applications in which the session needs to be 
 bound to some local address.  Usually, the session will be shared across 
 different instances of this class. If  seperate session needs to be used, then 
 specify unique sessionNames for the instances created.
<P>
<DT><B>Parameters:</B><DD><CODE>localAddrs</CODE> - The local addresses to which the session needs 
 to be bound.<DD><CODE>sessionName</CODE> - Specify unique sessionNames for the instances 
 which need to use different SnmpSession instances to send data.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="loadMibs(java.lang.String)"><!-- --></A><H3>
loadMibs</H3>
<PRE>
public void <B>loadMibs</B>(java.lang.String&nbsp;mibs)
              throws <A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A>,
                     java.io.IOException,
                     java.io.FileNotFoundException</PRE>
<DL>
<DD>Loads the specified mib. If first SnmpRequestServer has 
	been opened with applet parameter, then URLs will be used.  
	MIB loading applies across  all beans in this package, 
	i.e. MIBs can be loaded in any
  of the bean instances, and will be available to all beans
  in this package, across the VM.
  The files can be seperated by a space, tab, new line, carriage return  and pipe symbol. 
  <br>	
  for example,
 		server.loadMibs("../mibs/RFC1213-MIB ../mibs/IF-MIB");
 <br>	
 MIBs can also be loaded from string URLs.
 <p>
 In case of loading the files from space seperated directories, the whole
 String should be given within the double quotes. <br>for example, if the
 MIB file is present in the directory 'Program Files',<br>
 server.loadMibs("\"../../mibs/Program Files/RFC1213-MIB\"")
 <p>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#loadMibs(java.lang.String)">loadMibs</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A></CODE> - is thrown while parser error ocurs.
<DD><CODE>java.io.IOException</CODE> - is thrown while upon IO error occurs.
<DD><CODE>java.io.FileNotFoundException</CODE> - is thrown if the file is not found.</DL>
</DD>
</DL>
<HR>

<A NAME="addResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
addResultListener</H3>
<PRE>
public void <B>addResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a Listener to the list that is notified each time when a response arrives.
 The Listeners will receive Result Events from any or all SNMP requests.	 
 Targeting responses to specific listeners, requires using 
 RequestEvent and the setDestination method while creating the request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - an instance of ResultListener.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ResultEvent.html"><CODE>ResultEvent</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html"><CODE>ResultListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="removeResultListener(com.adventnet.snmp.beans.ResultListener)"><!-- --></A><H3>
removeResultListener</H3>
<PRE>
public void <B>removeResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html">ResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes a listener for response events from the list of listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - ResultListener to be removed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ResultListener.html"><CODE>ResultListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)"><!-- --></A><H3>
addSnmpPropertyListener</H3>
<PRE>
public void <B>addSnmpPropertyListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds SnmpPropertyListener to the Listeners list.
 Whenever the value of target parameters like HostName, targetPort 
 gets changed,SnmpPropertyChangeEvent will be sent to all
 the registered listeners in this list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - an instance of SnmpPropertyListener to be added.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyChangeEvent.html"><CODE>SnmpPropertyChangeEvent</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html"><CODE>SnmpPropertyListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)"><!-- --></A><H3>
removeSnmpPropertyListener</H3>
<PRE>
public void <B>removeSnmpPropertyListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html">SnmpPropertyListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes the SnmpPropertyListener from the list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - SnmpPropertyListener to be removed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyListener.html"><CODE>SnmpPropertyListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)"><!-- --></A><H3>
addV3HandShakeResultListener</H3>
<PRE>
public void <B>addV3HandShakeResultListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a listener to receive the events when SnmpEngineID discovery
 and time Synchronization is performed by the method
 async_create_v3_tables.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - the V3HandShakeResultListener to be registered for
 getting events.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html"><CODE>V3HandShakeResultListener</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultEvent.html"><CODE>V3HandShakeResultEvent</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)"><!-- --></A><H3>
removeV3HandShakeListener</H3>
<PRE>
public void <B>removeV3HandShakeListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html">V3HandShakeResultListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes the listener registered for getting events.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - the V3HandShakeResultListener to be removed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/V3HandShakeResultListener.html"><CODE>V3HandShakeResultListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="readFromDatabase()"><!-- --></A><H3>
readFromDatabase</H3>
<PRE>
public void <B>readFromDatabase</B>()
                      throws java.sql.SQLException</PRE>
<DL>
<DD>This will read the v3table like USmUserTable and SnmpEngineTable 
 from Database after establishing connection
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.sql.SQLException</CODE> - incase of any error during reading from database.</DL>
</DD>
</DL>
<HR>

<A NAME="deSerializeUSM()"><!-- --></A><H3>
deSerializeUSM</H3>
<PRE>
public void <B>deSerializeUSM</B>()</PRE>
<DL>
<DD>This will deserialize the v3 tables like USMUserTable and 
 SnmpEngineTable from serialized file if the serilaized file
 already exists
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)"><!-- --></A><H3>
authenticate</H3>
<PRE>
public boolean <B>authenticate</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
                            java.lang.String&nbsp;community)</PRE>
<DL>
<DD>This is the SnmpClient method implementation used to authenticate a PDU.
 Always returns true. Needs to be implemented for callbacks.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)">authenticate</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)"><!-- --></A><H3>
callback</H3>
<PRE>
public boolean <B>callback</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                        <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
                        int&nbsp;requestID)</PRE>
<DL>
<DD>This is the SnmpClient method implementation method that processes 
 and forwards the result.The response returned by the RequestServer will 
 be received by this method.
 The following ErrorCodes can be set: REQ_TIMEDOUT, SNMP error's defined in ErrorMessages
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)">callback</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="debugPrint(java.lang.String)"><!-- --></A><H3>
debugPrint</H3>
<PRE>
public void <B>debugPrint</B>(java.lang.String&nbsp;debugOutput)</PRE>
<DL>
<DD>This is the SnmpClient method implementation that prints the
 standard error.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#debugPrint(java.lang.String)">debugPrint</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genTimeoutEvent</H3>
<PRE>
protected void <B>genTimeoutEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>Generate the timeout events to the listeners
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genEvent</H3>
<PRE>
protected void <B>genEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>Generate the response event to the listeners
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addObjectID(java.lang.String)"><!-- --></A><H3>
addObjectID</H3>
<PRE>
public int <B>addObjectID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Adds an ObjectID specified by string to the existing OID list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - the OID to be added
<DT><B>Returns:</B><DD>the index of the entry added for later reference.</DL>
</DD>
</DL>
<HR>

<A NAME="addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
addSnmpOID</H3>
<PRE>
public int <B>addSnmpOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>Adds an SnmpOID to the existing list of OIDs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - SnmpOID to be added.
<DT><B>Returns:</B><DD>the index of the entry  added for later reference.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectID(int)"><!-- --></A><H3>
getObjectID</H3>
<PRE>
public java.lang.String <B>getObjectID</B>(int&nbsp;index)</PRE>
<DL>
<DD>To get the object ID at the specified index
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index of the oid in the oidlist array
<DT><B>Returns:</B><DD>an ObjectID as a string in the format iso.org.dod.internet.. if mibs loaded
 or as a string in the format .1.3.6.1.. if mibs is not loaded.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectID()"><!-- --></A><H3>
getObjectID</H3>
<PRE>
public java.lang.String <B>getObjectID</B>()</PRE>
<DL>
<DD>To get the first object ID from a list of ObjectIDs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the ObjectID as a string</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the object ID value specified by the string
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - the oid to be set</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectID(int, java.lang.String)"><!-- --></A><H3>
setObjectID</H3>
<PRE>
public void <B>setObjectID</B>(int&nbsp;index,
                        java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the object ID value specified the string at the given index
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - index in the oidlist where the oid has to be set.<DD><CODE>s</CODE> - the oid that has to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectIDList()"><!-- --></A><H3>
getObjectIDList</H3>
<PRE>
public java.lang.String[] <B>getObjectIDList</B>()</PRE>
<DL>
<DD>To get the list of object IDs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the list of OIDs as a String array.</DL>
</DD>
</DL>
<HR>

<A NAME="setObjectIDList(java.lang.String[])"><!-- --></A><H3>
setObjectIDList</H3>
<PRE>
public void <B>setObjectIDList</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>Sets the list of object IDs specified by the string array
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpOID()"><!-- --></A><H3>
getSnmpOID</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A> <B>getSnmpOID</B>()</PRE>
<DL>
<DD>To get the first SnmpOID from the list of object IDs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the ObjectID as an SnmpOID.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
setSnmpOID</H3>
<PRE>
public void <B>setSnmpOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>Sets the SnmpOID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - SnmpOID to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpOIDList()"><!-- --></A><H3>
getSnmpOIDList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[] <B>getSnmpOIDList</B>()</PRE>
<DL>
<DD>To get the list of object IDs  as an array of SnmpOID instances
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an array of SnmpOIDs.</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
setSnmpOIDList</H3>
<PRE>
public void <B>setSnmpOIDList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;list)</PRE>
<DL>
<DD>To set the list of object IDs given as an array of SnmpOIDs
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetHost()"><!-- --></A><H3>
getTargetHost</H3>
<PRE>
public java.lang.String <B>getTargetHost</B>()</PRE>
<DL>
<DD>To get the SNMP target hostname
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getTargetHost()">getTargetHost</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the hostname as a String</DL>
</DD>
</DL>
<HR>

<A NAME="setTargetHost(java.lang.String)"><!-- --></A><H3>
setTargetHost</H3>
<PRE>
public void <B>setTargetHost</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>To set the SNMP target hostname
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setTargetHost(java.lang.String)">setTargetHost</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - target hostname as a String</DL>
</DD>
</DL>
<HR>

<A NAME="getTargetPort()"><!-- --></A><H3>
getTargetPort</H3>
<PRE>
public int <B>getTargetPort</B>()</PRE>
<DL>
<DD>To get the SNMP target port number
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getTargetPort()">getTargetPort</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the target port.</DL>
</DD>
</DL>
<HR>

<A NAME="setTargetPort(int)"><!-- --></A><H3>
setTargetPort</H3>
<PRE>
public void <B>setTargetPort</B>(int&nbsp;i)</PRE>
<DL>
<DD>To set the SNMP target port number
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setTargetPort(int)">setTargetPort</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - the target port number</DL>
</DD>
</DL>
<HR>

<A NAME="getCommunity()"><!-- --></A><H3>
getCommunity</H3>
<PRE>
public java.lang.String <B>getCommunity</B>()</PRE>
<DL>
<DD>To get the SNMP target Community
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the community as a String</DL>
</DD>
</DL>
<HR>

<A NAME="setCommunity(java.lang.String)"><!-- --></A><H3>
setCommunity</H3>
<PRE>
public void <B>setCommunity</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>To set the SNMP target Community
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - community name</DL>
</DD>
</DL>
<HR>

<A NAME="getWriteCommunity()"><!-- --></A><H3>
getWriteCommunity</H3>
<PRE>
public java.lang.String <B>getWriteCommunity</B>()</PRE>
<DL>
<DD>To get the SNMP target write Community to be used for set requests
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the write community</DL>
</DD>
</DL>
<HR>

<A NAME="setWriteCommunity(java.lang.String)"><!-- --></A><H3>
setWriteCommunity</H3>
<PRE>
public void <B>setWriteCommunity</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>To set the SNMP target write Community to be used for set requests
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - write community to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getTimeout()"><!-- --></A><H3>
getTimeout</H3>
<PRE>
public int <B>getTimeout</B>()</PRE>
<DL>
<DD>To get the SNMP target timeout value in Seconds.
 Default value is 5 seconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the timeout value in seconds.</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeout(int)"><!-- --></A><H3>
setTimeout</H3>
<PRE>
public void <B>setTimeout</B>(int&nbsp;i)</PRE>
<DL>
<DD>To Set the SNMP target timeout value in Seconds.
 Default value is 5 seconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRetries()"><!-- --></A><H3>
getRetries</H3>
<PRE>
public int <B>getRetries</B>()</PRE>
<DL>
<DD>To get the SNMP target retries value.  Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the retries value</DL>
</DD>
</DL>
<HR>

<A NAME="setRetries(int)"><!-- --></A><H3>
setRetries</H3>
<PRE>
public void <B>setRetries</B>(int&nbsp;i)</PRE>
<DL>
<DD>To Set the SNMP target retries value.  Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - retries value</DL>
</DD>
</DL>
<HR>

<A NAME="getMaxRepetitions()"><!-- --></A><H3>
getMaxRepetitions</H3>
<PRE>
public int <B>getMaxRepetitions</B>()</PRE>
<DL>
<DD>To get the SNMP target max repetitions value for a getbulk request. 
 Default is 50.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the max repetitions value</DL>
</DD>
</DL>
<HR>

<A NAME="setMaxRepetitions(int)"><!-- --></A><H3>
setMaxRepetitions</H3>
<PRE>
public void <B>setMaxRepetitions</B>(int&nbsp;i)</PRE>
<DL>
<DD>To set the SNMP target max repetitions value for a getbulk request. 
 Default is 50.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - max repetitions</DL>
</DD>
</DL>
<HR>

<A NAME="getNonRepeaters()"><!-- --></A><H3>
getNonRepeaters</H3>
<PRE>
public int <B>getNonRepeaters</B>()</PRE>
<DL>
<DD>To get the SNMP target non-repeaters value for a getbulk request. 
 Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the non-repeaters value</DL>
</DD>
</DL>
<HR>

<A NAME="setNonRepeaters(int)"><!-- --></A><H3>
setNonRepeaters</H3>
<PRE>
public void <B>setNonRepeaters</B>(int&nbsp;i)</PRE>
<DL>
<DD>To set the SNMP target non-repeaters value for a getbulk request. 
 Default is 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - non-repeaters value.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpVersion()"><!-- --></A><H3>
getSnmpVersion</H3>
<PRE>
public int <B>getSnmpVersion</B>()</PRE>
<DL>
<DD>To get the SNMP target SNMP Version.  0 for Version 1 (default) and
 1 for Version V2C, 3 for Version 3.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SNMP version</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpVersion(int)"><!-- --></A><H3>
setSnmpVersion</H3>
<PRE>
public void <B>setSnmpVersion</B>(int&nbsp;i)</PRE>
<DL>
<DD>To set the SNMP target SNMP Version. 0 for Version 1 (default) and
 1 for Version V2C, 3 for Version 3.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setSnmpVersion(int)">setSnmpVersion</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - version number</DL>
</DD>
</DL>
<HR>

<A NAME="getContextName()"><!-- --></A><H3>
getContextName</H3>
<PRE>
public java.lang.String <B>getContextName</B>()</PRE>
<DL>
<DD>To get the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Context name</DL>
</DD>
</DL>
<HR>

<A NAME="setContextName(java.lang.String)"><!-- --></A><H3>
setContextName</H3>
<PRE>
public void <B>setContextName</B>(java.lang.String&nbsp;cName)</PRE>
<DL>
<DD>To set the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>cName</CODE> - context name to be set</DL>
</DD>
</DL>
<HR>

<A NAME="getContextID()"><!-- --></A><H3>
getContextID</H3>
<PRE>
public java.lang.String <B>getContextID</B>()</PRE>
<DL>
<DD>To get the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the ContextID</DL>
</DD>
</DL>
<HR>

<A NAME="setContextID(java.lang.String)"><!-- --></A><H3>
setContextID</H3>
<PRE>
public void <B>setContextID</B>(java.lang.String&nbsp;ctxtID)</PRE>
<DL>
<DD>To set the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ctxtID</CODE> - ContextID to be set</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityModel()"><!-- --></A><H3>
getSecurityModel</H3>
<PRE>
public int <B>getSecurityModel</B>()</PRE>
<DL>
<DD>To get the SNMP V3 securityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Security Model</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityModel(int)"><!-- --></A><H3>
setSecurityModel</H3>
<PRE>
public void <B>setSecurityModel</B>(int&nbsp;securityModel)</PRE>
<DL>
<DD>To set the SNMP V3 SecurityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>securityModel</CODE> - SecurityModel in integer</DL>
</DD>
</DL>
<HR>

<A NAME="getPrincipal()"><!-- --></A><H3>
getPrincipal</H3>
<PRE>
public java.lang.String <B>getPrincipal</B>()</PRE>
<DL>
<DD>To get the SNMP V3 username
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the UserName</DL>
</DD>
</DL>
<HR>

<A NAME="setPrincipal(java.lang.String)"><!-- --></A><H3>
setPrincipal</H3>
<PRE>
public void <B>setPrincipal</B>(java.lang.String&nbsp;uName)</PRE>
<DL>
<DD>To set the SNMP V3 username
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setPrincipal(java.lang.String)">setPrincipal</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>uName</CODE> - UserName to be set</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthProtocol()"><!-- --></A><H3>
getAuthProtocol</H3>
<PRE>
public int <B>getAuthProtocol</B>()</PRE>
<DL>
<DD>To get the SNMP V3 AuthProtocol
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Authentication Protocol.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthProtocol(int)"><!-- --></A><H3>
setAuthProtocol</H3>
<PRE>
public void <B>setAuthProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>To set the SNMP V3 AuthProtocol
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setAuthProtocol(int)">setAuthProtocol</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>protocol</CODE> - the Authentication Protocol to be set</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthPassword()"><!-- --></A><H3>
getAuthPassword</H3>
<PRE>
public java.lang.String <B>getAuthPassword</B>()</PRE>
<DL>
<DD>To get the SNMP V3 AuthPassword
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Authentication Password.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthPassword(java.lang.String)"><!-- --></A><H3>
setAuthPassword</H3>
<PRE>
public void <B>setAuthPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>To set the SNMP V3 AuthPassword
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setAuthPassword(java.lang.String)">setAuthPassword</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>password</CODE> - Authentication Password</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivProtocol()"><!-- --></A><H3>
getPrivProtocol</H3>
<PRE>
public int <B>getPrivProtocol</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 privProtocol
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivProtocol(int)"><!-- --></A><H3>
setPrivProtocol</H3>
<PRE>
public void <B>setPrivProtocol</B>(int&nbsp;privprotocol)</PRE>
<DL>
<DD>Sets the SNMP V3 PrivProtocol
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivPassword()"><!-- --></A><H3>
getPrivPassword</H3>
<PRE>
public java.lang.String <B>getPrivPassword</B>()</PRE>
<DL>
<DD>To get the SNMP V3 PrivPassword
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Privacy Password</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivPassword(java.lang.String)"><!-- --></A><H3>
setPrivPassword</H3>
<PRE>
public void <B>setPrivPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>To set the SNMP V3 PrivPassword
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setPrivPassword(java.lang.String)">setPrivPassword</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>password</CODE> - Privacy Password</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineID()"><!-- --></A><H3>
getEngineID</H3>
<PRE>
public byte[] <B>getEngineID</B>()</PRE>
<DL>
<DD>To get the SNMP V3 engineID value for v3
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SNMPV3 engineID as an array of bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineID(byte[])"><!-- --></A><H3>
setEngineID</H3>
<PRE>
public void <B>setEngineID</B>(byte[]&nbsp;engID)</PRE>
<DL>
<DD>To set the SNMP V3 engineID value for v3
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityLevel()"><!-- --></A><H3>
getSecurityLevel</H3>
<PRE>
public java.lang.String <B>getSecurityLevel</B>()</PRE>
<DL>
<DD>To get the SNMP V3 SecurityLevel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SecurityLevel</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityLevel(byte)"><!-- --></A><H3>
setSecurityLevel</H3>
<PRE>
public void <B>setSecurityLevel</B>(byte&nbsp;sLevel)</PRE>
<DL>
<DD>To set the SNMP V3 SecurityLevel.The value will be 0 ,1 or 3.
  For other values, Warning message will be given and it will
  take the SecurityLevel as 0.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#setSecurityLevel(byte)">setSecurityLevel</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sLevel</CODE> - the SecurityLevel as a byte value</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorString()"><!-- --></A><H3>
getErrorString</H3>
<PRE>
public java.lang.String <B>getErrorString</B>()</PRE>
<DL>
<DD>To get the error string from the last request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error message that gets set during an error</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorCode()"><!-- --></A><H3>
getErrorCode</H3>
<PRE>
public int <B>getErrorCode</B>()</PRE>
<DL>
<DD>To get the error code from the last request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Error code that gets set during an error</DL>
</DD>
</DL>
<HR>

<A NAME="getUserErrorCode()"><!-- --></A><H3>
getUserErrorCode</H3>
<PRE>
public int <B>getUserErrorCode</B>()</PRE>
<DL>
<DD>Gets the user defined error code for the last request.
  The user error code returns the pdu error only if the corresponding 
  user error string is set.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the pdu error status in case of error and 0 in case of no pdu error
  or no error string is added.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="addUserError(int, java.lang.String)"><!-- --></A><H3>
addUserError</H3>
<PRE>
public void <B>addUserError</B>(int&nbsp;errorCode,
                         java.lang.String&nbsp;errorString)</PRE>
<DL>
<DD>This method is used to add user defined error codes and the corresponding error string.
  If the specified error code already exists then the method overwrites the 
  previous error string with the one currently provided.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getUserErrorString()"><!-- --></A><H3>
getUserErrorString</H3>
<PRE>
public java.lang.String <B>getUserErrorString</B>()</PRE>
<DL>
<DD>This method is used to get the user defined error string to a specific error code.
  If the user has not defined any error string to a specific error code then it will return
  AdventNet specific error string or standard error. If AdventNet specific error code is 
  not available then it returns null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAttemptPartial()"><!-- --></A><H3>
getAttemptPartial</H3>
<PRE>
public boolean <B>getAttemptPartial</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>SnmpRequestServer cannot get the partial data. It is
 specifically for SnmpTarget bean which does synchronous comm..</I>
<P>
<DD>Returns the boolean state of whether this target will try to get
 partial data from an agent if a multiple variable request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAttemptPartial(boolean)"><!-- --></A><H3>
setAttemptPartial</H3>
<PRE>
public void <B>setAttemptPartial</B>(boolean&nbsp;b)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>SnmpRequestServer cannot get partial data by enabling the
 flag. It is specific for SnmpTarget bean which does synchronous comm..</I>
<P>
<DD>sets the boolean state of whether this target will try to get
 partial data from an agent if a multiple variable request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSendTimeoutEvents()"><!-- --></A><H3>
getSendTimeoutEvents</H3>
<PRE>
public boolean <B>getSendTimeoutEvents</B>()</PRE>
<DL>
<DD>To check if the target will send timeout
 events to registered listeners.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>boolean value true if Timeout events will be sent to the 
 listeners and false otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="setSendTimeoutEvents(boolean)"><!-- --></A><H3>
setSendTimeoutEvents</H3>
<PRE>
public void <B>setSendTimeoutEvents</B>(boolean&nbsp;b)</PRE>
<DL>
<DD>To set the boolean state of whether this target will send timeout
 events to registered listeners or not
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>b</CODE> - true to send timeout events to listeners and false otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="getDebug()"><!-- --></A><H3>
getDebug</H3>
<PRE>
public boolean <B>getDebug</B>()</PRE>
<DL>
<DD>To check if Debug mode is enabled or not
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if Debug Mode is enabled and false otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="setDebug(boolean)"><!-- --></A><H3>
setDebug</H3>
<PRE>
public void <B>setDebug</B>(boolean&nbsp;debug)</PRE>
<DL>
<DD>To enable or disable the Debug mode.
 If the Debug mode is enabled,then Debug message will get printed and
 if it is disabled,debug message will not be printed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>debug</CODE> - true to enable and false to disable.</DL>
</DD>
</DL>
<HR>

<A NAME="getMibModules()"><!-- --></A><H3>
getMibModules</H3>
<PRE>
public java.lang.String <B>getMibModules</B>()</PRE>
<DL>
<DD>To get the MIBs (/white-space separated list of mib files)that is(/are) 
 loaded in this applet/application
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the loaded Mib file</DL>
</DD>
</DL>
<HR>

<A NAME="setMibModules(java.lang.String)"><!-- --></A><H3>
setMibModules</H3>
<PRE>
public void <B>setMibModules</B>(java.lang.String&nbsp;mibs)</PRE>
<DL>
<DD>To load the MIB in this applet/application.
 More than one Mib can be loaded by giving them as a
 space seperated list.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mibs</CODE> - Mib to be loaded</DL>
</DD>
</DL>
<HR>

<A NAME="getMibOperations()"><!-- --></A><H3>
getMibOperations</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A> <B>getMibOperations</B>()</PRE>
<DL>
<DD>To get the MibOperations object reference.  This allows using
 additional MibOperations functions if needed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an instance of MibOperations</DL>
</DD>
</DL>
<HR>

<A NAME="addRequest(com.adventnet.snmp.beans.RequestEvent)"><!-- --></A><H3>
addRequest</H3>
<PRE>
public int <B>addRequest</B>(<A HREF="../../../../com/adventnet/snmp/beans/RequestEvent.html">RequestEvent</A>&nbsp;e)</PRE>
<DL>
<DD>To add a request to the already existing requests.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/RequestListener.html#addRequest(com.adventnet.snmp.beans.RequestEvent)">addRequest</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/RequestListener.html">RequestListener</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>e</CODE> - an instance of RequestEvent.
<DT><B>Returns:</B><DD>the request ID which will be used.  The request ID will be 
 generated and managed by the library if you do not speficy it 
 in the event.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/RequestEvent.html"><CODE>RequestEvent</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetRequest()"><!-- --></A><H3>
sendGetRequest</H3>
<PRE>
public int <B>sendGetRequest</B>()</PRE>
<DL>
<DD>To send a get request for the the SNMP variable identified by 
 the first Object Identifier stored in the SnmpRequestServer instance. 
 The following ErrorCodes can be set: SNMP_NOT_INIT,OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR,  SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if no OID specified earlier 
 or in case of errors.  This method returns immediately after sending
 the Request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetRequest(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
sendGetRequest</H3>
<PRE>
public int <B>sendGetRequest</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>To send a get request for the the SNMP variable identified 
 by specified Object Identifier.  
 The following ErrorCodes can be set: SNMP_NOT_INIT,OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if no OID specified earlier 
 or in case of errors.  This method returns immediately after sending
 the request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetRequestList()"><!-- --></A><H3>
sendGetRequestList</H3>
<PRE>
public int <B>sendGetRequestList</B>()</PRE>
<DL>
<DD>To send a get request for the list of SNMP variable bindings  
 identified by the Object Identifier list previously set in this 
 SnmpRequestServer instance.   
 The following ErrorCodes can be set: SNMP_NOT_INIT, OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR,  SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 This method returns immediately after sending the request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetRequestList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
sendGetRequestList</H3>
<PRE>
public int <B>sendGetRequestList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</PRE>
<DL>
<DD>To send a get request for a list of SNMP variables identified 
 by the Object Identifier list.
 The following ErrorCodes can be set: SNMP_NOT_INIT,OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR,  SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 This method returns immediately after sending the request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetNextRequest()"><!-- --></A><H3>
sendGetNextRequest</H3>
<PRE>
public int <B>sendGetNextRequest</B>()</PRE>
<DL>
<DD>To send a getnext request for the SNMP variable identified 
 by the first Object Identifier set in this SnmpRequestServer 
 instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, SNMP error's  defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 This method returns immediately after sending the request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetNextRequest(com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
sendGetNextRequest</H3>
<PRE>
public int <B>sendGetNextRequest</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid)</PRE>
<DL>
<DD>To send a getnext request for the SNMP variable identified 
 by specified Object Identifier.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the Request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetNextRequestList()"><!-- --></A><H3>
sendGetNextRequestList</H3>
<PRE>
public int <B>sendGetNextRequestList</B>()</PRE>
<DL>
<DD>To send a getnext request for a list of SNMP variable bindings 
 identified by the Object Identifier list previously set 
 in this SnmpRequestServer instance.  
 The following ErrorCodes can be set SNMP_NOT_INIT, OID_NOT_SPECIFIED, 
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the Request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetNextRequestList(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
sendGetNextRequestList</H3>
<PRE>
public int <B>sendGetNextRequestList</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</PRE>
<DL>
<DD>To send a getnext request for a list of SNMP variables identified 
 by the Object Identifier list stored in this SnmpRequestServer instance.
 The following ErrorCodes can be set: SNMP_NOT_INIT,OID_NOT_SPECIFIED,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the Request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendSetRequest(java.lang.String)"><!-- --></A><H3>
sendSetRequest</H3>
<PRE>
public int <B>sendSetRequest</B>(java.lang.String&nbsp;value)
                   throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a set request with the value to be set for the ObjectID 
 This method will fail if MIB with this variable 
 is not loaded or this is not a leaf node in the MIB.  
 Throws DataException  if no OID specified earlier or in case of errors. 
 The following ErrorCodes can be set: OID_NOT_SPECIFIED, MIB_NODE_UNAVAIL,
 OID_NOT_LEAF, ERR_CREATING_VARIABLE, SNMP_NOT_INIT, SESSION_REMOTE_HOST_UNKNOWN,
  SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR, IP_ADDR_NOT_SPECIFIED,
  UNKNOWN_ERR, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the Request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendSetRequest(java.lang.String, byte)"><!-- --></A><H3>
sendSetRequest</H3>
<PRE>
public int <B>sendSetRequest</B>(java.lang.String&nbsp;value,
                          byte&nbsp;type)
                   throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a set request with the value to be set and the type of the variable 
 Throws DataException  
 if no OID specified earlier or in case of errors.  
 The following ErrorCodes can be set: ERR_CREATING_VARIABLE, SNMP_NOT_INIT,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, OID_NOT_SPECIFIED,
 SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the Request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendSetRequestVariable(com.adventnet.snmp.snmp2.SnmpVar)"><!-- --></A><H3>
sendSetRequestVariable</H3>
<PRE>
public int <B>sendSetRequestVariable</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>&nbsp;var)
                           throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a set request to set the specified SnmpVar value for the OID
 that is set in the SnmpRequestServer instance. 		 
 The following ErrorCodes can be set SNMP_NOT_INIT, SESSION_REMOTE_HOST_UNKNOWN,
  SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR, IP_ADDR_NOT_SPECIFIED,
 UNKNOWN_ERR,  OID_NOT_SPECIFIED,SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>-1 if no OID specified earlier or in case of errors.  	
 Returns immediately after sending the Request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendSetRequestList(java.lang.String[])"><!-- --></A><H3>
sendSetRequestList</H3>
<PRE>
public int <B>sendSetRequestList</B>(java.lang.String[]&nbsp;values)
                       throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To set the list of SNMP variable bindings on the agent using 
 the Object Identifier list previously set in this SnmpRequestServer 
 instance.  
 The following ErrorCodes can be set: ERR_CREATING_VARIABLE,
 SNMP_NOT_INIT, SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST,
 IO_ERROR, IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, OID_NOT_SPECIFIED,
  MIB_NODE_UNAVAIL, OID_NOT_LEAF, ILLEGAL_ARG, SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>-1 if no OIDs specified earlier or in case of errors.  
 Returns immediately after sending the request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendSetRequestVariables(com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
sendSetRequestVariables</H3>
<PRE>
public int <B>sendSetRequestVariables</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
                            throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a set request to set the list of SNMP variable 
 bindings on the agent, using the Object Identifier list previously 
 set in this SnmpRequestServer instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT, SESSION_REMOTE_HOST_UNKNOWN,
  SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR, IP_ADDR_NOT_SPECIFIED,
 UNKNOWN_ERR,  OID_NOT_SPECIFIED,SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>-1 if no OIDs specified earlier or in case of errors.  
 Returns immediately after sending the request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendGetBulkRequestList()"><!-- --></A><H3>
sendGetBulkRequestList</H3>
<PRE>
public int <B>sendGetBulkRequestList</B>()</PRE>
<DL>
<DD>To send a GetBulk request to get a list of SNMP variable bindings 
 from the agent using the Object Identifier list previously set 
 in this SnmpRequestServer instance.  
 The following ErrorCodes can be set: SNMP_NOT_INIT,SESSION_REMOTE_HOST_UNKNOWN,
 SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,IP_ADDR_NOT_SPECIFIED,
 UNKNOWN_ERR, OID_NOT_SPECIFIED, INVALID_V1_REQ, SNMP error's defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the request.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])"><!-- --></A><H3>
sendTrap</H3>
<PRE>
public void <B>sendTrap</B>(java.lang.String&nbsp;enterprise,
                     java.lang.String&nbsp;agenthost,
                     int&nbsp;genericType,
                     int&nbsp;specificType,
                     long&nbsp;uptime,
                     java.lang.String[]&nbsp;values)
              throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set in 
 this SnmpRequestServer instance, and the values specified.  
 The following ErrorCodes can be set: ERR_CREATING_VARIABLE, SNMP_NOT_INIT,
 SESSION_REMOTE_HOST_UNKNOWN, SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,
 IP_ADDR_NOT_SPECIFIED, UNKNOWN_ERR, OID_NOT_SPECIFIED,MIB_NODE_UNAVAIL, OID_NOT_LEAF,
 SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="sendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])"><!-- --></A><H3>
sendTrap</H3>
<PRE>
public void <B>sendTrap</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;enterprise,
                     java.lang.String&nbsp;agenthost,
                     int&nbsp;genericType,
                     int&nbsp;specificType,
                     long&nbsp;uptime,
                     <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A>[]&nbsp;values)
              throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To send a SNMP trap, with parameters specified and variable bindings 
 using object ids from the Object Identifier list previously set 
 in this SnmpRequestServer instance, and the values specified.  
 The following Error Codes can be set: SNMP_NOT_INIT,SESSION_REMOTE_HOST_UNKNOWN,
  SECURITYEXP_CONNECTING_REMOTE_HOST, IO_ERROR,IP_ADDR_NOT_SPECIFIED,
 UNKNOWN_ERR, OID_NOT_SPECIFIED,SNMP error's defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the request ID, or return -1 if there's an error sending request.
 Returns immediately after sending the request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorCode()"><CODE>getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html#getErrorString()"><CODE>getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isSerialize()"><!-- --></A><H3>
isSerialize</H3>
<PRE>
public boolean <B>isSerialize</B>()</PRE>
<DL>
<DD>To check the status of Serialization of v3 tables 
 (USMUserTable and SnmpEngineTable)
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSerialize()">isSerialize</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the v3 tables will be serialized and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorResultString(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
getErrorResultString</H3>
<PRE>
public java.lang.String <B>getErrorResultString</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>To get the error string associated with the response PDU
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pdu</CODE> - SnmpPDU
<DT><B>Returns:</B><DD>the Error String</DL>
</DD>
</DL>
<HR>

<A NAME="vetoableChange(java.beans.PropertyChangeEvent)"><!-- --></A><H3>
vetoableChange</H3>
<PRE>
public void <B>vetoableChange</B>(java.beans.PropertyChangeEvent&nbsp;e)</PRE>
<DL>
<DD>This method is called when a vetoableChange event is fired from 
 the propertySetting bean. Creates new users if required
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>vetoableChange</CODE> in interface <CODE>java.beans.VetoableChangeListener</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>e</CODE> - an instance of PropertyChangeEvent</DL>
</DD>
</DL>
<HR>

<A NAME="setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
setParams</H3>
<PRE>
public void <B>setParams</B>(java.lang.String&nbsp;host,
                      java.lang.String&nbsp;port,
                      java.lang.String&nbsp;community,
                      java.lang.String&nbsp;mib,
                      java.lang.String&nbsp;oid)</PRE>
<DL>
<DD>To set Multiple parameters like TargetHost,Port,Community,MibModule and OID.
 If any of these parameters need not be set,then it should be given as null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - target host<DD><CODE>port</CODE> - target port<DD><CODE>community</CODE> - community name<DD><CODE>mib</CODE> - mib file<DD><CODE>oid</CODE> - OID</DL>
</DD>
</DL>
<HR>

<A NAME="setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"><!-- --></A><H3>
setParams</H3>
<PRE>
public void <B>setParams</B>(java.lang.String&nbsp;host,
                      java.lang.String&nbsp;port,
                      java.lang.String&nbsp;community,
                      java.lang.String&nbsp;mib,
                      java.lang.String[]&nbsp;oidlist)</PRE>
<DL>
<DD>To set Multiple parameters like TargetHost,Port,Community,MibModule and OIDList.
 If any of these parameters need not be set,then it should be given as null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - target host<DD><CODE>port</CODE> - target port<DD><CODE>community</CODE> - community name<DD><CODE>mib</CODE> - mib file<DD><CODE>oidlist</CODE> - a String array of OIDs</DL>
</DD>
</DL>
<HR>

<A NAME="addLogClient(com.adventnet.utils.LogInterface)"><!-- --></A><H3>
addLogClient</H3>
<PRE>
public void <B>addLogClient</B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</PRE>
<DL>
<DD>Add the Log client for which the SnmpRequestServer
  has to redirect the log messages
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addLogClient(com.adventnet.afp.log.LoggerProperties)"><!-- --></A><H3>
addLogClient</H3>
<PRE>
public void <B>addLogClient</B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps)
                  throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>Adds the Log client for which the target has to redirect the log messages.
 This method can be called when advanced method level logging mechanism 
 needs to be used. This method is used to create a new Logger. The 
 properties of the module are specified in the loggerProps.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>loggerProps</CODE> - - A LoggerProperties instance having the properties 
 of the Logger such as loggingLevel.
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="removeLogClient()"><!-- --></A><H3>
removeLogClient</H3>
<PRE>
public void <B>removeLogClient</B>()</PRE>
<DL>
<DD>Removes the Log client that has been registered to redirect 
 the log Messages for this instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setBroadCastEnable(boolean)"><!-- --></A><H3>
setBroadCastEnable</H3>
<PRE>
public void <B>setBroadCastEnable</B>(boolean&nbsp;broadcast)</PRE>
<DL>
<DD>Calling this method with a "true" value will indicate that
 the request is to be sent as a broadcast request.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>broadcast</CODE> - the boolean value which says, whether the 
  request is broadcast.</DL>
</DD>
</DL>
<HR>

<A NAME="isBroadCastEnabled()"><!-- --></A><H3>
isBroadCastEnabled</H3>
<PRE>
public boolean <B>isBroadCastEnabled</B>()</PRE>
<DL>
<DD>Returns the current status as to whether broadcasting is enabled/disabled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if broadcast is enabled, otherwise false.</DL>
</DD>
</DL>
<HR>

<A NAME="releaseResources()"><!-- --></A><H3>
releaseResources</H3>
<PRE>
public void <B>releaseResources</B>()</PRE>
<DL>
<DD>Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpRequestServer bean instance, this method 
 can be used to immediately release the resources.
 <b>
 Close the session and api if number of targets sharing it becomes zero.
 Otherwise decrement the object count for that session and api.</b>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#releaseResources()">releaseResources</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpPropertyChangeEvent.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServerBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpRequestServer.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
