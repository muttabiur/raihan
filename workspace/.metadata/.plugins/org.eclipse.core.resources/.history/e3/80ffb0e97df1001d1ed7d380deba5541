<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:54 IST 2009 -->
<TITLE>
LogPrintStream (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="LogPrintStream (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogLevel.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogPrintWriter.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LogPrintStream.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_java.io.FilterOutputStream">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.afp.log</FONT>
<BR>
Class  LogPrintStream</H2>
<PRE>
java.lang.Object
  |
  +--java.io.OutputStream
        |
        +--java.io.FilterOutputStream
              |
              +--java.io.PrintStream
                    |
                    +--<B>com.adventnet.afp.log.LogPrintStream</B>
</PRE>
<HR>
<DL>
<DT>public class <B>LogPrintStream</B><DT>extends java.io.PrintStream</DL>

<P>
This class will direct all the system out and system err log messages to the files mentioned
  under the SYS_OUT and SYS_ERR tags respectively. These tags are similar to LOG_WRITER tag in the 
  file <B><I>conf/logging.xml</I></B>. The system out and system err properties will be retreived from
  the class XMLLogReader. The message "Logging Started" will be displayed for every start of the new file.
  The message "Logging Continued" will be displayed when the file is changed. The current log file
  will be always the stdout.txt and stderr.txt . Only the previous files will be incremented.
  The line count and the file count is maintained in each and every log files stdout and stderr.
  After initializing this class, the further System.out and System.err calls will move the corresponding
  messages to the files stdout and stderr respectively under logs directory.
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_java.io.FilterOutputStream"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class java.io.FilterOutputStream</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>out</CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->


<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#closePrintStream()">closePrintStream</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will close both the SYS_OUT and SYS_ERR streams that are opened.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#init(java.lang.String, java.lang.String)">init</A></B>(java.lang.String&nbsp;homeDir,
     java.lang.String&nbsp;configurationFileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method obtains all the properties for the SYS_OUT and SYS_ERR from the file
  XMLLogReader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(boolean)">print</A></B>(boolean&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(char)">print</A></B>(char&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(char[])">print</A></B>(char[]&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(double)">print</A></B>(double&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(float)">print</A></B>(float&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(int)">print</A></B>(int&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(long)">print</A></B>(long&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(java.lang.Object)">print</A></B>(java.lang.Object&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#print(java.lang.String)">print</A></B>(java.lang.String&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println()">println</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(boolean)">println</A></B>(boolean&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(char)">println</A></B>(char&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(char[])">println</A></B>(char[]&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(double)">println</A></B>(double&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(float)">println</A></B>(float&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(int)">println</A></B>(int&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(long)">println</A></B>(long&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(java.lang.Object)">println</A></B>(java.lang.Object&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#println(java.lang.String)">println</A></B>(java.lang.String&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#setErr(java.lang.String)">setErr</A></B>(java.lang.String&nbsp;header)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will open the new print stream for the System err messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#setOut(java.lang.String)">setOut</A></B>(java.lang.String&nbsp;header)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will open the new print stream for the System out messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#setSysErrProps(java.util.Properties)">setSysErrProps</A></B>(java.util.Properties&nbsp;errProp)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will set all the system err properties to their respective variables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LogPrintStream.html#setSysOutProps(java.util.Properties)">setSysOutProps</A></B>(java.util.Properties&nbsp;outProp)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will set all the system out properties to their respective variables.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.io.PrintStream"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.io.PrintStream</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>checkError, close, flush, setError, write, write</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.io.FilterOutputStream"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.io.FilterOutputStream</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>write</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->


<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="init(java.lang.String, java.lang.String)"><!-- --></A><H3>
init</H3>
<PRE>
public static void <B>init</B>(java.lang.String&nbsp;homeDir,
                        java.lang.String&nbsp;configurationFileName)
                 throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method obtains all the properties for the SYS_OUT and SYS_ERR from the file
  XMLLogReader. This method does all the initialization work getting all the system properties
  and setting the properties. If the values for the corresponding property is null, then
  the default porperty will be set.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>homeDir</CODE> - It will get the home directory.<DD><CODE>configurationFileName</CODE> - It will get the configuration file names(For example, logging.xml).
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - if an error occurs during initialization</DL>
</DD>
</DL>
<HR>

<A NAME="setSysOutProps(java.util.Properties)"><!-- --></A><H3>
setSysOutProps</H3>
<PRE>
public static void <B>setSysOutProps</B>(java.util.Properties&nbsp;outProp)
                           throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method will set all the system out properties to their respective variables.
  Various properties of the SYS_OUT are Maximum line count, maximum file count, logging status
  and usetimestamp. At runtime, these properties can be changed and set.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>outProp</CODE> - SYS_OUT properties are passed.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - if an error occurs during setting of the SYS_OUT properties.</DL>
</DD>
</DL>
<HR>

<A NAME="setSysErrProps(java.util.Properties)"><!-- --></A><H3>
setSysErrProps</H3>
<PRE>
public static void <B>setSysErrProps</B>(java.util.Properties&nbsp;errProp)
                           throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method will set all the system err properties to their respective variables.
  Various properties of the SYS_ERR are Maximum line count, maximum file count, logging status
  and usetimestamp. At runtime, these properties can be changed and set.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errProp</CODE> - SYS_ERR properties are passed.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - if an error occurs during setting of the SYS_ERR properties.</DL>
</DD>
</DL>
<HR>

<A NAME="println(java.lang.String)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(java.lang.String&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(java.lang.Object)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(java.lang.Object&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(long)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(long&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(int)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(int&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(float)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(float&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(double)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(double&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(char[])"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(char[]&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(char)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(char&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println(boolean)"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>(boolean&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="println()"><!-- --></A><H3>
println</H3>
<PRE>
public void <B>println</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>println</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(java.lang.String)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(java.lang.String&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(java.lang.Object)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(java.lang.Object&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(long)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(long&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(int)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(int&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(float)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(float&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(double)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(double&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(char[])"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(char[]&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(char)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(char&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="print(boolean)"><!-- --></A><H3>
print</H3>
<PRE>
public void <B>print</B>(boolean&nbsp;message)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>print</CODE> in class <CODE>java.io.PrintStream</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="closePrintStream()"><!-- --></A><H3>
closePrintStream</H3>
<PRE>
public static void <B>closePrintStream</B>()
                             throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method will close both the SYS_OUT and SYS_ERR streams that are opened.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - if an error occurs while closing the streams.</DL>
</DD>
</DL>
<HR>

<A NAME="setOut(java.lang.String)"><!-- --></A><H3>
setOut</H3>
<PRE>
public static void <B>setOut</B>(java.lang.String&nbsp;header)
                   throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method will open the new print stream for the System out messages. The file mentioned
   under the tag SYS_OUT will be opened and the system out messages are directed to this file.
   Each time the file reaches the maximum line count, the new file will be opened. The current
   file will always be stdout.txt whereas the previous files will be incremented. Each time the new
   print stream is opened for a file, the total number of files of same type will be checked
   whether maximum file is reached. when the maximum file count is reached, the older files will
   be deleted.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>header</CODE> - The header is printed at the top of the new file .
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - If an error occurs during initialization of stdout stream</DL>
</DD>
</DL>
<HR>

<A NAME="setErr(java.lang.String)"><!-- --></A><H3>
setErr</H3>
<PRE>
public static void <B>setErr</B>(java.lang.String&nbsp;header)
                   throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>This method will open the new print stream for the System err messages. The file mentioned
   under the tag SYS_ERR will be opened and the system err messages are directed to this file.
   Each time the file reaches the maximum line count, the new file will be opened. The current
   file will always be stderr.txt whereas the previous files will be incremented. Each time the new
   print stream is opened for a file, the total number of files of same type will be checked
   whether maximum file count is reached. when the maximum file count is reached, the older files will
   be deleted.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>header</CODE> - The header is printed at the top of the new file.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - If an error occurs during initialization of stderr stream</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogLevel.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogPrintWriter.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LogPrintStream.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_java.io.FilterOutputStream">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
