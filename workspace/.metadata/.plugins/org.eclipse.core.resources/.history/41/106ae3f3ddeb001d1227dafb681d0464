<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:02 IST 2006 -->
<TITLE>
SnmpOID (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpOID (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNull.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOpaque.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpOID.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpOID</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">com.adventnet.snmp.snmp2.SnmpVar</A>
        |
        +--<B>com.adventnet.snmp.snmp2.SnmpOID</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpOID</B><DT>extends <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></DL>

<P>
Class of SNMP Object ID - Sub-class of SnmpVar 
 This class can be used to create an SnmpVar object of type OBJECT IDENTIFIER.
 It also has methods to retrieve the value in different forms(eg. String,
 byte array, int array, long array).
 <p>Some examples for valid OID are:
 <br><i>SnmpOID oid1 = new SnmpOID("1.1.0");</i>
 <br><i>SnmpOID oid2 = new SnmpOID(".1.3.6.1.2.1.1.1.0");</i>

 <p>An Invalid oid will be
 <br><i>SnmpOID oid3 = new SnmpOID(".iso.org.dod.internet.mgmt.mib-2.system.sysDescr");</i>
 <br>as the argument will not accept names in the OID.

 <p><u>Note:</u>
 <br>Since the constructor does not report about the invalidity of the 
 arguments, a better way to identify whether an SnmpOID is constructed
 succesfully or not is:

 <i>
 <br>SnmpOID oid4 = new SnmpOID("1.1.0");
 <br>if(oid4.toValue() != null)
 <br>{
 <br>&nbsp;&nbsp;&nbsp; System.out.println("SnmpOID successfully created");
 <br>}
 <br>else
 <br>{
 <br>&nbsp;&nbsp;&nbsp; System.out.println("There is some problem in
  creating SnmpOID");
 <br>}
 </i>
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpOID">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#SnmpOID(int[])">SnmpOID</A></B>(int[]&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpOID by taking an array of ints as an argument.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#SnmpOID(java.lang.String)">SnmpOID</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpOID which requires the argument to be a 
 String OID of the form .N.N.N, or N.N.N.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;anObject)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compares this SnmpOID to the specified object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#getLexicographicallyFirstOID(com.adventnet.snmp.snmp2.SnmpOID[])">getLexicographicallyFirstOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The method finds the lexicographically first oid in the list of two oids
 given.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#getLexicographicallyFirstOID(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)">getLexicographicallyFirstOID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid1,
                             <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The method finds the lexicographically first oid in the list of two oids
 given.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#getNumericValueAsString()">getNumericValueAsString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will throw UnsupportedOperationException since this
 is not a numeric data type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#getVarObject()">getVarObject</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpOID as a printable string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#hashCode()">hashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a hash code value for this SnmpOID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toBytes()">toBytes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpOID as raw bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toIntArray()">toIntArray</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 <br>Returns the value of this SnmpOID value as an array of integers.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toLongArray()">toLongArray</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpOID as an array of long.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts the value of this SnmpOID object to a printable string
 used in printing.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toTagString()">toTagString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts the value of this SnmpOID object to a printable string
 where the type is tagged before the value with a tag "Object ID: ".</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html#toValue()">toValue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of this SnmpOID object as an array of ints.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.snmp2.SnmpVar"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#createVariable(java.lang.String, byte)">createVariable</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getError()">getError</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getType()">getType</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getTypeString()">getTypeString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpOID(java.lang.String)"><!-- --></A><H3>
SnmpOID</H3>
<PRE>
public <B>SnmpOID</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Constructs a new SnmpOID which requires the argument to be a 
 String OID of the form .N.N.N, or N.N.N. If the given OID does not start
 with a dot then the static Standard_Prefix(.1.3.6.1.2.1.) in the SnmpAPI 
 class will be prepended with the given OID. Here N should be a number, 
 not a name.
<P>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - A String OID of the form .N.N.N, or N.N.N where N is a number and
 not a name.</DL>
<HR>

<A NAME="SnmpOID(int[])"><!-- --></A><H3>
SnmpOID</H3>
<PRE>
public <B>SnmpOID</B>(int[]&nbsp;oid)</PRE>
<DL>
<DD>Constructs a new SnmpOID by taking an array of ints as an argument.
 The array of integers is the complete OID and method does not take any 
 standard prefixes.
<P>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - The array of int values representing the OID's
 sub-identifiers.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="toValue()"><!-- --></A><H3>
toValue</H3>
<PRE>
public java.lang.Object <B>toValue</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpOID object as an array of ints.
 This method is same as that of toIntArray.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toValue()">toValue</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpOID object as an array of ints.
 will return `null', if this SnmpOID object has not constructed
 successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="toIntArray()"><!-- --></A><H3>
toIntArray</H3>
<PRE>
public int[] <B>toIntArray</B>()</PRE>
<DL>
<DD><p>
 <br>Returns the value of this SnmpOID value as an array of integers. 
 The number of subOIDs in the OID is  limited to a maximum of 128. The 
 value of an OID component also ranges from 0 to 2**32 -1. That is, 
 it ranges from 0 to 4294967295. All the sub-identifiers that are 
 greater than 2147483647 will wrap around to the negative side of 
 the `int'.
 
 <p>
 <br>example 1:
 <br><i>SnmpOID oid1 = new SnmpOID(".1.0");</i>
 <br><i>int[] first_arr = oid1.toIntArray();</i>
 <br>now this array will contain the following
 <br>first_arr[0] = 1
 <br>first_arr[1] = 0 

 <p>
 <br>example 2:
 <br><i>SnmpOID oid2 = new SnmpOID(".1.2147483647");</i>
 <br><i>int[] second_arr = oid2.toIntArray();</i>
 <br>now this array will contain the following
 <br>second_arr[0] = 1
 <br>second_arr[1] = 2147483647
 
 <p>
 <br>example 3:
 <br><i>SnmpOID oid3 = new SnmpOID(".1.2147483648");</i>
 <br><i>int[] third_arr = oid3.toIntArray();</i>
 <br>now this array will contain the following
 <br>third_arr[0] = 1
 <br>third_arr[1] = -2147483648

 <p>
 <br>If the sub-identifiers are greater than 2147483647 than "toLongArray"
 can be used.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The Object ID value of this SnmpOID as an array of ints
 will return `null', if this SnmpOID object has not constructed
 successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="toLongArray()"><!-- --></A><H3>
toLongArray</H3>
<PRE>
public long[] <B>toLongArray</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpOID as an array of long.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpOID as an array of long.
 will return `null', if this SnmpOID object has not constructed
 successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="toBytes()"><!-- --></A><H3>
toBytes</H3>
<PRE>
public byte[] <B>toBytes</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpOID as raw bytes. The raw bytes are
 obtained by expressing each of the sub-identifier as 4 bytes.
 <pre>
 For example, if the oid is ".1.3.6", then the raw bytes will be
 rawBytes[0]  = 0;
 rawBytes[1]  = 0;
 rawBytes[2]  = 0;
 rawBytes[3]  = 1;

 rawBytes[4]  = 0;
 rawBytes[5]  = 0;
 rawBytes[6]  = 0;
 rawBytes[7]  = 3;

 rawBytes[8]  = 0;
 rawBytes[9]  = 0;
 rawBytes[10] = 0;
 rawBytes[11] = 6;
 </pre>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toBytes()">toBytes</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpOID as raw bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="getLexicographicallyFirstOID(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)"><!-- --></A><H3>
getLexicographicallyFirstOID</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A> <B>getLexicographicallyFirstOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid1,
                                                   <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>&nbsp;oid2)</PRE>
<DL>
<DD>The method finds the lexicographically first oid in the list of two oids
 given. For example, if oid1 is .1.3.6.1.2.1.1.1.0 and oid½ is
 .1.3.6.1.2.1.1.2.0, then the method will return oid1, since oid1 is
 lesser than oid2 lexicographically.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid1</CODE> - The SnmpOID for which the lexicographic order should be
 found<DD><CODE>oid2</CODE> - The SnmpOID for which the lexicographic order should be
 found
<DT><B>Returns:</B><DD>returns the lexicographically first oid among the two arguments.
 If any of the input arguments is null, then the method will return null.</DL>
</DD>
</DL>
<HR>

<A NAME="getLexicographicallyFirstOID(com.adventnet.snmp.snmp2.SnmpOID[])"><!-- --></A><H3>
getLexicographicallyFirstOID</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A> <B>getLexicographicallyFirstOID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]&nbsp;oids)</PRE>
<DL>
<DD>The method finds the lexicographically first oid in the list of two oids
 given. For example, if oid1 is .1.3.6.1.2.1.1.1.0 and oid½ is
 .1.3.6.1.2.1.1.2.0, then the method will return oid1, since oid1 is
 lesser than oid2 lexicographically.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oids</CODE> - The SnmpOID list in which the lexicographically first oid
 should be found.
<DT><B>Returns:</B><DD>returns the lexicographically first oid among the OID array.
 If the input argument is null or of size 1, then the method will return
 null.</DL>
</DD>
</DL>
<HR>

<A NAME="getVarObject()"><!-- --></A><H3>
getVarObject</H3>
<PRE>
public java.lang.Object <B>getVarObject</B>()</PRE>
<DL>
<DD>Returns the value of this SnmpOID as a printable string.
 Eg. If OID is .1.3.6, then this method returns the ObjectID ".1.3.6"
 as a String Object. This method is the same as toString().
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getVarObject()">getVarObject</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpOID as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Converts the value of this SnmpOID object to a printable string
 used in printing.
 Eg. If OID is "1.1.0", then this method returns the ObjectID 
 ".1.3.6.1.2.1.1.1.0" as a String Object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toString()">toString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpOID as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="toTagString()"><!-- --></A><H3>
toTagString</H3>
<PRE>
public java.lang.String <B>toTagString</B>()</PRE>
<DL>
<DD>Converts the value of this SnmpOID object to a printable string
 where the type is tagged before the value with a tag "Object ID: ".
 For e.g if the SnmpOID has the value "1.1.0", then this method will
 return - "Object ID: .1.3.6.1.2.1.1.1.0" .
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toTagString()">toTagString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of SnmpOID object as a printable string where
 the type is tagged before the value with a Tag - "Object ID: ".</DL>
</DD>
</DL>
<HR>

<A NAME="hashCode()"><!-- --></A><H3>
hashCode</H3>
<PRE>
public int <B>hashCode</B>()</PRE>
<DL>
<DD>Returns a hash code value for this SnmpOID.
 The hashCode is computed as follows:
 <br>
 If the oid is
 <br>
 String s = ".1.3.6.1.2.1.1.1.0";
 <br>
 then the hashCode is
 <br>
 s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
 <br>
 using int arithmetic, where s[i] is the ith character of
 the string, n is the length of the string,
 and ^ indicates exponentiation. (The hash value of the
 empty string is zero.)
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>hashCode</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The hash code value for this object.</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <B>equals</B>(java.lang.Object&nbsp;anObject)</PRE>
<DL>
<DD>Compares this SnmpOID to the specified object.
 The result is <code>true</code> only if the argument is not
 <code>null</code> and is an <code>SnmpOID</code> object that represents
 the same value as this object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>equals</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>anObject</CODE> - the object to compare this <code>SnmpOID</code>
 against.
<DT><B>Returns:</B><DD><code>true</code> if the <code>SnmpOIDs </code>are equal;
 <code>false</code> otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getNumericValueAsString()"><!-- --></A><H3>
getNumericValueAsString</H3>
<PRE>
public java.lang.String <B>getNumericValueAsString</B>()</PRE>
<DL>
<DD>This method will throw UnsupportedOperationException since this
 is not a numeric data type.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getNumericValueAsString()">getNumericValueAsString</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Nothing is returned since this method throws an exception.
<DT><B>Throws:</B>
<DD><CODE>java.lang.UnsupportedOperationException</CODE> - Since this
 is not a numeric data type.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNull.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOpaque.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpOID.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
