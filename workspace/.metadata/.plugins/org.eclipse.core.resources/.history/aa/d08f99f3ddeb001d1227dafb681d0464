<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:02 IST 2006 -->
<TITLE>
SecurityProvider (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SecurityProvider (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SecurityProvider.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SecurityProvider</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.snmp2.SecurityProvider</B>
</PRE>
<HR>
<DL>
<DT>public class <B>SecurityProvider</B><DT>extends java.lang.Object</DL>

<P>
This class is used to register the appropriate security model to be
 used with AdventNet SNMP API. The API users need not instantiate this class.
 The SnmpAPI does it and provides method getSecurityProvider() to get
 the SecurityProvider reference. With this reference, the user has to 
 register the appropriate securityModel using the 
 registerSecurityModel method by specifying the security model number,
 securityModelTable and securityModelEntry class names.
 By default the USM security model is registered. So there is no need
 to register the USM security model. 
 <p>
 Two abstract classes, SecurityModelEntry and SecurityModelTable are
 provided to implement a new Security Model. The SecurityModelEntry has 
 abstract methods to encode/decode
 the messageSecurityParameters and authenticate the message to be 
 sent/received. The SecurityModelEntry should be extended to provide
 security model specific attributes. The SecurityModelTable is used to
 mainatin a list of SecurityModel entries. For e.g In case of USM 
 security model, the SecurityModelEntry will have userName, engineID, 
 engineBoots, engineTime, authentication parameters and privacy 
 parameters as attributes. Each user is identified by a SecurityModelEntry. 
 The SecurityModelTable will have a list of these model entries for each 
 user. The SecurityModelTable abstract class has abstract methods
 to add, delete and modify SecurityModel entries.
 <p>
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html"><CODE>SecurityModelEntry</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><CODE>SecurityModelTable</CODE></A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#ENTRY_CLASS">ENTRY_CLASS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The offset values of the Table and Entry class names stored.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#TABLE_CLASS">TABLE_CLASS</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The offset values of the Table and Entry class names stored.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->


<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#createTable(int)">createTable</A></B>(int&nbsp;m)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new SecurityModelTable Object for the specific
 securityModel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#getClassNames(int)">getClassNames</A></B>(int&nbsp;model)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the SecurityModelTable and SecurityModelEntry class names
 as an array of strings.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#getTable(int)">getTable</A></B>(int&nbsp;m)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the SecurityModelTable as an object for a given security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A></B>(int&nbsp;m)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies if a particular security model is supported or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#registerSecurityModel(int, java.lang.String, java.lang.String)">registerSecurityModel</A></B>(int&nbsp;m,
                      java.lang.String&nbsp;tableClassName,
                      java.lang.String&nbsp;entryClassName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Registers a particular security model to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#unRegisterSecurityModel(int)">unRegisterSecurityModel</A></B>(int&nbsp;m)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unregisters a supported security model.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="TABLE_CLASS"><!-- --></A><H3>
TABLE_CLASS</H3>
<PRE>
public static final int <B>TABLE_CLASS</B></PRE>
<DL>
<DD>The offset values of the Table and Entry class names stored.
 Useful in getting the Table and Entry class names from
 the getClassNames method.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SecurityProvider.TABLE_CLASS">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ENTRY_CLASS"><!-- --></A><H3>
ENTRY_CLASS</H3>
<PRE>
public static final int <B>ENTRY_CLASS</B></PRE>
<DL>
<DD>The offset values of the Table and Entry class names stored.
 Useful in getting the Table and Entry class names from
 the getClassNames method.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.SecurityProvider.ENTRY_CLASS">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->


<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="createTable(int)"><!-- --></A><H3>
createTable</H3>
<PRE>
public java.lang.Object <B>createTable</B>(int&nbsp;m)
                             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates a new SecurityModelTable Object for the specific
 securityModel. A new SecurityModelTable Object will be instantiated
 once, for the SecurityModelTable class specified while registering
 the securityModel. The API user should not instantiate a security
 model Table. He should use the SecurityModelTable Object instance
 from this provider class. The SecurityModelTable Object instance 
 can be got by the getTable() method in this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the appropriate securityModelTable Object instantiated.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - appropriate SecurityModelTable object
 instance could not be created.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html#getTable(int)"><CODE>getTable(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTable(int)"><!-- --></A><H3>
getTable</H3>
<PRE>
public java.lang.Object <B>getTable</B>(int&nbsp;m)</PRE>
<DL>
<DD>Returns the SecurityModelTable as an object for a given security model.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the SecurityModelTable as an object for a given security model.
 Null if the SecurityModelTable is not created.</DL>
</DD>
</DL>
<HR>

<A NAME="registerSecurityModel(int, java.lang.String, java.lang.String)"><!-- --></A><H3>
registerSecurityModel</H3>
<PRE>
public boolean <B>registerSecurityModel</B>(int&nbsp;m,
                                     java.lang.String&nbsp;tableClassName,
                                     java.lang.String&nbsp;entryClassName)</PRE>
<DL>
<DD>Registers a particular security model to be used.
 The class name of the table class that extends the SecurityModelTable
 and the class name of the entry class are required in addition
 to the security model number.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>m</CODE> - The securityModel number of the security model to be
 registered.<DD><CODE>tableClassName</CODE> - The class name of the table class that
 extends the SecurityModelTable.<DD><CODE>entryClassName</CODE> - The class name of the entry class that
 extends the SecurityModelEntry.
<DT><B>Returns:</B><DD>true if the security model was successfully registered.
 False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="unRegisterSecurityModel(int)"><!-- --></A><H3>
unRegisterSecurityModel</H3>
<PRE>
public boolean <B>unRegisterSecurityModel</B>(int&nbsp;m)</PRE>
<DL>
<DD>Unregisters a supported security model. This method unregisters 
 a previously registered securityModel.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>m</CODE> - The securityModel number to be unregistered.
<DT><B>Returns:</B><DD>true if the specified security model was successfully
 unregistered. False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isSupportedSecurityModel(int)"><!-- --></A><H3>
isSupportedSecurityModel</H3>
<PRE>
public boolean <B>isSupportedSecurityModel</B>(int&nbsp;m)</PRE>
<DL>
<DD>Specifies if a particular security model is supported or not.
 Returns true if the security model is supported. False otherwise.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>m</CODE> - The secuirty model number which needs to be checked if it
 is supported.
<DT><B>Returns:</B><DD>true if the specified securitymodel is supported. 
 False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getClassNames(int)"><!-- --></A><H3>
getClassNames</H3>
<PRE>
public java.lang.String[] <B>getClassNames</B>(int&nbsp;model)</PRE>
<DL>
<DD>Returns the SecurityModelTable and SecurityModelEntry class names
 as an array of strings. One can use the fields TABLE_CLASS
 and ENTRY_CLASS provided in this class to get the 
 SecurityModelTable and SecurityModelEntry class names.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>model</CODE> - The security model for which the security model 
 table and entry class have to be retrived.
<DT><B>Returns:</B><DD>the SecurityModelTable and SecurityModelEntry class names
 as an array of strings.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelTable.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SecurityProvider.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
