<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:49 IST 2009 -->
<TITLE>
Snmp3Message (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="Snmp3Message (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpACM.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Snmp3Message.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  Snmp3Message</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html">com.adventnet.snmp.snmp2.SnmpMessage</A>
        |
        +--<B>com.adventnet.snmp.snmp2.Snmp3Message</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>Snmp3Message</B><DT>extends <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html">SnmpMessage</A><DT>implements java.io.Serializable</DL>

<P>
This class encapsulates a v3 message. The message contains the version 
 specifc pdu processing routines. Additional routines provide access to the
 security data, the security model specific constants etc..
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.Snmp3Message">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that authenticated message be sent to the peer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#AUTH_PRIV">AUTH_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that authentication and privacy are used in the
 communication with the peer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that both authentication and privacy should not be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#REPORT_FLAG">REPORT_FLAG</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that the report flag is set when request is sent out.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#Snmp3Message()">Snmp3Message</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#Snmp3Message(byte[])">Snmp3Message</A></B>(byte[]&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an Snmp3Message object initialised with the given byte array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#Snmp3Message(byte[], com.adventnet.snmp.snmp2.ProtocolOptions)">Snmp3Message</A></B>(byte[]&nbsp;message,
             <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;res_opt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an Snmp3Message object initialised with the given byte array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#Snmp3Message(byte[], com.adventnet.snmp.snmp2.SecurityProvider)">Snmp3Message</A></B>(byte[]&nbsp;message,
             <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A>&nbsp;securityprovider)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an Snmp3Message object initialised with the given byte array
 and security provider.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html">SnmpAPI</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getAPI()">getAPI</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getASNParser()">getASNParser</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getMsgFlags()">getMsgFlags</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the msgFlags field of the SNMP PDU.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getMsgID()">getMsgID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the message Id for the v3 packet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getMsgMaxSize()">getMsgMaxSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the max message size field of the SNMPV3 packet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getSecurity()">getSecurity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get securityModel object is associated with the message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getSecurityModel()">getSecurityModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the securityModel assoicated with this message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#getSecurityProvider()">getSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#isAuthenticationFailed()">isAuthenticationFailed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a boolean value based on whether V3 authentication has 
 failed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#setMsgFlags(byte)">setMsgFlags</A></B>(byte&nbsp;flags)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This methods sets the message flags of the SNMPv3 message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#setMsgID(int)">setMsgID</A></B>(int&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the message Id for the v3 packet</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#setMsgMaxSize(int)">setMsgMaxSize</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the message max size field for the SNMPV3 packet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#setSecurity(com.adventnet.snmp.snmp2.SecurityModelEntry, int)">setSecurity</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A>&nbsp;entry,
            int&nbsp;modelNo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set securityModel object is associated with the message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/Snmp3Message.html#setSecurityProvider(com.adventnet.snmp.snmp2.SecurityProvider)">setSecurityProvider</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A>&nbsp;provider)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.snmp2.SnmpMessage"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.snmp2.<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html">SnmpMessage</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html#getPDU()">getPDU</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpMessage.html#setMsgVersion(int)">setMsgVersion</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="NO_AUTH_NO_PRIV"><!-- --></A><H3>
NO_AUTH_NO_PRIV</H3>
<PRE>
public static final byte <B>NO_AUTH_NO_PRIV</B></PRE>
<DL>
<DD>Used to specify that both authentication and privacy should not be used.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.Snmp3Message.NO_AUTH_NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="AUTH_NO_PRIV"><!-- --></A><H3>
AUTH_NO_PRIV</H3>
<PRE>
public static final byte <B>AUTH_NO_PRIV</B></PRE>
<DL>
<DD>Used to specify that authenticated message be sent to the peer.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.Snmp3Message.AUTH_NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="AUTH_PRIV"><!-- --></A><H3>
AUTH_PRIV</H3>
<PRE>
public static final byte <B>AUTH_PRIV</B></PRE>
<DL>
<DD>Used to specify that authentication and privacy are used in the
 communication with the peer.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.Snmp3Message.AUTH_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="REPORT_FLAG"><!-- --></A><H3>
REPORT_FLAG</H3>
<PRE>
public static final byte <B>REPORT_FLAG</B></PRE>
<DL>
<DD>Used to specify that the report flag is set when request is sent out.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.snmp2.Snmp3Message.REPORT_FLAG">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="Snmp3Message()"><!-- --></A><H3>
Snmp3Message</H3>
<PRE>
public <B>Snmp3Message</B>()</PRE>
<DL>
</DL>
<HR>

<A NAME="Snmp3Message(byte[], com.adventnet.snmp.snmp2.SecurityProvider)"><!-- --></A><H3>
Snmp3Message</H3>
<PRE>
public <B>Snmp3Message</B>(byte[]&nbsp;message,
                    <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A>&nbsp;securityprovider)
             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates an Snmp3Message object initialised with the given byte array
 and security provider. This byte array is the PDU data to be decoded. 		      * This method is used only to decode the received PDU data.
<P>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown upon error.</DL>
<HR>

<A NAME="Snmp3Message(byte[])"><!-- --></A><H3>
Snmp3Message</H3>
<PRE>
public <B>Snmp3Message</B>(byte[]&nbsp;message)
             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates an Snmp3Message object initialised with the given byte array. 
 This byte array is the PDU data to be decoded. This method is 
 used only to decode the received PDU data and the API user is 
 not advised to use this method.
<P>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown whenever error occurs.</DL>
<HR>

<A NAME="Snmp3Message(byte[], com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
Snmp3Message</H3>
<PRE>
public <B>Snmp3Message</B>(byte[]&nbsp;message,
                    <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;res_opt)
             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates an Snmp3Message object initialised with the given byte array. 
 This byte array is the PDU data to be decoded. This method is 
 used only to decode the received PDU data and the API user is 
 not advised to use this method.
<P>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown whenever error occurs.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="setMsgFlags(byte)"><!-- --></A><H3>
setMsgFlags</H3>
<PRE>
public void <B>setMsgFlags</B>(byte&nbsp;flags)</PRE>
<DL>
<DD>This methods sets the message flags of the SNMPv3 message. The
 "msgFlags" is an OCTET STRING of size one, as defined in the SNMPv3
 message format. Of this one byte, only the least
 significant 3 bits are used.
 <p>The eight bits of this flag can be explained as follows:
 <br>&nbsp;
 <br>&nbsp;
 <table BORDER COLS=8 WIDTH="30%" NOSAVE >
 <tr NOSAVE>
 <td BGCOLOR="#CC0000" NOSAVE><b>NU</b></td>

 <td BGCOLOR="#CC0000" NOSAVE><b>NU</b></td>

 <td BGCOLOR="#CC0000" NOSAVE><b>NU</b></td>

 <td BGCOLOR="#CC0000" NOSAVE><b>NU</b></td>

 <td BGCOLOR="#CC0000" NOSAVE><b>NU</b></td>

 <td BGCOLOR="#009900" NOSAVE><b>R</b></td>

 <td BGCOLOR="#3333FF" NOSAVE><b>P</b></td>

 <td BGCOLOR="#999900" NOSAVE><b>A</b></td>
 </tr>
 </table>

 <p><font color="#CC0000">NU</font> - NOT USED
 <br><font color="#009900">R</font>&nbsp;&nbsp;&nbsp;&nbsp; - Report bit.
 That is, if this bit is set to one, then the SNMPv3 entity that receives
 this message should respond back to the sender.  <br><font
 color="#3333FF">P</font>&nbsp;&nbsp;&nbsp;&nbsp; - Priv bit.
 That is, if this bit is set to one, then this SNMPv3 message uses privacy.
 <br><font color="#999900">A</font>&nbsp;&nbsp;&nbsp;&nbsp; - Auth bit.
 That is, if this bit is set to one, then this SNMPv3 message uses
 authentication.
 <p>The Possible values for this msgFlags are
 <br>&nbsp;
 <br>&nbsp;
 <table BORDER COLS=4 WIDTH="30%" NOSAVE >
 <tr NOSAVE>
 <td NOSAVE>Value in Decimal</td>
 <td>R</td>
 <td>P</td>
 <td>A</td>
 </tr>

 <tr>
 <td>0</td>
 <td>&nbsp;0</td>
 <td>&nbsp;0</td>
 <td>&nbsp;0</td>
 </tr>

 <tr>
 <td>1</td>
 <td>&nbsp;0</td>
 <td>&nbsp;0</td>
 <td>&nbsp;1</td>
 </tr>

 <tr>
 <td>3</td>
	<td>&nbsp;0</td>
	<td>&nbsp;1</td>
	<td>&nbsp;1</td>
	</tr>

	<tr>
	<td>4</td>
	<td>&nbsp;1</td>
	<td>&nbsp;0</td>
	<td>&nbsp;0</td>
	</tr>

 <tr>
 <td>5</td>
 <td>&nbsp;1</td>
 <td>&nbsp;0</td>
 <td>&nbsp;1</td>
 </tr>

 <tr>
 <td>7</td>
 <td>&nbsp;1</td>
 <td>&nbsp;1</td>
 <td>&nbsp;1</td>
 </tr>
 </table>

 <p>There cannot be privacy without authentication, hence the values 2
 and 6 cannot exist.
 <br>&nbsp;
 <br>&nbsp;
 <br>&nbsp;
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flags</CODE> - the msgFlags value to set for this SNMPv3 message. If an
 invalid value is passed as argument to this method, then the method will
 return and the previous value will be retained.</DL>
</DD>
</DL>
<HR>

<A NAME="getMsgFlags()"><!-- --></A><H3>
getMsgFlags</H3>
<PRE>
public byte <B>getMsgFlags</B>()</PRE>
<DL>
<DD>Get the msgFlags field of the SNMP PDU.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the messages flags field in the SNMPV3 message.</DL>
</DD>
</DL>
<HR>

<A NAME="setMsgID(int)"><!-- --></A><H3>
setMsgID</H3>
<PRE>
public void <B>setMsgID</B>(int&nbsp;id)</PRE>
<DL>
<DD>Sets the message Id for the v3 packet
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>id</CODE> - The messageID to be set for the SNMPV3 request.</DL>
</DD>
</DL>
<HR>

<A NAME="getMsgID()"><!-- --></A><H3>
getMsgID</H3>
<PRE>
public int <B>getMsgID</B>()</PRE>
<DL>
<DD>Returns the message Id for the v3 packet.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The messageID of the V3 packet to be sent or received.</DL>
</DD>
</DL>
<HR>

<A NAME="setMsgMaxSize(int)"><!-- --></A><H3>
setMsgMaxSize</H3>
<PRE>
public void <B>setMsgMaxSize</B>(int&nbsp;size)</PRE>
<DL>
<DD>Sets the message max size field for the SNMPV3 packet.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - The maximum message size for the SNMPV3 packet.</DL>
</DD>
</DL>
<HR>

<A NAME="getMsgMaxSize()"><!-- --></A><H3>
getMsgMaxSize</H3>
<PRE>
public int <B>getMsgMaxSize</B>()</PRE>
<DL>
<DD>Returns the max message size field of the SNMPV3 packet.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The maximum message size of the SNMPV3 packet.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurity()"><!-- --></A><H3>
getSecurity</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A> <B>getSecurity</B>()</PRE>
<DL>
<DD>Get securityModel object is associated with the message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The securityModel reference maintained by this object.</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurity(com.adventnet.snmp.snmp2.SecurityModelEntry, int)"><!-- --></A><H3>
setSecurity</H3>
<PRE>
public void <B>setSecurity</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A>&nbsp;entry,
                        int&nbsp;modelNo)</PRE>
<DL>
<DD>Set securityModel object is associated with the message. The Snmp3Message 
 creates a new securitymodel for decoding and encoding. This method
 sets the securitymodel reference
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>entry</CODE> - The security model reference is to set the corresponding
 entry in the message.<DD><CODE>modelNo</CODE> - The securityModel no. is associated with the securit entry</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityModel()"><!-- --></A><H3>
getSecurityModel</H3>
<PRE>
public int <B>getSecurityModel</B>()</PRE>
<DL>
<DD>Returns the securityModel assoicated with this message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityProvider(com.adventnet.snmp.snmp2.SecurityProvider)"><!-- --></A><H3>
setSecurityProvider</H3>
<PRE>
public void <B>setSecurityProvider</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A>&nbsp;provider)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityProvider()"><!-- --></A><H3>
getSecurityProvider</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A> <B>getSecurityProvider</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getASNParser()"><!-- --></A><H3>
getASNParser</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A> <B>getASNParser</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAPI()"><!-- --></A><H3>
getAPI</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html">SnmpAPI</A> <B>getAPI</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isAuthenticationFailed()"><!-- --></A><H3>
isAuthenticationFailed</H3>
<PRE>
public boolean <B>isAuthenticationFailed</B>()</PRE>
<DL>
<DD>Returns a boolean value based on whether V3 authentication has 
 failed. If the received SnmpV3 message fails in the authentication
 module which can be due to wrong digest or timeliness failure, then
 a flag is set to true. This method returns the status of the flag and is
 useful in the authenticate/callback method when the SnmpClient 
 interface is implemented.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>True If the received SnmpV3 message fails in the 
 authentication module, which can be due to wrong message digest or 
 timeliness failure. Returns False otherwise.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpACM.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Snmp3Message.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
