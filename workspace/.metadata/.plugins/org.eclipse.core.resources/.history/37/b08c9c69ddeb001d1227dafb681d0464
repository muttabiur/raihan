<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:04 IST 2006 -->
<TITLE>
SnmpTable (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpTable (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTable.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpTable</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">com.adventnet.snmp.beans.SnmpServer</A>
        |
        +--<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">com.adventnet.snmp.beans.SnmpTarget</A>
              |
              +--<B>com.adventnet.snmp.beans.SnmpTable</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A>, java.util.EventListener, java.lang.Runnable, java.io.Serializable, java.beans.VetoableChangeListener</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/ClippedTable.html">ClippedTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpAugmentTable.html">SnmpAugmentTable</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpTable</B><DT>extends <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A><DT>implements java.lang.Runnable</DL>

<P>
The SnmpTable class handles polling for SNMP tables.
  It has been designed to support the Model-View-Controller 
  design of JFC/swing applications, although this class can be used
  without JFC.  An extension of this class in the
  com.adventnet.snmp.ui package is explicitly for JFC.
  <p>
  To use the table class, instantiate, and identify the SNMP table
  to be used.  Then perform operations on the table, or register
  for table change events.  For example,
  <pre>
  	SnmpTable table = new SnmpTable();
  	table.setTargetHost( "localhost" ); // set the agent hostname
  	table.loadMibs("rfc1213-mib"); // load MIBs
  <br>
      table.addSnmpTableListener(listener);  // specify the listener
  <br>
  	table.setTableOID("ifTable");  // this starts polling of table data
  	
  </pre>
  
  <p>
  The resources used
  by this class are automatically garbage collected.  No need to close
  sessions, or other cleanup by the user.
  <p>
  See the getSnmpTable.java application in the applications
  directory.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpTable">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SNMP_VARIABLE_BINDING_DATA">SNMP_VARIABLE_BINDING_DATA</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant to specify the format in which the data has to be returned.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SNMP_VARIABLE_DATA">SNMP_VARIABLE_DATA</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant to specify the format in which the data has to be returned.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#STRING_DATA">STRING_DATA</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant to specify the format in which the data has to be returned.String is the default.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#serialize">serialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGET">SNMPGET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETBULK">SNMPGETBULK</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPGETNEXT">SNMPGETNEXT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPINFORM">SNMPINFORM</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPREPORT">SNMPREPORT</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPRESPONSE">SNMPRESPONSE</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPSET">SNMPSET</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPTRAP">SNMPTRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#SNMPV2TRAP">SNMPV2TRAP</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION1">VERSION1</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION2C">VERSION2C</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#VERSION3">VERSION3</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SnmpTable()">SnmpTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SnmpTable(java.applet.Applet)">SnmpTable</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SnmpTable(int, com.adventnet.snmp.snmp2.ProtocolOptions)">SnmpTable</A></B>(int&nbsp;protocol,
          <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications which uses protocols
 other than UDP/IP.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SnmpTable(int, java.lang.String)">SnmpTable</A></B>(int&nbsp;port,
          java.lang.String&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for creating a new session for this application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#SnmpTable(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.mibs.MibOperations)">SnmpTable</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;ses,
          <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mib)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This constructor is used to create an SnmpTable instance with a specified 
  SnmpSession and MibOperations.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#addRow(boolean, java.lang.String[], java.lang.String[])">addRow</A></B>(boolean&nbsp;Status,
       java.lang.String[]&nbsp;oidlist,
       java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To add a new row of data into the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#addSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)">addSnmpTableListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html">SnmpTableListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a SnmpTableListener instance to the listener's list.Whenever a 
 change in SnmpTable occurs all the registered listeners will be notified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#checkDifferences(java.util.Vector)">checkDifferences</A></B>(java.util.Vector&nbsp;oldData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method compares current table data with old data 
 and notifies registered listeners of changes</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#compareRow(int, java.util.Vector)">compareRow</A></B>(int&nbsp;row,
           java.util.Vector&nbsp;oldData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method compares current data with old data for a given row
 and notifies registered listeners of changes</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#deleteRow(java.lang.String)">deleteRow</A></B>(java.lang.String&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To delete a row of data from the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#deleteTableRow(java.lang.String)">deleteTableRow</A></B>(java.lang.String&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To delete a row of data from the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#finalize()">finalize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cleans up an object when there are no more references to the object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#genTableEvent(com.adventnet.snmp.beans.SnmpTableEvent)">genTableEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableEvent.html">SnmpTableEvent</A>&nbsp;evt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate the table events to the listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getCellValue(java.lang.String, int, int)">getCellValue</A></B>(java.lang.String&nbsp;tableOID,
             int&nbsp;rowIndex,
             int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumn(int)">getColumn</A></B>(int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string array of data for a column in the Table,represented by 
 the index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumn(java.lang.String)">getColumn</A></B>(java.lang.String&nbsp;columnName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string array of data for a column in the Table, represented 
 by the column name.Set the tableOID using setTableOID().</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnClass(int)">getColumnClass</A></B>(int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the class to be used as renderer and editor for the column.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnCount()">getColumnCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of columns in the table corresponding to the table OID already set.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnMibNode(int)">getColumnMibNode</A></B>(int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Get the MibNode corresponding to the table column specified by the column index</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getColumnName(int)">getColumnName</A></B>(int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the name of the column specified by the column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getDataType()">getDataType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the datatype in which the table data will be returned.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getHoles()">getHoles</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the index of the not-implemented columns.Holes are the columns that are not 
 defined in the agent.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getIndices()">getIndices</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the indices of the SnmpTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[][]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getNotAccessibleIndex()">getNotAccessibleIndex</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the values for the not-accessible indices in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getNotAccessibleIndexColumns()">getNotAccessibleIndexColumns</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the names of the not-accessible index columns in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPerformSets()">getPerformSets</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check if the values will get set if some change is made in any table
 field which has write access(any editable cell).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPerformSets(boolean)">getPerformSets</A></B>(boolean&nbsp;allowSets)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Activate/Deactivate an editable table field (cell).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getPollInterval()">getPollInterval</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the current polling interval in seconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRetrievalMode()">getRetrievalMode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the mode of retrieval of table data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(int)">getRow</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get data for a table row,specified by its position in the table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(java.lang.String, java.lang.String)">getRow</A></B>(java.lang.String&nbsp;tableOID,
       java.lang.String&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the data for a row of the Table specified by the index .</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRowCount()">getRowCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of rows of data available in the SnmpTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getTableOID()">getTableOID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get table oid used with this SnmpTable instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getValueAt(int, int)">getValueAt</A></B>(int&nbsp;rowIndex,
           int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#isCellEditable(int, int)">isCellEditable</A></B>(int&nbsp;rowIndex,
               int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check if the cell at the specified index is editable or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#refreshTable()">refreshTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Refreshes the table data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#removeSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)">removeSnmpTableListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html">SnmpTableListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove a listener from the list that's notified each time a change
 in the SNMP Table occurs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The run method does polling and updates of the table at specified polling itervals.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setCellValue(java.lang.String, java.lang.Object, int, int)">setCellValue</A></B>(java.lang.String&nbsp;tableOID,
             java.lang.Object&nbsp;aValue,
             int&nbsp;rowIndex,
             int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setColumnsPolled(java.util.Vector)">setColumnsPolled</A></B>(java.util.Vector&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the columns that needs to be polled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setDataType(int)">setDataType</A></B>(int&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the type in which the data has to be returned when the table data is got 
 using the getValueAt or getCellValue methods.By default these methods will return 
 table data as String objects.To get the table data as SnmpVar or SnmpVarBind object,
 the respective constant can be set using setDataType() method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></B>(java.lang.String[]&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the column names of the table that needs to be polled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setParams(java.lang.String, java.lang.String, java.lang.String)">setParams</A></B>(java.lang.String&nbsp;host,
          java.lang.String&nbsp;mib,
          java.lang.String&nbsp;tableOID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set multiple parameters like TargetHost,MibModule and TableOID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setPollInterval(int)">setPollInterval</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the polling interval in seconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setRetrievalMode(boolean)">setRetrievalMode</A></B>(boolean&nbsp;mode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the mode of retrieval.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setTableOID(java.lang.String)">setTableOID</A></B>(java.lang.String&nbsp;tableOID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the table OID to be used with this SnmpTable instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setTableOIDWoStart(java.lang.String)">setTableOIDWoStart</A></B>(java.lang.String&nbsp;tableOID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the table OID without starting polling.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setValueAt(java.lang.Object, int, int)">setValueAt</A></B>(java.lang.Object&nbsp;aValue,
           int&nbsp;rowIndex,
           int&nbsp;columnIndex)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the value for the cell specified by the row and column index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#showErrorMessage(java.lang.String)">showErrorMessage</A></B>(java.lang.String&nbsp;str)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#startPollingTable()">startPollingTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to start the polling of Table.This can be used after setting the
 table column oids using setObjectIDList.If the method setTableOID is used
 to set the oid of the table,this method need not be called explicitly as  
 the setTableOID() method calls this method internally.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#stopPollingTable()">stopPollingTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to stop the polling of Table.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpTarget"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.afp.log.LoggerProperties)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addObjectID(java.lang.String)">addObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addResultListener(com.adventnet.snmp.beans.ResultListener)">addResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">addSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">addSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addUserError(int, java.lang.String)">addUserError</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#addV3HandShakeResultListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">addV3HandShakeResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#enableDebugForPDU(boolean)">enableDebugForPDU</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptComplete()">getAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAttemptPartial()">getAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthPassword()">getAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getAuthProtocol()">getAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCommunity()">getCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getCompleteResponse()">getCompleteResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextID()">getContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getContextName()">getContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getDebug()">getDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getEngineID()">getEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()">getErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCodes()">getErrorCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorIndex()">getErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()">getErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCode()">getExceptionCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getExceptionCodes()">getExceptionCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxNumRows()">getMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMaxRepetitions()">getMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibModules()">getMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getMibOperations()">getMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getNonRepeaters()">getNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID()">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectID(int)">getObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getObjectIDList()">getObjectIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPduErrorIndex()">getPduErrorIndex</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrincipal()">getPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivPassword()">getPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getPrivProtocol()">getPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getRetries()">getRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityLevel()">getSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSecurityModel()">getSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSendTimeoutEvents()">getSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOID()">getSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpOIDList()">getSnmpOIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getSnmpVersion()">getSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetHost()">getTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTargetPort()">getTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getTimeout()">getTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorCode()">getUserErrorCode</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getUserErrorString()">getUserErrorString</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getVarBindCount()">getVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getWriteCommunity()">getWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isInSubTree(com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpOID)">isInSubTree</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#isSerialize()">isSerialize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#loadMibs(java.lang.String)">loadMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#releaseResources()">releaseResources</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeLogClient()">removeLogClient</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeResultListener(com.adventnet.snmp.beans.ResultListener)">removeResultListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeSnmpPropertyListener(com.adventnet.snmp.beans.SnmpPropertyListener)">removeSnmpPropertyListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#removeV3HandShakeListener(com.adventnet.snmp.beans.V3HandShakeResultListener)">removeV3HandShakeListener</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptComplete(boolean)">setAttemptComplete</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAttemptPartial(boolean)">setAttemptPartial</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthPassword(java.lang.String)">setAuthPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setAuthProtocol(int)">setAuthProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setClientID(int)">setClientID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setCommunity(java.lang.String)">setCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextID(java.lang.String)">setContextID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setContextName(java.lang.String)">setContextName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setDebug(boolean)">setDebug</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setEngineID(byte[])">setEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxNumRows(int)">setMaxNumRows</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMaxRepetitions(int)">setMaxRepetitions</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setMibModules(java.lang.String)">setMibModules</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setNonRepeaters(int)">setNonRepeaters</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(int, java.lang.String)">setObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectID(java.lang.String)">setObjectID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">setParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrincipal(java.lang.String)">setPrincipal</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivPassword(java.lang.String)">setPrivPassword</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setPrivProtocol(int)">setPrivProtocol</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setRetries(int)">setRetries</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityLevel(byte)">setSecurityLevel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSecurityModel(int)">setSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSendTimeoutEvents(boolean)">setSendTimeoutEvents</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOID(com.adventnet.snmp.snmp2.SnmpOID)">setSnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpOIDList(com.adventnet.snmp.snmp2.SnmpOID[])">setSnmpOIDList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setSnmpVersion(int)">setSnmpVersion</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetHost(java.lang.String)">setTargetHost</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTargetPort(int)">setTargetPort</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setTimeout(int)">setTimeout</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setVarBindCount(int)">setVarBindCount</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setWriteCommunity(java.lang.String)">setWriteCommunity</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet()">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGet(com.adventnet.snmp.snmp2.SnmpOID)">snmpGet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllList()">snmpGetAllList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariableBindings()">snmpGetAllVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetAllVariables()">snmpGetAllVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkList()">snmpGetBulkList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariableBindings()">snmpGetBulkVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetBulkVariables()">snmpGetBulkVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList()">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext()">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNext(com.adventnet.snmp.snmp2.SnmpOID)">snmpGetNext</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList()">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextList(com.adventnet.snmp.snmp2.SnmpOID[])">snmpGetNextList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariable()">snmpGetNextVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBinding()">snmpGetNextVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariableBindings()">snmpGetNextVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetNextVariables()">snmpGetNextVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariable()">snmpGetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBinding()">snmpGetVariableBinding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariableBindings()">snmpGetVariableBindings</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpGetVariables()">snmpGetVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformAcknowledgement(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[], int)">snmpSendInformAcknowledgement</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendInformRequest(long, java.lang.String, java.lang.String[])">snmpSendInformRequest</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, com.adventnet.snmp.snmp2.SnmpOID, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendNotification(long, java.lang.String, java.lang.String[])">snmpSendNotification</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(com.adventnet.snmp.snmp2.SnmpOID, java.lang.String, int, int, long, com.adventnet.snmp.snmp2.SnmpVar[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSendTrap(java.lang.String, java.lang.String, int, int, long, java.lang.String[])">snmpSendTrap</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSet(java.lang.String, byte)">snmpSet</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetList(java.lang.String[])">snmpSetList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariable(com.adventnet.snmp.snmp2.SnmpVar)">snmpSetVariable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariableList(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariableList</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#snmpSetVariables(com.adventnet.snmp.snmp2.SnmpVar[])">snmpSetVariables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#vetoableChange(java.beans.PropertyChangeEvent)">vetoableChange</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.SnmpServer"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.snmp.beans.CustomizerTemplate"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from interface com.adventnet.snmp.beans.<A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html">CustomizerTemplate</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#create_v3_tables()">create_v3_tables</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getSnmpEngineTable()">getSnmpEngineTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#getUSMTable()">getUSMTable</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#initSecurityProvider()">initSecurityProvider</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A>, <A HREF="../../../../com/adventnet/snmp/beans/CustomizerTemplate.html#manage_v3_tables()">manage_v3_tables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="STRING_DATA"><!-- --></A><H3>
STRING_DATA</H3>
<PRE>
public static final int <B>STRING_DATA</B></PRE>
<DL>
<DD>Constant to specify the format in which the data has to be returned.String is the default.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTable.STRING_DATA">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_VARIABLE_DATA"><!-- --></A><H3>
SNMP_VARIABLE_DATA</H3>
<PRE>
public static final int <B>SNMP_VARIABLE_DATA</B></PRE>
<DL>
<DD>Constant to specify the format in which the data has to be returned.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTable.SNMP_VARIABLE_DATA">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMP_VARIABLE_BINDING_DATA"><!-- --></A><H3>
SNMP_VARIABLE_BINDING_DATA</H3>
<PRE>
public static final int <B>SNMP_VARIABLE_BINDING_DATA</B></PRE>
<DL>
<DD>Constant to specify the format in which the data has to be returned.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpTable.SNMP_VARIABLE_BINDING_DATA">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpTable(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.mibs.MibOperations)"><!-- --></A><H3>
SnmpTable</H3>
<PRE>
public <B>SnmpTable</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;ses,
                 <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mib)</PRE>
<DL>
<DD>This constructor is used to create an SnmpTable instance with a specified 
  SnmpSession and MibOperations. Using this constructor the user can 
  decide which SnmpSession and MibOperations instance should be used by SnmpTable.
<P>
<DT><B>Parameters:</B><DD><CODE>ses</CODE> - Instance of <code>SnmpSession</code> but not null and also the created
 SnmpSession should be opened before using in this constructor.<DD><CODE>mib</CODE> - Instance of <code>MibOperations</code></DL>
<HR>

<A NAME="SnmpTable()"><!-- --></A><H3>
SnmpTable</H3>
<PRE>
public <B>SnmpTable</B>()</PRE>
<DL>
<DD>Use this constructor for applications.
<P>
</DL>
<HR>

<A NAME="SnmpTable(int, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
SnmpTable</H3>
<PRE>
public <B>SnmpTable</B>(int&nbsp;protocol,
                 <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</PRE>
<DL>
<DD>Use this constructor for applications which uses protocols
 other than UDP/IP.
<P>
</DL>
<HR>

<A NAME="SnmpTable(int, java.lang.String)"><!-- --></A><H3>
SnmpTable</H3>
<PRE>
public <B>SnmpTable</B>(int&nbsp;port,
                 java.lang.String&nbsp;session)</PRE>
<DL>
<DD>Use this constructor for creating a new session for this application.
 If the session name is same the tables will share the same session.
 If the port is 0 it will use the available free port.
<P>
</DL>
<HR>

<A NAME="SnmpTable(java.applet.Applet)"><!-- --></A><H3>
SnmpTable</H3>
<PRE>
public <B>SnmpTable</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Use this constructor for applets.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="setParams(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
setParams</H3>
<PRE>
public void <B>setParams</B>(java.lang.String&nbsp;host,
                      java.lang.String&nbsp;mib,
                      java.lang.String&nbsp;tableOID)</PRE>
<DL>
<DD>To set multiple parameters like TargetHost,MibModule and TableOID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - target host<DD><CODE>mib</CODE> - mib file<DD><CODE>tableOID</CODE> - OID of the table</DL>
</DD>
</DL>
<HR>

<A NAME="getRowCount()"><!-- --></A><H3>
getRowCount</H3>
<PRE>
public int <B>getRowCount</B>()</PRE>
<DL>
<DD>Returns the number of rows of data available in the SnmpTable.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>number of rows in the Table.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumnCount()"><!-- --></A><H3>
getColumnCount</H3>
<PRE>
public int <B>getColumnCount</B>()</PRE>
<DL>
<DD>Returns the number of columns in the table corresponding to the table OID already set.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the number of columns available in the SnmpTable.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumnName(int)"><!-- --></A><H3>
getColumnName</H3>
<PRE>
public java.lang.String <B>getColumnName</B>(int&nbsp;columnIndex)</PRE>
<DL>
<DD>Returns the name of the column specified by the column index.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>columnIndex</CODE> - index of the column in the table.
<DT><B>Returns:</B><DD>the name of the column.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumnClass(int)"><!-- --></A><H3>
getColumnClass</H3>
<PRE>
public java.lang.Class <B>getColumnClass</B>(int&nbsp;columnIndex)</PRE>
<DL>
<DD>Returns the class to be used as renderer and editor for the column.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>columnIndex</CODE> - index of the column in the table
<DT><B>Returns:</B><DD>the Class to be used as renderer and editor for the column
 and null if the columnIndex is invalid.</DL>
</DD>
</DL>
<HR>

<A NAME="isCellEditable(int, int)"><!-- --></A><H3>
isCellEditable</H3>
<PRE>
public boolean <B>isCellEditable</B>(int&nbsp;rowIndex,
                              int&nbsp;columnIndex)</PRE>
<DL>
<DD>To check if the cell at the specified index is editable or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rowIndex</CODE> - index of the row to which the cell belongs<DD><CODE>columnIndex</CODE> - index of the column to which the cell belongs
<DT><B>Returns:</B><DD>true if the cell is editable and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getCellValue(java.lang.String, int, int)"><!-- --></A><H3>
getCellValue</H3>
<PRE>
public java.lang.Object <B>getCellValue</B>(java.lang.String&nbsp;tableOID,
                                     int&nbsp;rowIndex,
                                     int&nbsp;columnIndex)</PRE>
<DL>
<DD>To get the value for the cell specified by the row and column index.     
 The row and column index represent the position of the row and 
 column in the table,both starting with zero.
 TableOID need not be set separately.If the object to be returned is required as a
 SnmpVar or SnmpVarBind object,then it can be set using setDataType() method.
 By default a String object will be returned.
 The following errorcodes can be set  MIB_NODE_UNAVAIL,INVALID_TABLE_OID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - OID of the table to which the cell belongs.<DD><CODE>rowIndex</CODE> - position of the row whose value is to be looked up.<DD><CODE>columnIndex</CODE> - position of the column whose value is to be looked up.
<DT><B>Returns:</B><DD>the value for the cell as a String data.Null if tableOID is invalid.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setDataType(int)"><CODE>setDataType(int type)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setCellValue(java.lang.String, java.lang.Object, int, int)"><CODE>setCellValue(String tableOID,Object aValue, int rowIndex,int columnIndex)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getValueAt(int, int)"><!-- --></A><H3>
getValueAt</H3>
<PRE>
public java.lang.Object <B>getValueAt</B>(int&nbsp;rowIndex,
                                   int&nbsp;columnIndex)</PRE>
<DL>
<DD>To get the value for the cell specified by the row and column index.
 The row and column index represent the position of the row and 
 column in the table,both starting with zero.
 TableOID should be set seperately using setTableOID().
 If the object to be returned is required as an object of SnmpVar or SnmpVarBind,
 then it can be set using setDataType() method.By Default String data will be returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rowIndex</CODE> - position of the row whose value is to be looked up.<DD><CODE>columnIndex</CODE> - position of the column whose value is to be looked up.
<DT><B>Returns:</B><DD>the value for the cell as a String data.Null if TableOID is invalid.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setDataType(int)"><CODE>setDataType(int type)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setValueAt(java.lang.Object, int, int)"><CODE>setValueAt(Object aValue, int rowIndex,int columnIndex)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setValueAt(java.lang.Object, int, int)"><!-- --></A><H3>
setValueAt</H3>
<PRE>
public void <B>setValueAt</B>(java.lang.Object&nbsp;aValue,
                       int&nbsp;rowIndex,
                       int&nbsp;columnIndex)</PRE>
<DL>
<DD>Sets the value for the cell specified by the row and column index.
  The row and column index represent the position of the row and 
  column in the table,both starting with zero.     
  TableOID should be set using setTableOID().
  The new value can be a String or SnmpVar or SnmpVarBind object.     
  <p>
  The following errorCodes can be set SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
	REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR,  SNMP errors defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>aValue</CODE> - the new value that needs to be set.<DD><CODE>rowIndex</CODE> - position of the row whose value is to be changed.<DD><CODE>columnIndex</CODE> - position of the column whose value is to be changed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getValueAt(int, int)"><CODE>getValueAt(int rowIndex, int columnIndex)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="showErrorMessage(java.lang.String)"><!-- --></A><H3>
showErrorMessage</H3>
<PRE>
protected void <B>showErrorMessage</B>(java.lang.String&nbsp;str)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCellValue(java.lang.String, java.lang.Object, int, int)"><!-- --></A><H3>
setCellValue</H3>
<PRE>
public void <B>setCellValue</B>(java.lang.String&nbsp;tableOID,
                         java.lang.Object&nbsp;aValue,
                         int&nbsp;rowIndex,
                         int&nbsp;columnIndex)</PRE>
<DL>
<DD>Sets the value for the cell specified by the row and column index.
  The row and column index represent the position of the row and 
  column in the table,both starting with zero.     
  If this method is used to set the value,then the Table OID need not be set seperately
  using setTableOID() method.
  The new value can be a String or SnmpVar or SnmpVarBind object. 
  <p>
  The following errorCodes can be set SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
	REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
	SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR,  SNMP errors defined in ErrorMessages.
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - OID of the table to which the cell belongs.<DD><CODE>aValue</CODE> - the new value that needs to be set.<DD><CODE>rowIndex</CODE> - position of the row whose value is to be changed.<DD><CODE>columnIndex</CODE> - position of the column whose value is to be changed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getCellValue(java.lang.String, int, int)"><CODE>getCellValue(String tableOID, int rowIndex, int columnIndex)</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)"><!-- --></A><H3>
addSnmpTableListener</H3>
<PRE>
public void <B>addSnmpTableListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html">SnmpTableListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a SnmpTableListener instance to the listener's list.Whenever a 
 change in SnmpTable occurs all the registered listeners will be notified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - an instance of SnmpTableListener to be added.A instance of a 
 class implementing SnmpTableListener interface.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html"><CODE>SnmpTableListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="removeSnmpTableListener(com.adventnet.snmp.beans.SnmpTableListener)"><!-- --></A><H3>
removeSnmpTableListener</H3>
<PRE>
public void <B>removeSnmpTableListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html">SnmpTableListener</A>&nbsp;l)</PRE>
<DL>
<DD>Remove a listener from the list that's notified each time a change
 in the SNMP Table occurs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>l</CODE> - an instance of SnmpTableListener which needs to be removed 
 from the list.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTableListener.html"><CODE>SnmpTableListener</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTableOID()"><!-- --></A><H3>
getTableOID</H3>
<PRE>
public java.lang.String <B>getTableOID</B>()</PRE>
<DL>
<DD>To get table oid used with this SnmpTable instance.
 MIB containing this table must be loaded in this VM.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the Table OID as a String value.</DL>
</DD>
</DL>
<HR>

<A NAME="setTableOIDWoStart(java.lang.String)"><!-- --></A><H3>
setTableOIDWoStart</H3>
<PRE>
public void <B>setTableOIDWoStart</B>(java.lang.String&nbsp;tableOID)
                        throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To set the table OID without starting polling.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - OID of the table as a String
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid
 The following errorcodes can be set  MIB_NODE_UNAVAIL,INVALID_TABLE_OID<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setObjectIDList(java.lang.String[])"><!-- --></A><H3>
setObjectIDList</H3>
<PRE>
public void <B>setObjectIDList</B>(java.lang.String[]&nbsp;s)</PRE>
<DL>
<DD>Sets the column names of the table that needs to be polled. The setTableOID will 
 poll all the columns of the table. Setting the column names using this method will 
 make the bean poll only the specified columns.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#setObjectIDList(java.lang.String[])">setObjectIDList</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - a one dimensional array of column names</DL>
</DD>
</DL>
<HR>

<A NAME="setTableOID(java.lang.String)"><!-- --></A><H3>
setTableOID</H3>
<PRE>
public void <B>setTableOID</B>(java.lang.String&nbsp;tableOID)
                 throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>Sets the table OID to be used with this SnmpTable instance. MIB containing this
 table must be loaded in this VM. This method starts polling of table data and 
 updates the table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - the Object ID of the table, e.g. ifTable
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown if data is invalid
 The following errorcodes can be set  MIB_NODE_UNAVAIL,INVALID_TABLE_OID<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getNotAccessibleIndex()"><!-- --></A><H3>
getNotAccessibleIndex</H3>
<PRE>
public java.lang.String[][] <B>getNotAccessibleIndex</B>()</PRE>
<DL>
<DD>Returns the values for the not-accessible indices in the table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>two dimensional array of Not Accessible Indices in the table.
 Null if the table do not have not-accessible index columns.</DL>
</DD>
</DL>
<HR>

<A NAME="getNotAccessibleIndexColumns()"><!-- --></A><H3>
getNotAccessibleIndexColumns</H3>
<PRE>
public java.lang.String[] <B>getNotAccessibleIndexColumns</B>()</PRE>
<DL>
<DD>Returns the names of the not-accessible index columns in the table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the names of the not-accessible columns as a one dimensional String array
 and null if the table do not have not-accessible columns.</DL>
</DD>
</DL>
<HR>

<A NAME="addRow(boolean, java.lang.String[], java.lang.String[])"><!-- --></A><H3>
addRow</H3>
<PRE>
public void <B>addRow</B>(boolean&nbsp;Status,
                   java.lang.String[]&nbsp;oidlist,
                   java.lang.String[]&nbsp;s)
            throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To add a new row of data into the table.
 Rows can be added to a table only if, the table is
 a SMIv1 table with EntryStatus defined or SMIv2 table with RowStatus defined.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>Status</CODE> - true if the table has EntryStatus column and false if it has RowStatus column.<DD><CODE>oidlist</CODE> - string array of Object ids of the table columns for which the data has to be set.<DD><CODE>s</CODE> - string array of values to be set in the row.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown on errors.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteRow(java.lang.String)"><!-- --></A><H3>
deleteRow</H3>
<PRE>
public void <B>deleteRow</B>(java.lang.String&nbsp;oid)</PRE>
<DL>
<DD>To delete a row of data from the table.
 Rows can be deleted from a table only if,
 the table is a SMIv1 table with EntryStatus column defined or a SMIv2 table with
 RowStatus column defined.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - rowStatus.index .Index represent the instance value of the row which 
 needs to be deleted from the table.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteTableRow(java.lang.String)"><!-- --></A><H3>
deleteTableRow</H3>
<PRE>
public void <B>deleteTableRow</B>(java.lang.String&nbsp;oid)
                    throws <A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></PRE>
<DL>
<DD>To delete a row of data from the table.
 Rows can be deleted from a table only if,
 the table is a SMIv1 table with EntryStatus column defined or a SMIv2 table with
 RowStatus column defined. Throws DataException in case of any errors, which will
 allow the API users to catch the exception and display a suitable message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - rowStatus.index .Index represent the instance value of the row which
 needs to be deleted from the table.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/DataException.html">DataException</A></CODE> - is thrown on errors.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getIndices()"><!-- --></A><H3>
getIndices</H3>
<PRE>
public java.lang.String[][] <B>getIndices</B>()</PRE>
<DL>
<DD>Returns the indices of the SnmpTable. Before calling this method,call the 
 method setTableOIDWoStart(tableOID).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the indices of the Table as a two dimensional String array.</DL>
</DD>
</DL>
<HR>

<A NAME="startPollingTable()"><!-- --></A><H3>
startPollingTable</H3>
<PRE>
public void <B>startPollingTable</B>()</PRE>
<DL>
<DD>Method to start the polling of Table.This can be used after setting the
 table column oids using setObjectIDList.If the method setTableOID is used
 to set the oid of the table,this method need not be called explicitly as  
 the setTableOID() method calls this method internally.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stopPollingTable()"><!-- --></A><H3>
stopPollingTable</H3>
<PRE>
public void <B>stopPollingTable</B>()</PRE>
<DL>
<DD>Method to stop the polling of Table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="refreshTable()"><!-- --></A><H3>
refreshTable</H3>
<PRE>
public void <B>refreshTable</B>()</PRE>
<DL>
<DD>Refreshes the table data.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getDataType()"><!-- --></A><H3>
getDataType</H3>
<PRE>
public int <B>getDataType</B>()</PRE>
<DL>
<DD>Returns the datatype in which the table data will be returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an int value corresponding to the datatype which can be any
 one of STRING_DATA, SNMP_VARIABLE_DATA or SNMP_VARIABLE_BINDING_DATA<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#setDataType(int)"><CODE>setDataType(int type)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDataType(int)"><!-- --></A><H3>
setDataType</H3>
<PRE>
public void <B>setDataType</B>(int&nbsp;type)</PRE>
<DL>
<DD>Set the type in which the data has to be returned when the table data is got 
 using the getValueAt or getCellValue methods.By default these methods will return 
 table data as String objects.To get the table data as SnmpVar or SnmpVarBind object,
 the respective constant can be set using setDataType() method.
 The constants are STRING_DATA, SNMP_VARIABLE_DATA or SNMP_VARIABLE_BINDING_DATA.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - STRING_DATA to get String values,
 SNMP_VARIABLE_DATA to get SnmpVar values,SNMP_VARIABLE_BINDING_DATA to get 
 data as SnmpVarBinds.</DL>
</DD>
</DL>
<HR>

<A NAME="setColumnsPolled(java.util.Vector)"><!-- --></A><H3>
setColumnsPolled</H3>
<PRE>
public void <B>setColumnsPolled</B>(java.util.Vector&nbsp;index)</PRE>
<DL>
<DD>Sets the columns that needs to be polled. The index vector elements can be 
 Integer objects of the indices of the columns that needs to be polled. The 
 indices should represent the position of the columns in the table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - vector of column indices that needs to be polled.</DL>
</DD>
</DL>
<HR>

<A NAME="getRetrievalMode()"><!-- --></A><H3>
getRetrievalMode</H3>
<PRE>
public boolean <B>getRetrievalMode</B>()</PRE>
<DL>
<DD>Returns the mode of retrieval of table data.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if GetNext is used for retrieving the table data and
 false if the mode of retrieval of table data.</DL>
</DD>
</DL>
<HR>

<A NAME="setRetrievalMode(boolean)"><!-- --></A><H3>
setRetrievalMode</H3>
<PRE>
public void <B>setRetrievalMode</B>(boolean&nbsp;mode)</PRE>
<DL>
<DD>To set the mode of retrieval. This should be set to true to retrieve
 the table data using successive getnext. By default this is set to true.
 To retrieve using getbulk this should be set to false.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mode</CODE> - either true or false.</DL>
</DD>
</DL>
<HR>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <B>run</B>()</PRE>
<DL>
<DD>The run method does polling and updates of the table at specified polling itervals.      
 The following errorCodes can be set SNMP_NOT_INIT, INVALID_VERSION, OID_NOT_SPECIFIED,
 REQ_TIMEDOUT, EMPTY_VAR_BIND, IP_ADDR_NOT_SPECIFIED, SESSION_REMOTE_HOST_UNKNOWN, 
 SECURITYEXP_CONNECTING_REMOTE_HOST, UNKNOWN_ERR,  SNMP errors defined in ErrorMessages
 INVALID_CONTEXT_NAME ,INVALID_CONTEXT_ID.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorCode()"><CODE>SnmpTarget.getErrorCode()</CODE></A>, 
<A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html#getErrorString()"><CODE>SnmpTarget.getErrorString()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="checkDifferences(java.util.Vector)"><!-- --></A><H3>
checkDifferences</H3>
<PRE>
protected void <B>checkDifferences</B>(java.util.Vector&nbsp;oldData)</PRE>
<DL>
<DD>This method compares current table data with old data 
 and notifies registered listeners of changes
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oldData</CODE> - is the data in the table before current poll</DL>
</DD>
</DL>
<HR>

<A NAME="compareRow(int, java.util.Vector)"><!-- --></A><H3>
compareRow</H3>
<PRE>
protected void <B>compareRow</B>(int&nbsp;row,
                          java.util.Vector&nbsp;oldData)</PRE>
<DL>
<DD>This method compares current data with old data for a given row
 and notifies registered listeners of changes
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>row</CODE> - the row which has to be compared<DD><CODE>oldData</CODE> - is the data in the table before current poll</DL>
</DD>
</DL>
<HR>

<A NAME="genTableEvent(com.adventnet.snmp.beans.SnmpTableEvent)"><!-- --></A><H3>
genTableEvent</H3>
<PRE>
protected void <B>genTableEvent</B>(<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableEvent.html">SnmpTableEvent</A>&nbsp;evt)</PRE>
<DL>
<DD>Generate the table events to the listeners.  Used in subclasses.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>evt</CODE> - an instance of SnmpTableEvent.</DL>
</DD>
</DL>
<HR>

<A NAME="finalize()"><!-- --></A><H3>
finalize</H3>
<PRE>
protected void <B>finalize</B>()
                 throws java.lang.Throwable</PRE>
<DL>
<DD>Cleans up an object when there are no more references to the object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#finalize()">finalize</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Throwable</CODE> - - in case of finalization errors.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumn(int)"><!-- --></A><H3>
getColumn</H3>
<PRE>
public java.lang.String[] <B>getColumn</B>(int&nbsp;columnIndex)</PRE>
<DL>
<DD>Returns a string array of data for a column in the Table,represented by 
 the index. Index represent the position of the column in the table. 
 Set the TableOID using setTableOID().
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>columnIndex</CODE> - position of the column whose value is required.
<DT><B>Returns:</B><DD>the data for all the rows in the column as an array of String and 
 null if the Table OID is not specified or if it is invalid.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumn(java.lang.String)"><!-- --></A><H3>
getColumn</H3>
<PRE>
public java.lang.String[] <B>getColumn</B>(java.lang.String&nbsp;columnName)</PRE>
<DL>
<DD>Returns a string array of data for a column in the Table, represented 
 by the column name.Set the tableOID using setTableOID().
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>columnName</CODE> - name of the column
<DT><B>Returns:</B><DD>the data for all the rows for the specified column as an array 
 of String and null if the tableOID is not specified or if it is invalid.</DL>
</DD>
</DL>
<HR>

<A NAME="getRow(int)"><!-- --></A><H3>
getRow</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html">SnmpVarBind</A>[] <B>getRow</B>(int&nbsp;index)</PRE>
<DL>
<DD>To get data for a table row,specified by its position in the table.
 Before calling this method,set tableOID using setTableOIDWoStart(tableOID).
 If the index(instance value) of the row is known,
 then getRow(String tableOID,String index) can be used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - position of the row in the table.
<DT><B>Returns:</B><DD>the row values as an array of SnmpVarBind.Null if a row does not exist at that position.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(java.lang.String, java.lang.String)"><CODE>getRow(String tableOID,String index)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getRow(java.lang.String, java.lang.String)"><!-- --></A><H3>
getRow</H3>
<PRE>
public java.lang.String[] <B>getRow</B>(java.lang.String&nbsp;tableOID,
                                 java.lang.String&nbsp;index)</PRE>
<DL>
<DD>Returns the data for a row of the Table specified by the index .
 Index represent the instance value of the column OIDs.
 TableOID need not be set seperately.
 If the instance value of the column OIDs is not known,then 
 getRow(int index) method can be used to get the row data.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableOID</CODE> - the OID of the table to which the row belongs.<DD><CODE>index</CODE> - instance value of the row in the table.
<DT><B>Returns:</B><DD>the row values as an array of String.
 Null if a row with that index does not exist.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html#getRow(int)"><CODE>getRow(int index)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getPollInterval()"><!-- --></A><H3>
getPollInterval</H3>
<PRE>
public int <B>getPollInterval</B>()</PRE>
<DL>
<DD>Returns the current polling interval in seconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>poll interval in seconds.</DL>
</DD>
</DL>
<HR>

<A NAME="setPollInterval(int)"><!-- --></A><H3>
setPollInterval</H3>
<PRE>
public void <B>setPollInterval</B>(int&nbsp;i)</PRE>
<DL>
<DD>To set the polling interval in seconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - poll interval in seconds.</DL>
</DD>
</DL>
<HR>

<A NAME="getColumnMibNode(int)"><!-- --></A><H3>
getColumnMibNode</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibNode.html">MibNode</A> <B>getColumnMibNode</B>(int&nbsp;columnIndex)</PRE>
<DL>
<DD>To Get the MibNode corresponding to the table column specified by the column index
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>columnIndex</CODE> - index of the column
<DT><B>Returns:</B><DD>column MibNode</DL>
</DD>
</DL>
<HR>

<A NAME="getPerformSets()"><!-- --></A><H3>
getPerformSets</H3>
<PRE>
public boolean <B>getPerformSets</B>()</PRE>
<DL>
<DD>To check if the values will get set if some change is made in any table
 field which has write access(any editable cell).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if values can be set for a field and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getPerformSets(boolean)"><!-- --></A><H3>
getPerformSets</H3>
<PRE>
public void <B>getPerformSets</B>(boolean&nbsp;allowSets)</PRE>
<DL>
<DD>To Activate/Deactivate an editable table field (cell).
 If this is set to true,then values can be set for the table fields that have write access.
 If this is set to false,then values cannot be set for those fields.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getHoles()"><!-- --></A><H3>
getHoles</H3>
<PRE>
public int[] <B>getHoles</B>()</PRE>
<DL>
<DD>Returns the index of the not-implemented columns.Holes are the columns that are not 
 defined in the agent.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>int[] int array of indices of columns that are not implemented 
 in agent</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTableBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTable.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
