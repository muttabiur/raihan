<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:54 IST 2009 -->
<TITLE>
LoggerImpl (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="LoggerImpl (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogFactory.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LoggerImpl.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.afp.log.AbstractLogger">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.afp.log</FONT>
<BR>
Class  LoggerImpl</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html">com.adventnet.afp.log.AbstractLogger</A>
        |
        +--<B>com.adventnet.afp.log.LoggerImpl</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/afp/log/Logger.html">Logger</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>LoggerImpl</B><DT>extends <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html">AbstractLogger</A></DL>

<P>
This class is the default implementation of the Logger interface. The display name 
 is given as custom property. The key name for the display name is DisplayName. The user 
 can give his own property as a custom property (similar to DisplayName)in the Logger properties.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/afp/log/Logger.html"><CODE>Logger</CODE></A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.adventnet.afp.log.AbstractLogger"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.adventnet.afp.log.<A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html">AbstractLogger</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#listeners">listeners</A>, <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#loggingLevel">loggingLevel</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#LoggerImpl()">LoggerImpl</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new <code>LoggerImpl</code> instance with the default Logger properties.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#err(java.lang.String, int)">err</A></B>(java.lang.String&nbsp;message,
    int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>err</code> method can be used for logging the error messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#err(java.lang.String, java.lang.Throwable, int)">err</A></B>(java.lang.String&nbsp;message,
    java.lang.Throwable&nbsp;exception,
    int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>err</code> method can be used for logging the error messages
 with the exception trace.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#formatMessage(java.lang.String, int)">formatMessage</A></B>(java.lang.String&nbsp;message,
              int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>formatMessage</code> method formats the message to a custom format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#getDisplayName()">getDisplayName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the display name of the Logger.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#getLogWriter()">getLogWriter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>getLogWriter</code> method is used to get the LogWriter of the Logger.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#init(com.adventnet.afp.log.LoggerProperties, com.adventnet.afp.log.LogWriter)">init</A></B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps,
     <A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A>&nbsp;logWriter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>init</code> method is used to intialize the logger.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#out(java.lang.String, int)">out</A></B>(java.lang.String&nbsp;message,
    int&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>out</code> method can be used for Logging general output
 messages and debugging messages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#setDisplayName(java.lang.String)">setDisplayName</A></B>(java.lang.String&nbsp;dispName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the display name of the Logger.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#setLogWriter(com.adventnet.afp.log.LogWriter)">setLogWriter</A></B>(<A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A>&nbsp;logWriter)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <code>setLogWriter</code> method is used to assign a LogWriter to the Logger.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.adventnet.afp.log.AbstractLogger"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.adventnet.afp.log.<A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html">AbstractLogger</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#addPropertyChangeListener(java.beans.PropertyChangeListener)">addPropertyChangeListener</A>, <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#getInstanceName()">getInstanceName</A>, <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#getLogLevel()">getLogLevel</A>, <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#removePropertyChangeListener(java.beans.PropertyChangeListener)">removePropertyChangeListener</A>, <A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#setLogLevel(int)">setLogLevel</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="LoggerImpl()"><!-- --></A><H3>
LoggerImpl</H3>
<PRE>
public <B>LoggerImpl</B>()</PRE>
<DL>
<DD>Creates a new <code>LoggerImpl</code> instance with the default Logger properties.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="init(com.adventnet.afp.log.LoggerProperties, com.adventnet.afp.log.LogWriter)"><!-- --></A><H3>
init</H3>
<PRE>
public void <B>init</B>(<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html">LoggerProperties</A>&nbsp;loggerProps,
                 <A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A>&nbsp;logWriter)
          throws <A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></PRE>
<DL>
<DD>The <code>init</code> method is used to intialize the logger. A logger is active 
 and can handle inputs only after it is initialized.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/afp/log/Logger.html#init(com.adventnet.afp.log.LoggerProperties, com.adventnet.afp.log.LogWriter)">init</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/afp/log/Logger.html">Logger</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html#init(com.adventnet.afp.log.LoggerProperties, com.adventnet.afp.log.LogWriter)">init</A></CODE> in class <CODE><A HREF="../../../../com/adventnet/afp/log/AbstractLogger.html">AbstractLogger</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>loggerProps</CODE> - specifies properties of the Logger<DD><CODE>logWriter</CODE> - a <code>LogWriter</code> instance to which the Logger has to be associated.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/afp/log/LogException.html">LogException</A></CODE> - if an error occurs during initialization</DL>
</DD>
</DL>
<HR>

<A NAME="setLogWriter(com.adventnet.afp.log.LogWriter)"><!-- --></A><H3>
setLogWriter</H3>
<PRE>
public void <B>setLogWriter</B>(<A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A>&nbsp;logWriter)</PRE>
<DL>
<DD>The <code>setLogWriter</code> method is used to assign a LogWriter to the Logger.
 By changing the LogWriter at runtime, the output from a Logger can be redirected to 
 some other file.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>logWriter</CODE> - a <code>LogWriter</code> instance to which the Logger has to be associated</DL>
</DD>
</DL>
<HR>

<A NAME="getLogWriter()"><!-- --></A><H3>
getLogWriter</H3>
<PRE>
public <A HREF="../../../../com/adventnet/afp/log/LogWriter.html">LogWriter</A> <B>getLogWriter</B>()</PRE>
<DL>
<DD>The <code>getLogWriter</code> method is used to get the LogWriter of the Logger.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a <code>LogWriter</code> value</DL>
</DD>
</DL>
<HR>

<A NAME="getDisplayName()"><!-- --></A><H3>
getDisplayName</H3>
<PRE>
public java.lang.String <B>getDisplayName</B>()</PRE>
<DL>
<DD>To get the display name of the Logger. The display name is the name with which the messages
 from that Logger will be logged.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a <code>String</code> value</DL>
</DD>
</DL>
<HR>

<A NAME="setDisplayName(java.lang.String)"><!-- --></A><H3>
setDisplayName</H3>
<PRE>
public void <B>setDisplayName</B>(java.lang.String&nbsp;dispName)</PRE>
<DL>
<DD>To set the display name of the Logger.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dispName</CODE> - a <code>String</code> value</DL>
</DD>
</DL>
<HR>

<A NAME="out(java.lang.String, int)"><!-- --></A><H3>
out</H3>
<PRE>
public void <B>out</B>(java.lang.String&nbsp;message,
                int&nbsp;level)</PRE>
<DL>
<DD>The <code>out</code> method can be used for Logging general output
 messages and debugging messages. The message will be formatted using
 the <A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#formatMessage(java.lang.String, int)"><CODE>formatMessage(java.lang.String, int)</CODE></A>. The defualt formatting
 has the time stamp in the format <i>"<b>hh:mm:ss:SSS DisplayName</b>"</i>
 The message will be logged only if  the 
 level of the message is less than or equal to that of the Logger's 
 logging level.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - <code>String</code> value<DD><CODE>level</CODE> - an <code>int</code> value</DL>
</DD>
</DL>
<HR>

<A NAME="err(java.lang.String, int)"><!-- --></A><H3>
err</H3>
<PRE>
public void <B>err</B>(java.lang.String&nbsp;message,
                int&nbsp;level)</PRE>
<DL>
<DD>The <code>err</code> method can be used for logging the error messages. The message will be formatted using
 the <A HREF="../../../../com/adventnet/afp/log/DefaultLogger.html#formatMessage(java.lang.String, int)"><CODE>DefaultLogger.formatMessage(java.lang.String, int)</CODE></A>. The defualt formatting  has the time stamp in the format 
<i>"<b>hh:mm:ss:SSS DisplayName</b>"</i>
 The message will be logged only if the 
 level of the message is less than or equal to that of the Logger's 
 logging level.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - <code>String</code> value describing the exception<DD><CODE>level</CODE> - an <code>int</code> logging value</DL>
</DD>
</DL>
<HR>

<A NAME="err(java.lang.String, java.lang.Throwable, int)"><!-- --></A><H3>
err</H3>
<PRE>
public void <B>err</B>(java.lang.String&nbsp;message,
                java.lang.Throwable&nbsp;exception,
                int&nbsp;level)</PRE>
<DL>
<DD>The <code>err</code> method can be used for logging the error messages
 with the exception trace. The message will be formatted using
 the <A HREF="../../../../com/adventnet/afp/log/LoggerImpl.html#formatMessage(java.lang.String, int)"><CODE>formatMessage(java.lang.String, int)</CODE></A>. The defualt formatting
 has the time stamp in the format <i>"<b>hh:mm:ss:SSS DisplayName</b>"</i>
 The message will be logged only if the  
 level of the message is less than or equal to that of the Logger's 
 logging level.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - <code>String</code> value describing the exception<DD><CODE>exception</CODE> - a <code>Throwable</code> exception<DD><CODE>level</CODE> - an <code>int</code> logging value</DL>
</DD>
</DL>
<HR>

<A NAME="formatMessage(java.lang.String, int)"><!-- --></A><H3>
formatMessage</H3>
<PRE>
public java.lang.String <B>formatMessage</B>(java.lang.String&nbsp;message,
                                      int&nbsp;level)</PRE>
<DL>
<DD><code>formatMessage</code> method formats the message to a custom format.
 In defualt formatting, the message is prepended with a time stamp in the
 format <i>"<b>hh:mm:ss:SSS DisplayName</b>"</i>. This method can be overridden 
 to get the message in the user-defined format.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - a <code>String</code> value<DD><CODE>level</CODE> - an <code>int</code> value
<DT><B>Returns:</B><DD>a <code>String</code> value</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LogFactory.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/afp/log/LoggerProperties.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LoggerImpl.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.adventnet.afp.log.AbstractLogger">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
