<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:05 IST 2006 -->
<TITLE>
SnmpTrapReceiver (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpTrapReceiver (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTargetBeanInfo.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiverBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTrapReceiver.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpTrapReceiver</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.beans.SnmpTrapReceiver</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpTrapReceiver</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A>, java.io.Serializable</DL>

<P>
Receives SNMP Traps from SNMP Agents. Generate a TrapEvent for each trap received. This class can be used with beans, applications and applets.  
 It supports event generation as per the JDK 1.1 event model.  
 <p>
 To use in an application, simply instantiate, 
 specify the port, and register to receive traps.  For example,
 <pre>
   SnmpTrapReceiver receiver = new SnmpTrapReceiver();
   
   TrapListener listener = new TrapListener() {
       public void receivedTrap(TrapEvent trap) {
           System.err.println("Got a trap from: "+trap.getRemoteHost());
       }
   };
 <br>
   receiver.addTrapListener(listener);
   
   try {
      receiver.setPortWithExceptionMsg(162);
   }
   catch(SnmpException e) {
       System.err.println(e.getMessage());
   }
   
 </pre>
 <p>
 The resources used by this class are automatically garbage collected after 
 removing all the registered listeners. No need to close sessions, or other 
 cleanup by the user.
 <p>
 Supply the applet in the constructor if using applets and may need
 to use SAS.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpTrapReceiver">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#SnmpTrapReceiver()">SnmpTrapReceiver</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#SnmpTrapReceiver(java.applet.Applet)">SnmpTrapReceiver</A></B>(java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#SnmpTrapReceiver(int, com.adventnet.snmp.snmp2.ProtocolOptions)">SnmpTrapReceiver</A></B>(int&nbsp;protocol,
                 <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this constructor for applications while using generic transportprovider.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#addLogClient(com.adventnet.utils.LogInterface)">addLogClient</A></B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add the Log client for which the trapreceiver has 
  to redirect the log messages</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#addTrapListener(com.adventnet.snmp.beans.TrapListener)">addTrapListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/TrapListener.html">TrapListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a listener for events from this target.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)">authenticate</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
             java.lang.String&nbsp;community)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Authenticates the received Trap PDU.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)">callback</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
         <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
         int&nbsp;requestID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this is the method that processes and forward the trap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#cleanup()">cleanup</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Replaced by stop() method.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#createUserEntry(byte[], byte)">createUserEntry</A></B>(byte[]&nbsp;engineID,
                byte&nbsp;secLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a usm user entry with the given EngineID and Security Level, in the USM Table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#debugPrint(java.lang.String)">debugPrint</A></B>(java.lang.String&nbsp;debugOutput)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the SnmpClient method implementation that redirects the
 log message to standard output or to client directly if it 
 implements LogInterface.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#finalize()">finalize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This cleans up the common connection if no one is using</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getAuthPassword()">getAuthPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets authentication password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getAuthProtocol()">getAuthProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Authentication Protocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getCharacterEncoding()">getCharacterEncoding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the Character Encoding being used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getCommunity()">getCommunity</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP Community.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getcontextID()">getcontextID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Replaced with getContextID()</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getContextID()">getContextID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 contextID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getContextName()">getContextName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getLocalAddresses()">getLocalAddresses</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the local addresses to listen on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getMibModules()">getMibModules</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the MIBs loaded in this applet/application  - 
 a white-space separated list of mib files.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getMibOperations()">getMibOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the MibOperations object reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getMibPath()">getMibPath</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the search Path in which the Mib Parser will search for the MIB
  modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getPort()">getPort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the local SNMP port number to listen on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getPortWithExceptionMsg()">getPortWithExceptionMsg</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the local SNMP port number to listen on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getPrincipal()">getPrincipal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets Principal ie userName</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getPrivPassword()">getPrivPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMPv3 privacy password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getPrivProtocol()">getPrivProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the privacy protocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getReceiveBufferSize()">getReceiveBufferSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the buffer size of this SnmpTrapReceiver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getSecurityModel()">getSecurityModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP V3 securityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getSecurityTable(int)">getSecurityTable</A></B>(int&nbsp;secModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SecurityModelTable as an object for a given security Model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.text.SimpleDateFormat</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getSimpleDateFormat()">getSimpleDateFormat</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SimpleDateFormat for this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getSnmpVersion()">getSnmpVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SNMP Version</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html">USMUserTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getUSMTable()">getUSMTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the USMUserTable reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A></B>(java.lang.String&nbsp;driverName,
               java.lang.String&nbsp;URL,
               java.lang.String&nbsp;userName,
               java.lang.String&nbsp;passWord)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If you need to use database support for mibs, this method should be
 invoked to initialize the Jdbc Parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#initSecurityProvider()">initSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes the SecurityProvider by reading from the file securityProvider.config.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isCommunityAuthEnabled()">isCommunityAuthEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the v1/v2 traps are authenticated with their community name
  and received
  If true, the received traps are authenticated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the loadFromDataBase boolean</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the overwrite mibs in DataBase boolean.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isSetAutoInformResponse()">isSetAutoInformResponse</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;High level API method to check if the automatic response flag for the 
 Inform Request is set.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A></B>(int&nbsp;secModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies if a particular security model is supported or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isTrapAuthEnable()">isTrapAuthEnable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To Check whether traps are authenticated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isV3AuthEnabled()">isV3AuthEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the v3 traps are authenticated and received
  If true, the received traps are authenticated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#loadMibs(java.lang.String)">loadMibs</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Load the mibs specified by white-space separated list
  of mibs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#releaseResources()">releaseResources</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTrapReceiver bean instances, this
 method can be used to immediately release the resources.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#removeTrapListener(com.adventnet.snmp.beans.TrapListener)">removeTrapListener</A></B>(<A HREF="../../../../com/adventnet/snmp/beans/TrapListener.html">TrapListener</A>&nbsp;l)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes a listener for events from this target.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setAuthPassword(java.lang.String)">setAuthPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets authentication password for SNMPv3 authentication.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setAuthProtocol(int)">setAuthProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Authentication Protocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setAutoInformResponse(boolean)">setAutoInformResponse</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;High-level API method to set the automatic response flag for the Inform 
 Request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setCallbackthread(boolean)">setCallbackthread</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable or disable if the user wants the callback to be called from
 a seperate thread.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A></B>(java.lang.String&nbsp;enc)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the Character Encoding to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setCommunity(java.lang.String)">setCommunity</A></B>(java.lang.String&nbsp;s)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP Community.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setCommunityAuthEnable(boolean)">setCommunityAuthEnable</A></B>(boolean&nbsp;commauth)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify whether the community name should be authenticated or not for v1/v2 traps
 By default the authentication is enabled</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setcontextID(byte[])">setcontextID</A></B>(byte[]&nbsp;ctxtID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Replaced with setContextID(byte[] ctxtID)</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setContextID(byte[])">setContextID</A></B>(byte[]&nbsp;ctxtID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 contextID</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setContextName(java.lang.String)">setContextName</A></B>(java.lang.String&nbsp;cName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 Context name</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setDebug(boolean)">setDebug</A></B>(boolean&nbsp;debug)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if debug output will be printed</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to load mib from DataBase.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setLocalAddresses(java.lang.String[])">setLocalAddresses</A></B>(java.lang.String[]&nbsp;addresses)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the local SNMP port number to listen on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setMibModules(java.lang.String)">setMibModules</A></B>(java.lang.String&nbsp;mibs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the MIB loaded in this applet/application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setMibPath(java.lang.String)">setMibPath</A></B>(java.lang.String&nbsp;searchPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the search path in which the Mib Parser will search for the MIB modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A></B>(boolean&nbsp;overWrite)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to overwrite the MIB in the DataBase.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setPort(int)">setPort</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the local SNMP port number to listen on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setPortWithExceptionMsg(int)">setPortWithExceptionMsg</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the local SNMP port number to listen on and throws SnmpException
 in case of BindException.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setPrincipal(java.lang.String)">setPrincipal</A></B>(java.lang.String&nbsp;userName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Principal or authentication user name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setPrivPassword(java.lang.String)">setPrivPassword</A></B>(java.lang.String&nbsp;password)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the privacy password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setPrivProtocol(int)">setPrivProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the privacy protocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setReceiveBufferSize(int)">setReceiveBufferSize</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the buffer size of this SnmpTrapReceiver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setSecurityModel(int)">setSecurityModel</A></B>(int&nbsp;securityModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP V3 SecurityModel</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A></B>(java.text.SimpleDateFormat&nbsp;sdf)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SimpleDateFormat for this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setSnmpVersion(int)">setSnmpVersion</A></B>(int&nbsp;version)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SNMP Version</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setTrapAuthEnable(boolean)">setTrapAuthEnable</A></B>(boolean&nbsp;isAuth)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify whether traps should be authenticated while receiving it.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setV3AuthEnable(boolean)">setV3AuthEnable</A></B>(boolean&nbsp;v3auth)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify whether the v3 trap should be authenticated or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#stop()">stop</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stops receiving traps.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpTrapReceiver()"><!-- --></A><H3>
SnmpTrapReceiver</H3>
<PRE>
public <B>SnmpTrapReceiver</B>()</PRE>
<DL>
<DD>Use this constructor for applications.  Use for applets only if you
 want to prevent the use of SAS.  MIB loading from applets may fail from 
 this SnmpTrapReceiver instance if you use this constructor.  This 
 matters only for the first SnmpTrapReceiver instance, and subsequent 
 instances will use the same SNMP mechanisms for the same port.  
 <p>
 Invoke setPortWithExpMesg(int) method to start receiving trap on the
 specified port.
 <p>
 stop() method can be used to stop receiving traps.
<P>
</DL>
<HR>

<A NAME="SnmpTrapReceiver(int, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
SnmpTrapReceiver</H3>
<PRE>
public <B>SnmpTrapReceiver</B>(int&nbsp;protocol,
                        <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;options)</PRE>
<DL>
<DD>Use this constructor for applications while using generic transportprovider.
<P>
</DL>
<HR>

<A NAME="SnmpTrapReceiver(java.applet.Applet)"><!-- --></A><H3>
SnmpTrapReceiver</H3>
<PRE>
public <B>SnmpTrapReceiver</B>(java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Use this constructor for applets.  Applets will try and use SAS, and
 if unsuccessful will use local sockets.  MIB loading from applets may
 fail from this SnmpTrapReceiver instance if you use this constructor.
 This matters only for the first SnmpTrapReceiver instance, and 
 subsequent instances will use the same SNMP mechanisms for the same port.
 <p>
 Invoke setPortWithExpMesg(int) method to start receiving trap on the
 specified port.
 <p>
 stop() method can be used to stop receiving traps.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="loadMibs(java.lang.String)"><!-- --></A><H3>
loadMibs</H3>
<PRE>
public void <B>loadMibs</B>(java.lang.String&nbsp;mibs)
              throws <A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A>,
                     java.io.IOException,
                     java.io.FileNotFoundException</PRE>
<DL>
<DD>Load the mibs specified by white-space separated list
  of mibs.  If first SnmpTrapReceiver has been opened with applet
  parameter, then URLs will be used.  MIB loading applies across
  all beans in this package, i.e. MIBs can be loaded in any
  of the bean instances, and will be available across all beans
  in this package, across the VM.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/mibs/MibException.html">MibException</A></CODE> - is thrown when parse error occurs.
<DD><CODE>java.io.IOException</CODE> - is thrown when IO error occurs.
<DD><CODE>java.io.FileNotFoundException</CODE> - is thrown if the file is not found.</DL>
</DD>
</DL>
<HR>

<A NAME="setMibPath(java.lang.String)"><!-- --></A><H3>
setMibPath</H3>
<PRE>
public void <B>setMibPath</B>(java.lang.String&nbsp;searchPath)</PRE>
<DL>
<DD>Sets the search path in which the Mib Parser will search for the MIB modules. Multiple paths can be specified using the pipe (|) as a seperator.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMibPath()"><!-- --></A><H3>
getMibPath</H3>
<PRE>
public java.lang.String <B>getMibPath</B>()</PRE>
<DL>
<DD>Gets the search Path in which the Mib Parser will search for the MIB
  modules.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String containing the path which will be searched for the MIBs. Null if the searchPath has not been set previously</DL>
</DD>
</DL>
<HR>

<A NAME="addTrapListener(com.adventnet.snmp.beans.TrapListener)"><!-- --></A><H3>
addTrapListener</H3>
<PRE>
public void <B>addTrapListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/TrapListener.html">TrapListener</A>&nbsp;l)</PRE>
<DL>
<DD>Adds a listener for events from this target.  The listener listens
 for events from any or all SNMP requests.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeTrapListener(com.adventnet.snmp.beans.TrapListener)"><!-- --></A><H3>
removeTrapListener</H3>
<PRE>
public void <B>removeTrapListener</B>(<A HREF="../../../../com/adventnet/snmp/beans/TrapListener.html">TrapListener</A>&nbsp;l)</PRE>
<DL>
<DD>Removes a listener for events from this target.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMibOperations()"><!-- --></A><H3>
getMibOperations</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A> <B>getMibOperations</B>()</PRE>
<DL>
<DD>Gets the MibOperations object reference.  This allows using
 additonal MibOperations functions if needed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setDebug(boolean)"><!-- --></A><H3>
setDebug</H3>
<PRE>
public void <B>setDebug</B>(boolean&nbsp;debug)</PRE>
<DL>
<DD>Determines if debug output will be printed
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMibModules()"><!-- --></A><H3>
getMibModules</H3>
<PRE>
public java.lang.String <B>getMibModules</B>()</PRE>
<DL>
<DD>Gets the MIBs loaded in this applet/application  - 
 a white-space separated list of mib files.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setMibModules(java.lang.String)"><!-- --></A><H3>
setMibModules</H3>
<PRE>
public void <B>setMibModules</B>(java.lang.String&nbsp;mibs)</PRE>
<DL>
<DD>Sets the MIB loaded in this applet/application.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)"><!-- --></A><H3>
authenticate</H3>
<PRE>
public boolean <B>authenticate</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
                            java.lang.String&nbsp;community)</PRE>
<DL>
<DD>Authenticates the received Trap PDU.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#authenticate(com.adventnet.snmp.snmp2.SnmpPDU, java.lang.String)">authenticate</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if SnmpPDU is null or the community (incase of
 v1 and v2c) matches . The PDU will be null if an
 ASN.1 or BER error occurs while decoding. 
 Therefore, in case of SNMPV3 a Trap received with bad privacy password 
 will result in a null PDU. 
 So in this case an event is generated with TrapPDU as null.
 If the community doesn't match this method returns false and
 the PDU is dropped.
 In case of SNMPV3 if the authentication module fails and
 the value returned by isTrapAuthEnable() is true, then
 the TrapPDU is dropped.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#isTrapAuthEnable()"><CODE>isTrapAuthEnable()</CODE></A>, 
<CODE>setTrapAuthEnable()</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)"><!-- --></A><H3>
callback</H3>
<PRE>
public boolean <B>callback</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                        <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
                        int&nbsp;requestID)</PRE>
<DL>
<DD>this is the method that processes and forward the trap.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#callback(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.SnmpPDU, int)">callback</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSimpleDateFormat(java.text.SimpleDateFormat)"><!-- --></A><H3>
setSimpleDateFormat</H3>
<PRE>
public void <B>setSimpleDateFormat</B>(java.text.SimpleDateFormat&nbsp;sdf)</PRE>
<DL>
<DD>Sets the SimpleDateFormat for this class. When the
 debug is on, the time stamp will be printed along with
 the packet dumps. The format of this timestamp can be
 changed using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#getSimpleDateFormat()"><CODE>getSimpleDateFormat()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSimpleDateFormat()"><!-- --></A><H3>
getSimpleDateFormat</H3>
<PRE>
public java.text.SimpleDateFormat <B>getSimpleDateFormat</B>()</PRE>
<DL>
<DD>Gets the SimpleDateFormat for this class.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SimpleDateFormat used by this class. This method will
 return a non-null value, only when
 <br>
 1. The SimpleDateFormat is previously set using setSimpleDateFormat(SimpleDateFormat)OR
 <br>
 2. When the debug mode is on and atleast one packet has been printed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#setSimpleDateFormat(java.text.SimpleDateFormat)"><CODE>setSimpleDateFormat(SimpleDateFormat)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="debugPrint(java.lang.String)"><!-- --></A><H3>
debugPrint</H3>
<PRE>
public void <B>debugPrint</B>(java.lang.String&nbsp;debugOutput)</PRE>
<DL>
<DD>This is the SnmpClient method implementation that redirects the
 log message to standard output or to client directly if it 
 implements LogInterface.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html#debugPrint(java.lang.String)">debugPrint</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpClient.html">SnmpClient</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addLogClient(com.adventnet.utils.LogInterface)"><!-- --></A><H3>
addLogClient</H3>
<PRE>
public void <B>addLogClient</B>(<A HREF="../../../../com/adventnet/utils/LogInterface.html">LogInterface</A>&nbsp;client)</PRE>
<DL>
<DD>add the Log client for which the trapreceiver has 
  to redirect the log messages
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
initJdbcParams</H3>
<PRE>
public void <B>initJdbcParams</B>(java.lang.String&nbsp;driverName,
                           java.lang.String&nbsp;URL,
                           java.lang.String&nbsp;userName,
                           java.lang.String&nbsp;passWord)</PRE>
<DL>
<DD>If you need to use database support for mibs, this method should be
 invoked to initialize the Jdbc Parameters.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>URL</CODE> - URL pointing to the DataBase file name<DD><CODE>userName</CODE> - userName<DD><CODE>passWord</CODE> - password</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadMibsFromDatabase(boolean)"><!-- --></A><H3>
setLoadMibsFromDatabase</H3>
<PRE>
public void <B>setLoadMibsFromDatabase</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to load mib from DataBase.
 The Jdbc Parameters should be set, using the initJdbcParams(), before calling this method.
 This flag should be set before loading the MIBs (By default it is set to false).
 If this flag is set to true, it will parse the mibs,and store it in the database.
 For ex: RMON2-MIB is loaded, it will parse the mib and store it in the database.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - boolean<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiver.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><CODE>initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setOverwriteMibsInDatabase(boolean)"><!-- --></A><H3>
setOverwriteMibsInDatabase</H3>
<PRE>
public void <B>setOverwriteMibsInDatabase</B>(boolean&nbsp;overWrite)</PRE>
<DL>
<DD>Defines whether to overwrite the MIB in the DataBase.
  NOTE: This applies only when the setLoadFromDataBase is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isOverwriteMibsInDatabase()"><!-- --></A><H3>
isOverwriteMibsInDatabase</H3>
<PRE>
public boolean <B>isOverwriteMibsInDatabase</B>()</PRE>
<DL>
<DD>Gets the overwrite mibs in DataBase boolean.
  NOTE: This applies only when the setLoadFromDataBase is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadMibsFromDatabase()"><!-- --></A><H3>
isLoadMibsFromDatabase</H3>
<PRE>
public boolean <B>isLoadMibsFromDatabase</B>()</PRE>
<DL>
<DD>Gets the loadFromDataBase boolean
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="finalize()"><!-- --></A><H3>
finalize</H3>
<PRE>
protected void <B>finalize</B>()
                 throws java.lang.Throwable</PRE>
<DL>
<DD>This cleans up the common connection if no one is using
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>finalize</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Throwable</CODE> - in case of finalization of errors</DL>
</DD>
</DL>
<HR>

<A NAME="releaseResources()"><!-- --></A><H3>
releaseResources</H3>
<PRE>
public void <B>releaseResources</B>()</PRE>
<DL>
<DD>Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTrapReceiver bean instances, this
 method can be used to immediately release the resources.
 <b>
 Close the session and api if number of targets sharing it becomes zero.
 Otherwise decrement the targets count for that session and api.
 This cleans up the common connection if no one is using  the resources.
 </b>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="cleanup()"><!-- --></A><H3>
cleanup</H3>
<PRE>
public void <B>cleanup</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Replaced by stop() method.</I>
<P>
<DD>This cleans up the common connection.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stop()"><!-- --></A><H3>
stop</H3>
<PRE>
public void <B>stop</B>()</PRE>
<DL>
<DD>Stops receiving traps. Invokes setPortWithExpMsg(int) method to restart.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>Release 3.0</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalAddresses()"><!-- --></A><H3>
getLocalAddresses</H3>
<PRE>
public java.lang.String[] <B>getLocalAddresses</B>()</PRE>
<DL>
<DD>Gets the local addresses to listen on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLocalAddresses(java.lang.String[])"><!-- --></A><H3>
setLocalAddresses</H3>
<PRE>
public void <B>setLocalAddresses</B>(java.lang.String[]&nbsp;addresses)</PRE>
<DL>
<DD>Sets the local SNMP port number to listen on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPort()"><!-- --></A><H3>
getPort</H3>
<PRE>
public int <B>getPort</B>()</PRE>
<DL>
<DD>Gets the local SNMP port number to listen on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPort(int)"><!-- --></A><H3>
setPort</H3>
<PRE>
public void <B>setPort</B>(int&nbsp;i)</PRE>
<DL>
<DD>Sets the local SNMP port number to listen on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPortWithExceptionMsg()"><!-- --></A><H3>
getPortWithExceptionMsg</H3>
<PRE>
public int <B>getPortWithExceptionMsg</B>()</PRE>
<DL>
<DD>Gets the local SNMP port number to listen on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPortWithExceptionMsg(int)"><!-- --></A><H3>
setPortWithExceptionMsg</H3>
<PRE>
public void <B>setPortWithExceptionMsg</B>(int&nbsp;i)
                             throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Sets the local SNMP port number to listen on and throws SnmpException
 in case of BindException. This will allow the api users to catch the
 exception and dispaly a message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - if the socket could not be opened,
             or the socket could not bind to the specified local port.<DT><B>Since:</B><DD>Release 2.2</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getCommunity()"><!-- --></A><H3>
getCommunity</H3>
<PRE>
public java.lang.String <B>getCommunity</B>()</PRE>
<DL>
<DD>Gets the SNMP Community. The default value is null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The community of this SnmpTrapReceiver.</DL>
</DD>
</DL>
<HR>

<A NAME="setCommunity(java.lang.String)"><!-- --></A><H3>
setCommunity</H3>
<PRE>
public void <B>setCommunity</B>(java.lang.String&nbsp;s)</PRE>
<DL>
<DD>Sets the SNMP Community. The default value is null.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>s</CODE> - The community value to be set on this SnmpTrapReceiver.</DL>
</DD>
</DL>
<HR>

<A NAME="setCallbackthread(boolean)"><!-- --></A><H3>
setCallbackthread</H3>
<PRE>
public void <B>setCallbackthread</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Enable or disable if the user wants the callback to be called from
 a seperate thread. By default it is diabled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - true flag enables the callbcak thread.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpVersion()"><!-- --></A><H3>
getSnmpVersion</H3>
<PRE>
public int <B>getSnmpVersion</B>()</PRE>
<DL>
<DD>Gets the SNMP Version
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpVersion(int)"><!-- --></A><H3>
setSnmpVersion</H3>
<PRE>
public void <B>setSnmpVersion</B>(int&nbsp;version)</PRE>
<DL>
<DD>Sets the SNMP Version
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isTrapAuthEnable()"><!-- --></A><H3>
isTrapAuthEnable</H3>
<PRE>
public boolean <B>isTrapAuthEnable</B>()</PRE>
<DL>
<DD>To Check whether traps are authenticated. 
 If true, the received traps are authenticated. 
 If false, the received traps are not authenticated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true or false.</DL>
</DD>
</DL>
<HR>

<A NAME="setV3AuthEnable(boolean)"><!-- --></A><H3>
setV3AuthEnable</H3>
<PRE>
public void <B>setV3AuthEnable</B>(boolean&nbsp;v3auth)</PRE>
<DL>
<DD>Specify whether the v3 trap should be authenticated or not.
 By default the authentication is enabled
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>v3auth</CODE> - set this to False if v3 traps should be received without
 authentication. True otherwise.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCommunityAuthEnable(boolean)"><!-- --></A><H3>
setCommunityAuthEnable</H3>
<PRE>
public void <B>setCommunityAuthEnable</B>(boolean&nbsp;commauth)</PRE>
<DL>
<DD>Specify whether the community name should be authenticated or not for v1/v2 traps
 By default the authentication is enabled
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>commauth</CODE> - set this to False if v1/v2 traps should be received without
 authentication. True otherwise.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="isV3AuthEnabled()"><!-- --></A><H3>
isV3AuthEnabled</H3>
<PRE>
public boolean <B>isV3AuthEnabled</B>()</PRE>
<DL>
<DD>To check whether the v3 traps are authenticated and received
  If true, the received traps are authenticated. 
  If false, the received traps are not authenticated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true or false.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="isCommunityAuthEnabled()"><!-- --></A><H3>
isCommunityAuthEnabled</H3>
<PRE>
public boolean <B>isCommunityAuthEnabled</B>()</PRE>
<DL>
<DD>To check whether the v1/v2 traps are authenticated with their community name
  and received
  If true, the received traps are authenticated. 
  If false, the received traps are not authenticated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true or false.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTrapAuthEnable(boolean)"><!-- --></A><H3>
setTrapAuthEnable</H3>
<PRE>
public void <B>setTrapAuthEnable</B>(boolean&nbsp;isAuth)</PRE>
<DL>
<DD>Specify whether traps should be authenticated while receiving it.
 In v3 case when set to false, authentication for v3 traps will not be 
 done and all the traps will be received.Authentication will be done 
 otherwise and un-authenticated traps will be dropped.
 In v1 or v2 case if set to false the authentication for the community 
 name will not be done and all the traps will be received.
 Authentication for community name will be done otherwise and 
 un-authenticated traps will be dropped.The default value is True.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>isAuth</CODE> - set this to False if traps should be received without
 authentication. True otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getContextName()"><!-- --></A><H3>
getContextName</H3>
<PRE>
public java.lang.String <B>getContextName</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setContextName(java.lang.String)"><!-- --></A><H3>
setContextName</H3>
<PRE>
public void <B>setContextName</B>(java.lang.String&nbsp;cName)</PRE>
<DL>
<DD>Sets the SNMP V3 Context name
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getcontextID()"><!-- --></A><H3>
getcontextID</H3>
<PRE>
public java.lang.String <B>getcontextID</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Replaced with getContextID()</I>
<P>
<DD>Gets the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setcontextID(byte[])"><!-- --></A><H3>
setcontextID</H3>
<PRE>
public void <B>setcontextID</B>(byte[]&nbsp;ctxtID)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Replaced with setContextID(byte[] ctxtID)</I>
<P>
<DD>Sets the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getContextID()"><!-- --></A><H3>
getContextID</H3>
<PRE>
public java.lang.String <B>getContextID</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setContextID(byte[])"><!-- --></A><H3>
setContextID</H3>
<PRE>
public void <B>setContextID</B>(byte[]&nbsp;ctxtID)</PRE>
<DL>
<DD>Sets the SNMP V3 contextID
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityModel()"><!-- --></A><H3>
getSecurityModel</H3>
<PRE>
public int <B>getSecurityModel</B>()</PRE>
<DL>
<DD>Gets the SNMP V3 securityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityModel(int)"><!-- --></A><H3>
setSecurityModel</H3>
<PRE>
public void <B>setSecurityModel</B>(int&nbsp;securityModel)</PRE>
<DL>
<DD>Sets the SNMP V3 SecurityModel
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrincipal()"><!-- --></A><H3>
getPrincipal</H3>
<PRE>
public java.lang.String <B>getPrincipal</B>()</PRE>
<DL>
<DD>Gets Principal ie userName
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrincipal(java.lang.String)"><!-- --></A><H3>
setPrincipal</H3>
<PRE>
public void <B>setPrincipal</B>(java.lang.String&nbsp;userName)</PRE>
<DL>
<DD>Sets the Principal or authentication user name.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthProtocol()"><!-- --></A><H3>
getAuthProtocol</H3>
<PRE>
public int <B>getAuthProtocol</B>()</PRE>
<DL>
<DD>Gets the Authentication Protocol.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthProtocol(int)"><!-- --></A><H3>
setAuthProtocol</H3>
<PRE>
public void <B>setAuthProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>Sets the Authentication Protocol. The MD5 protocol is 21 and for SHA protocol is 22.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthPassword()"><!-- --></A><H3>
getAuthPassword</H3>
<PRE>
public java.lang.String <B>getAuthPassword</B>()</PRE>
<DL>
<DD>Gets authentication password.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>authentication passowrd as string.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthPassword(java.lang.String)"><!-- --></A><H3>
setAuthPassword</H3>
<PRE>
public void <B>setAuthPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>Sets authentication password for SNMPv3 authentication.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivPassword()"><!-- --></A><H3>
getPrivPassword</H3>
<PRE>
public java.lang.String <B>getPrivPassword</B>()</PRE>
<DL>
<DD>Gets the SNMPv3 privacy password. The privacy password contains
 only  the password and not the localised key.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>privacy password.</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivPassword(java.lang.String)"><!-- --></A><H3>
setPrivPassword</H3>
<PRE>
public void <B>setPrivPassword</B>(java.lang.String&nbsp;password)</PRE>
<DL>
<DD>Sets the privacy password.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivProtocol(int)"><!-- --></A><H3>
setPrivProtocol</H3>
<PRE>
public void <B>setPrivProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>Sets the privacy protocol. Support either CFB_AES_128 or CBC_DES.
 Supply integer should either of SnmpServer.CFB_AES_128 or SnmpServer.CBC_DES.
 If anything other than these will take SnmpServer.CBC_DES as default.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>protocol</CODE> - - should be SnmpServer.CFB_AES_128 or SnmpServer.CBC_DES.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivProtocol()"><!-- --></A><H3>
getPrivProtocol</H3>
<PRE>
public int <B>getPrivProtocol</B>()</PRE>
<DL>
<DD>Gets the privacy protocol.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="initSecurityProvider()"><!-- --></A><H3>
initSecurityProvider</H3>
<PRE>
public void <B>initSecurityProvider</B>()
                          throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Initializes the SecurityProvider by reading from the file securityProvider.config. 
 It will register all the security models specified in the securityProvider.config file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - - if the file could not be found or if the security model could not be registered.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityTable(int)"><!-- --></A><H3>
getSecurityTable</H3>
<PRE>
public java.lang.Object <B>getSecurityTable</B>(int&nbsp;secModel)</PRE>
<DL>
<DD>Gets the SecurityModelTable as an object for a given security Model.
  SecurityModelTable is an abstract class which contains a list of SecurityModelEntry objects belonging to a particular securityModel.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The SecurityModelTable as an object. Null if the SecurityModelTable is not created.</DL>
</DD>
</DL>
<HR>

<A NAME="isSupportedSecurityModel(int)"><!-- --></A><H3>
isSupportedSecurityModel</H3>
<PRE>
public boolean <B>isSupportedSecurityModel</B>(int&nbsp;secModel)</PRE>
<DL>
<DD>Specifies if a particular security model is supported or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>True if the specified securityModel is supported. False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getUSMTable()"><!-- --></A><H3>
getUSMTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html">USMUserTable</A> <B>getUSMTable</B>()</PRE>
<DL>
<DD>Gets the USMUserTable reference.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>USM User Table.</DL>
</DD>
</DL>
<HR>

<A NAME="createUserEntry(byte[], byte)"><!-- --></A><H3>
createUserEntry</H3>
<PRE>
public void <B>createUserEntry</B>(byte[]&nbsp;engineID,
                            byte&nbsp;secLevel)</PRE>
<DL>
<DD>Creates a usm user entry with the given EngineID and Security Level, in the USM Table.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>engineID</CODE> - - Engine ID of the usm user entry to be created.<DD><CODE>secLevel</CODE> - - Security Level.</DL>
</DD>
</DL>
<HR>

<A NAME="isSetAutoInformResponse()"><!-- --></A><H3>
isSetAutoInformResponse</H3>
<PRE>
public boolean <B>isSetAutoInformResponse</B>()</PRE>
<DL>
<DD>High level API method to check if the automatic response flag for the 
 Inform Request is set. The default value is true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>boolean value of the Inform Request response flag.</DL>
</DD>
</DL>
<HR>

<A NAME="setAutoInformResponse(boolean)"><!-- --></A><H3>
setAutoInformResponse</H3>
<PRE>
public void <B>setAutoInformResponse</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>High-level API method to set the automatic response flag for the Inform 
 Request. If this flag is set to true, then the SNMP stack automatically 
 sends a Get Reponse message back to the sender. The default value is true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - boolean value of the flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setCharacterEncoding(java.lang.String)"><!-- --></A><H3>
setCharacterEncoding</H3>
<PRE>
public void <B>setCharacterEncoding</B>(java.lang.String&nbsp;enc)</PRE>
<DL>
<DD>Set the Character Encoding to be used. The encoding specified will
 be used internally to convert String <--> byte[]. The Default value
 is ISO8859_1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enc</CODE> - The name of a character encoding. All the string encoding
 will be done based on this encoding.</DL>
</DD>
</DL>
<HR>

<A NAME="getCharacterEncoding()"><!-- --></A><H3>
getCharacterEncoding</H3>
<PRE>
public java.lang.String <B>getCharacterEncoding</B>()</PRE>
<DL>
<DD>Get the Character Encoding being used. This encoding scheme will
 be used internally to convert String <--> byte[]. The Default value
 is ISO8859_1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>enc The character encoding used.</DL>
</DD>
</DL>
<HR>

<A NAME="setReceiveBufferSize(int)"><!-- --></A><H3>
setReceiveBufferSize</H3>
<PRE>
public void <B>setReceiveBufferSize</B>(int&nbsp;size)</PRE>
<DL>
<DD>This method sets the buffer size of this SnmpTrapReceiver.
 This method SHOULD be called only when jdk1.2
 and higher version is used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - the size of the buffer.</DL>
</DD>
</DL>
<HR>

<A NAME="getReceiveBufferSize()"><!-- --></A><H3>
getReceiveBufferSize</H3>
<PRE>
public int <B>getReceiveBufferSize</B>()</PRE>
<DL>
<DD>This method returns the buffer size of this SnmpTrapReceiver.
 This method SHOULD be called only when jdk1.2
 and higher version is used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the buffer size of this receiver.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTargetBeanInfo.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTrapReceiverBeanInfo.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpTrapReceiver.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
