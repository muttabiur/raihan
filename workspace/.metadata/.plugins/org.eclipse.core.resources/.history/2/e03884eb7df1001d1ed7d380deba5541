<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:50 IST 2009 -->
<TITLE>
USMUserEntry (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="USMUserEntry (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMStats.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="USMUserEntry.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2.usm</FONT>
<BR>
Class  USMUserEntry</H2>
<PRE>
java.lang.Object
  |
  +--<A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">com.adventnet.snmp.snmp2.SecurityModelEntry</A>
        |
        +--<B>com.adventnet.snmp.snmp2.usm.USMUserEntry</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>USMUserEntry</B><DT>extends <A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A><DT>implements java.io.Serializable</DL>

<P>
The USMUserEntry holds the configuration data specific to each user 
 for a given SNMPv3 entity. This class represents the User Based 
 Security Model and  has the user security attrubutes like the 
 auth and priv Passwords, protocols and their localized keys 
 in addition to the userName. It also has authentication and 
 the timeSynchronization routines. 
 <p>
 A USMUserEntry is created for each user on whose behalf an SNMP request is
 to be made. A new instance is created with the userName and the engineID,
 where the engineID is got from a discovery procedure. The SnmpEngineEntry
 is used to create a new SnmpV3 entity and provide the methods to do 
 discovery. For an agent side implementation, the engineID will be the 
 agent's engineID and hence the discovery process will not be required.
 All the other user attributes can be added using the set methods of the
 respective attributes. If the auth/priv password is set, then the 
 auth/priv key(localized key) can be generated using the 
 password_to_key method in the USMUtils class. 
 <p>
 This class also provides the Authentication and TimeSynchronization 
 routines. The authentication routine, checks the message digest and updates
 the time values such as the engine boots, time and also the 
 lastReceivedTime. In case of the agent side implementaion it does the
 timeliness check.
<p>
 The USMUserEntry has a reference to the SnmpEngineEntry. So when a new
 USMUserEntry is created, its corresponding SnmpV3 entity reference 
 should be set in the USMUserEntry. This class provides the methods to access
 the SnmpEngineEntry.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html"><CODE>USMUserTable</CODE></A>, 
<A HREF="../../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.usm.USMUserEntry">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#CBC_3DES">CBC_3DES</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CBC_3DES PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#CBC_DES">CBC_DES</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CBC_DES PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#CFB_AES_128">CFB_AES_128</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#CFB_AES_192">CFB_AES_192</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES_192 PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#CFB_AES_256">CFB_AES_256</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES_256 PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#MD5_AUTH">MD5_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser MD5 AuthProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#NO_AUTH">NO_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmNoAuthProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#NO_PRIV">NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmNoPrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#SHA_AUTH">SHA_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser SHA AuthProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#USM_SECURITY_MODEL">USM_SECURITY_MODEL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for the User Based Security Model.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#USMUserEntry()">USMUserEntry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>USMUserEntry</code> with the default userName 
 of <i>initial</i>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#USMUserEntry(byte[], byte[])">USMUserEntry</A></B>(byte[]&nbsp;user,
             byte[]&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new <code>USMUserEntry</code> using the specified userName 
 and engineID.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#authenticate(com.adventnet.snmp.snmp2.Snmp3Message)">authenticate</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This performs the authentication for this user entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#authenticateMessageToSend(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)">authenticateMessageToSend</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                          <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs authentication of the received message as per the
 security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#authenticateReceivedMessage(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)">authenticateReceivedMessage</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                            <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs authentication of the received message as per the USM
 security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#copy()">copy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#copy(byte[], byte[])">copy</A></B>(byte[]&nbsp;engineID,
     byte[]&nbsp;userName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of this USMUserEntry with the userName and 
 engineID, initialized to the values passed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#decodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ASN1Parser)">decodeMsgSecurityParams</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                        <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                        <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will decode the USM security parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#decrypt(byte[], int, byte[], int, byte[])">decrypt</A></B>(byte[]&nbsp;data,
        int&nbsp;spaceLeft,
        byte[]&nbsp;key,
        int&nbsp;protocol,
        byte[]&nbsp;privParms)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called to decrypt the data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#encodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpAPI, com.adventnet.snmp.snmp2.ASN1Parser)">encodeMsgSecurityParams</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                        <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpAPI.html">SnmpAPI</A>&nbsp;API,
                        <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method will encode the USM message security parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#encrypt(byte[], int, byte[], int, byte[])">encrypt</A></B>(byte[]&nbsp;data,
        int&nbsp;spaceLeft,
        byte[]&nbsp;key,
        int&nbsp;protocol,
        byte[]&nbsp;privParms)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called to encrypt the data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getAuthKey()">getAuthKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the authentication key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getAuthParams()">getAuthParams</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the auth params.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getAuthPassword()">getAuthPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the authentication password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getAuthProtocol()">getAuthProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the authentication Protocol used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getEngineBoots()">getEngineBoots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the engine boots value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getEngineEntry()">getEngineEntry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the corresponding SnmpEngineEntry reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getEngineID()">getEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the Engine identifier associated with the SNMP engine.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getKey()">getKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the hash key for this user entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getKey(byte[], byte[])">getKey</A></B>(byte[]&nbsp;name,
       byte[]&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the key for this user object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getPrivKey()">getPrivKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the privacy key value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getPrivParams()">getPrivParams</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the priv params.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getPrivPassword()">getPrivPassword</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the privacy password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getPrivProtocol()">getPrivProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the privacy protocol value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSecurityID(byte[])">getSecurityID</A></B>(byte[]&nbsp;securityName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the securityID ( which depends on the security model ).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSecurityLevel()">getSecurityLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the security level value for this user entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSecurityModel()">getSecurityModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the securityModel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSecurityName()">getSecurityName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the security name, which is independent of the security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSecurityName(byte[])">getSecurityName</A></B>(byte[]&nbsp;securityID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the security name ( which is independent of the security model )
 using the securityID ( which depends on the security model ).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getSnmpEngineTime()">getSnmpEngineTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getStorageType()">getStorageType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the USM StorageType associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getUserCloneFrom()">getUserCloneFrom</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the USMUserCloneFrom OID associated with this
 USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getUserName()">getUserName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the userName associated with this user.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getUserPublic()">getUserPublic</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the USM UserPublic associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#getUserStatus()">getUserStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the USM UserStatus associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#init(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)">init</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
     <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#processEncodedMsg(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.ASN1Parser)">processEncodedMsg</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                  <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is called after encoding the message version.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#sendTimeSync(com.adventnet.snmp.snmp2.SnmpSession)">sendTimeSync</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Achieves time sync with remotehost.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#sendTimeSync(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions, int)">sendTimeSync</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
             <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po,
             int&nbsp;reqID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Achieves time sync with remotehost.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setAuthKey(byte[])">setAuthKey</A></B>(byte[]&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the authentication key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setAuthParams(byte[])">setAuthParams</A></B>(byte[]&nbsp;param)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the auth params value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setAuthPassword(byte[])">setAuthPassword</A></B>(byte[]&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the authentication password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setAuthProtocol(int)">setAuthProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the authentication Protocol to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setEngineBoots(int)">setEngineBoots</A></B>(int&nbsp;boots)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the engineBoots corresponding to this user's 
 corresponding engine entry</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setEngineEntry(com.adventnet.snmp.snmp2.SnmpEngineEntry)">setEngineEntry</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A>&nbsp;entry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SnmpEngineEntry reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setOwnKeyChange(boolean)">setOwnKeyChange</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the ownKeyChange flag.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setPrivKey(byte[])">setPrivKey</A></B>(byte[]&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the privacy key.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setPrivParams(byte[])">setPrivParams</A></B>(byte[]&nbsp;param)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the priv params field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setPrivPassword(byte[])">setPrivPassword</A></B>(byte[]&nbsp;passwd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the privacy password.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setPrivProtocol(int)">setPrivProtocol</A></B>(int&nbsp;protocol)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the privacy protocol to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setSecurityLevel(byte)">setSecurityLevel</A></B>(byte&nbsp;level)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the security level for this user entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setSecurityName(byte[])">setSecurityName</A></B>(byte[]&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the security name by taking the byte array as argument.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setSnmpEngineTime(int)">setSnmpEngineTime</A></B>(int&nbsp;et)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setStorageType(int)">setStorageType</A></B>(int&nbsp;storageType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the USM StorageType associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setUserCloneFrom(int[])">setUserCloneFrom</A></B>(int[]&nbsp;oid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the USM UserCloneFrom OID for this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setUserPublic(byte[])">setUserPublic</A></B>(byte[]&nbsp;userPublic)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the USM UserPublic associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setUserStatus(int)">setUserStatus</A></B>(int&nbsp;userStatus)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the USM UserStatus associated with this USMUserEntry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#setUSMUtils(java.lang.Object)">setUSMUtils</A></B>(java.lang.Object&nbsp;utils)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Utils object should be set, so that it can be used for 
 encryption purpose.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#timeSync(com.adventnet.snmp.snmp2.SnmpSession)">timeSync</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>This method does not throw any exception and hence does not
 inform the user, in case of any error. 
 As of AdventNet SNMP API 4 SP2 ( Release 4.0.2 ), replaced by 
 <A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#timeSynchronize(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)"><CODE>timeSynchronize(SnmpSession,ProtocolOptions)</CODE></A></I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#timeSynchronize(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)">timeSynchronize</A></B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Achieves time sync with the remote host.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="USM_SECURITY_MODEL"><!-- --></A><H3>
USM_SECURITY_MODEL</H3>
<PRE>
public static final byte <B>USM_SECURITY_MODEL</B></PRE>
<DL>
<DD>Constant for the User Based Security Model.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.USM_SECURITY_MODEL">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_AUTH"><!-- --></A><H3>
NO_AUTH</H3>
<PRE>
public static final int <B>NO_AUTH</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmNoAuthProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.NO_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MD5_AUTH"><!-- --></A><H3>
MD5_AUTH</H3>
<PRE>
public static final int <B>MD5_AUTH</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser MD5 AuthProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.MD5_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SHA_AUTH"><!-- --></A><H3>
SHA_AUTH</H3>
<PRE>
public static final int <B>SHA_AUTH</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser SHA AuthProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.SHA_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_PRIV"><!-- --></A><H3>
NO_PRIV</H3>
<PRE>
public static final int <B>NO_PRIV</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmNoPrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CBC_DES"><!-- --></A><H3>
CBC_DES</H3>
<PRE>
public static final int <B>CBC_DES</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CBC_DES PrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.CBC_DES">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_128"><!-- --></A><H3>
CFB_AES_128</H3>
<PRE>
public static final int <B>CFB_AES_128</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES PrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.CFB_AES_128">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_192"><!-- --></A><H3>
CFB_AES_192</H3>
<PRE>
public static final int <B>CFB_AES_192</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES_192 PrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.CFB_AES_192">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_256"><!-- --></A><H3>
CFB_AES_256</H3>
<PRE>
public static final int <B>CFB_AES_256</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES_256 PrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.CFB_AES_256">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CBC_3DES"><!-- --></A><H3>
CBC_3DES</H3>
<PRE>
public static final int <B>CBC_3DES</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CBC_3DES PrivProtocol.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../constant-values.html#com.adventnet.snmp.snmp2.usm.USMUserEntry.CBC_3DES">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="USMUserEntry()"><!-- --></A><H3>
USMUserEntry</H3>
<PRE>
public <B>USMUserEntry</B>()</PRE>
<DL>
<DD>Constructs a new <code>USMUserEntry</code> with the default userName 
 of <i>initial</i>. This is used by the Snmp3Message class
 constructor. The API user should not use this constructor.
<P>
</DL>
<HR>

<A NAME="USMUserEntry(byte[], byte[])"><!-- --></A><H3>
USMUserEntry</H3>
<PRE>
public <B>USMUserEntry</B>(byte[]&nbsp;user,
                    byte[]&nbsp;id)</PRE>
<DL>
<DD>Creates a new <code>USMUserEntry</code> using the specified userName 
 and engineID. The engineID can be learned from the discovery, for 
 which a new SnmpV3 entity has to be created using the SnmpEngineEntry.
 For an agent side implementation, its own engineID is used.
<P>
<DT><B>Parameters:</B><DD><CODE>user</CODE> - The userName, on whose behalf SNMP requests are to be made<DD><CODE>id</CODE> - The engineID of the SnmpV3 entity. In the context of the
 SnmpV3 entity as a manager, the engineID is that of the peer agent
 and can be learned from the discovery procedure. In case of the SnmpV3 
 entity as an agent, the engineID is the agent's engineID.<DT><B>See Also:</B><DD><CODE>SnmpEngineEntry.</CODE></DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getEngineID()"><!-- --></A><H3>
getEngineID</H3>
<PRE>
public byte[] <B>getEngineID</B>()</PRE>
<DL>
<DD>Retrieves the Engine identifier associated with the SNMP engine.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getEngineID()">getEngineID</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getUserName()"><!-- --></A><H3>
getUserName</H3>
<PRE>
public byte[] <B>getUserName</B>()</PRE>
<DL>
<DD>Gets the userName associated with this user.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityName()"><!-- --></A><H3>
getSecurityName</H3>
<PRE>
public byte[] <B>getSecurityName</B>()</PRE>
<DL>
<DD>Gets the security name, which is independent of the security model.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getSecurityName()">getSecurityName</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the security name.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityName(byte[])"><!-- --></A><H3>
getSecurityName</H3>
<PRE>
public byte[] <B>getSecurityName</B>(byte[]&nbsp;securityID)</PRE>
<DL>
<DD>Gets the security name ( which is independent of the security model )
 using the securityID ( which depends on the security model ).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getSecurityName(byte[])">getSecurityName</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the securityID.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityID(byte[])"><!-- --></A><H3>
getSecurityID</H3>
<PRE>
public byte[] <B>getSecurityID</B>(byte[]&nbsp;securityName)</PRE>
<DL>
<DD>Returns the securityID ( which depends on the security model ).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getSecurityID(byte[])">getSecurityID</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityName(byte[])"><!-- --></A><H3>
setSecurityName</H3>
<PRE>
public void <B>setSecurityName</B>(byte[]&nbsp;name)</PRE>
<DL>
<DD>Sets the security name by taking the byte array as argument.
 This byte array is the security name, which is independent of 
 the security model. The securityID ( which depends on the 
 security model ) should also be set as a result of this operation.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#setSecurityName(byte[])">setSecurityName</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityModel()"><!-- --></A><H3>
getSecurityModel</H3>
<PRE>
public int <B>getSecurityModel</B>()</PRE>
<DL>
<DD>Returns the securityModel.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getSecurityModel()">getSecurityModel</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthProtocol()"><!-- --></A><H3>
getAuthProtocol</H3>
<PRE>
public int <B>getAuthProtocol</B>()</PRE>
<DL>
<DD>Returns the authentication Protocol used. The values are one of the 
  constants, NO_AUTH, MD5_AUTH, SHA_AUTH defined in this class.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The authentication Protocol used.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthProtocol(int)"><!-- --></A><H3>
setAuthProtocol</H3>
<PRE>
public void <B>setAuthProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>Sets the authentication Protocol to be used. It should be one of the 
  constants NO_AUTH, MD5_AUTH, or SHA_AUTH defined in this class.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>protocol</CODE> - The authentication Protocol to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthPassword()"><!-- --></A><H3>
getAuthPassword</H3>
<PRE>
public byte[] <B>getAuthPassword</B>()</PRE>
<DL>
<DD>Retrieves the authentication password. The authPassword contains 
 only the password and not the localized key.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The authPassword used for authentication.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthPassword(byte[])"><!-- --></A><H3>
setAuthPassword</H3>
<PRE>
public void <B>setAuthPassword</B>(byte[]&nbsp;passwd)</PRE>
<DL>
<DD>Sets the authentication password. The authPassword contains 
  only the password and not the localized key.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>passwd</CODE> - The authPassword to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthKey()"><!-- --></A><H3>
getAuthKey</H3>
<PRE>
public byte[] <B>getAuthKey</B>()</PRE>
<DL>
<DD>Retrieves the authentication key. The authentication key is the 
  localized key. This is a secret key shared between the user and 
  the authoritative SNMP engine.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The localized secret authentication key.</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthKey(byte[])"><!-- --></A><H3>
setAuthKey</H3>
<PRE>
public void <B>setAuthKey</B>(byte[]&nbsp;key)</PRE>
<DL>
<DD>Sets the authentication key. The authentication key is the 
  localized key which is a secret one shared between the user and 
  the authoritative SNMP engine.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - The localized authentication key</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivProtocol()"><!-- --></A><H3>
getPrivProtocol</H3>
<PRE>
public int <B>getPrivProtocol</B>()</PRE>
<DL>
<DD>Retrieves the privacy protocol value. Currently valid value is
  CBC_DES.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The privProtocol used.</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivProtocol(int)"><!-- --></A><H3>
setPrivProtocol</H3>
<PRE>
public void <B>setPrivProtocol</B>(int&nbsp;protocol)</PRE>
<DL>
<DD>Sets the privacy protocol to be used. Currently valid value is 
  CBC-DES. This privacy protocol is used by encryptive/decryptive
  algorithm.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>protocol</CODE> - The privProtocol to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivKey()"><!-- --></A><H3>
getPrivKey</H3>
<PRE>
public byte[] <B>getPrivKey</B>()</PRE>
<DL>
<DD>Retrieves the privacy key value. The privacy key is the localized 
  private privKey used by the encryptive/decryptive algorithm.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The localized secret privacy key.</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivKey(byte[])"><!-- --></A><H3>
setPrivKey</H3>
<PRE>
public void <B>setPrivKey</B>(byte[]&nbsp;key)</PRE>
<DL>
<DD>Sets the privacy key. The privacy key is the localized 
  private privKey used by the encryptive/decryptive algorithm.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - The localized secret privacy key.</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivPassword()"><!-- --></A><H3>
getPrivPassword</H3>
<PRE>
public byte[] <B>getPrivPassword</B>()</PRE>
<DL>
<DD>Gets the privacy password. The privPassword contains only the
 password and not the localized key.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The privacy password.</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivPassword(byte[])"><!-- --></A><H3>
setPrivPassword</H3>
<PRE>
public void <B>setPrivPassword</B>(byte[]&nbsp;passwd)</PRE>
<DL>
<DD>Sets the privacy password. The privPassword contains only the
 password and not the localized key.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>passwd</CODE> - The privacy password.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityLevel()"><!-- --></A><H3>
getSecurityLevel</H3>
<PRE>
public byte <B>getSecurityLevel</B>()</PRE>
<DL>
<DD>Retrieves the security level value for this user entry.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getSecurityLevel()">getSecurityLevel</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The securityLevel used by this user entry.</DL>
</DD>
</DL>
<HR>

<A NAME="setSecurityLevel(byte)"><!-- --></A><H3>
setSecurityLevel</H3>
<PRE>
public void <B>setSecurityLevel</B>(byte&nbsp;level)</PRE>
<DL>
<DD>Sets the security level for this user entry.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#setSecurityLevel(byte)">setSecurityLevel</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>level</CODE> - The securityLevel to be used for this user entry.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineBoots(int)"><!-- --></A><H3>
setEngineBoots</H3>
<PRE>
public void <B>setEngineBoots</B>(int&nbsp;boots)</PRE>
<DL>
<DD>Sets the engineBoots corresponding to this user's 
 corresponding engine entry
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineBoots()"><!-- --></A><H3>
getEngineBoots</H3>
<PRE>
public int <B>getEngineBoots</B>()</PRE>
<DL>
<DD>Retrieve the engine boots value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineTime()"><!-- --></A><H3>
getSnmpEngineTime</H3>
<PRE>
public int <B>getSnmpEngineTime</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpEngineTime(int)"><!-- --></A><H3>
setSnmpEngineTime</H3>
<PRE>
public void <B>setSnmpEngineTime</B>(int&nbsp;et)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setAuthParams(byte[])"><!-- --></A><H3>
setAuthParams</H3>
<PRE>
public void <B>setAuthParams</B>(byte[]&nbsp;param)</PRE>
<DL>
<DD>Sets the auth params value. The authParams are the msgAuthentication 
  parameters. This is used by encoding/decoding routines.
  API user doesn't need to call this, unless he is writing his
  own encoding/decoding methods.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>param</CODE> - The msgAuthentication parameters.</DL>
</DD>
</DL>
<HR>

<A NAME="getAuthParams()"><!-- --></A><H3>
getAuthParams</H3>
<PRE>
public byte[] <B>getAuthParams</B>()</PRE>
<DL>
<DD>Gets the auth params. The authParams are the msgAuthentication 
  parameters. This is used by encoding/decoding routines.
  API user doesn't need to call this, unless he is writing his
  own encoding/decoding methods.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The msgAuthentication parameters.</DL>
</DD>
</DL>
<HR>

<A NAME="setPrivParams(byte[])"><!-- --></A><H3>
setPrivParams</H3>
<PRE>
public void <B>setPrivParams</B>(byte[]&nbsp;param)</PRE>
<DL>
<DD>Sets the priv params field. The privParams are the msgPrivacyParameters.
  This is used by encoding/decoding routines. API user doesn't need 
  to call this unless he is writing his own encoding/decoding methods.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>param</CODE> - The msgPrivacyParameters.</DL>
</DD>
</DL>
<HR>

<A NAME="getPrivParams()"><!-- --></A><H3>
getPrivParams</H3>
<PRE>
public byte[] <B>getPrivParams</B>()</PRE>
<DL>
<DD>Retrieve the priv params. The privParams are the msgPrivacyParameters.
  This is used by encoding/decoding routines. API user doesn't need 
  to call this, unless he is writing his own encoding/decoding methods.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The msgPrivacyParameters.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineEntry(com.adventnet.snmp.snmp2.SnmpEngineEntry)"><!-- --></A><H3>
setEngineEntry</H3>
<PRE>
public void <B>setEngineEntry</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A>&nbsp;entry)</PRE>
<DL>
<DD>Sets the SnmpEngineEntry reference. When a new USMUserEntry is created
 its corresponding SnmpV3 entity i.e the SnmpEngineEntry should be
 set. This is because the SnmpEngineEntry maintains the timeliness 
 values and these are used for the authentication purpose.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>entry</CODE> - The SnmpEngineEntry to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineEntry()"><!-- --></A><H3>
getEngineEntry</H3>
<PRE>
public <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A> <B>getEngineEntry</B>()</PRE>
<DL>
<DD>Gets the corresponding SnmpEngineEntry reference.
 When a new USMUserEntry is created
 its corresponding SnmpV3 entity i.e., the SnmpEngineEntry should be
 set. This is because the SnmpEngineEntry maintains the timeliness 
 values and these are used for the authentication purpose.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The SnmpEngineEntry associated with this object.</DL>
</DD>
</DL>
<HR>

<A NAME="getUserCloneFrom()"><!-- --></A><H3>
getUserCloneFrom</H3>
<PRE>
public int[] <B>getUserCloneFrom</B>()</PRE>
<DL>
<DD>Gets the USMUserCloneFrom OID associated with this
 USMUserEntry. This is basically used, incase of an agent side
 implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the clone from OID.</DL>
</DD>
</DL>
<HR>

<A NAME="setUserCloneFrom(int[])"><!-- --></A><H3>
setUserCloneFrom</H3>
<PRE>
public void <B>setUserCloneFrom</B>(int[]&nbsp;oid)</PRE>
<DL>
<DD>Sets the USM UserCloneFrom OID for this USMUserEntry.
 This is basically used incase of an agent side implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oid</CODE> - The clone from OID to set.</DL>
</DD>
</DL>
<HR>

<A NAME="getUserPublic()"><!-- --></A><H3>
getUserPublic</H3>
<PRE>
public byte[] <B>getUserPublic</B>()</PRE>
<DL>
<DD>Gets the USM UserPublic associated with this USMUserEntry.
 This is used in case of an agent side mplementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the usmUserPublic value.</DL>
</DD>
</DL>
<HR>

<A NAME="setUserPublic(byte[])"><!-- --></A><H3>
setUserPublic</H3>
<PRE>
public void <B>setUserPublic</B>(byte[]&nbsp;userPublic)</PRE>
<DL>
<DD>Sets the USM UserPublic associated with this USMUserEntry.
 This is used in case of an agent side implementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>userPublic</CODE> - The usmUserPublic value to be used to set on
 this entry.</DL>
</DD>
</DL>
<HR>

<A NAME="getStorageType()"><!-- --></A><H3>
getStorageType</H3>
<PRE>
public int <B>getStorageType</B>()</PRE>
<DL>
<DD>Gets the USM StorageType associated with this USMUserEntry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setStorageType(int)"><!-- --></A><H3>
setStorageType</H3>
<PRE>
public void <B>setStorageType</B>(int&nbsp;storageType)</PRE>
<DL>
<DD>Sets the USM StorageType associated with this USMUserEntry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getUserStatus()"><!-- --></A><H3>
getUserStatus</H3>
<PRE>
public int <B>getUserStatus</B>()</PRE>
<DL>
<DD>Gets the USM UserStatus associated with this USMUserEntry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setUserStatus(int)"><!-- --></A><H3>
setUserStatus</H3>
<PRE>
public void <B>setUserStatus</B>(int&nbsp;userStatus)</PRE>
<DL>
<DD>Sets the USM UserStatus associated with this USMUserEntry.
 This is used in case of an agent side mplementation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>userStatus</CODE> - The row status value to be set on this entry.</DL>
</DD>
</DL>
<HR>

<A NAME="setOwnKeyChange(boolean)"><!-- --></A><H3>
setOwnKeyChange</H3>
<PRE>
public void <B>setOwnKeyChange</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Sets the ownKeyChange flag. This flag needs to be set only in case
 of an agent side implementation, where, if an OwnKeyChange request 
 comes to the agent, it needs to encode a proper digest.
 .ie., the digest should be made w.r.t the auth/priv key prior to 
 the change. This flag will enable to form a proper digest in the
 response PDU.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - the flag value shlould be true if an ownKeyChange
 is to be performed. The default value is false.</DL>
</DD>
</DL>
<HR>

<A NAME="setUSMUtils(java.lang.Object)"><!-- --></A><H3>
setUSMUtils</H3>
<PRE>
public void <B>setUSMUtils</B>(java.lang.Object&nbsp;utils)</PRE>
<DL>
<DD>The Utils object should be set, so that it can be used for 
 encryption purpose.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getKey()"><!-- --></A><H3>
getKey</H3>
<PRE>
public java.lang.Object <B>getKey</B>()</PRE>
<DL>
<DD>Retrieve the hash key for this user entry.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#getKey()">getKey</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the hash key as a <code>String</code> Object.</DL>
</DD>
</DL>
<HR>

<A NAME="getKey(byte[], byte[])"><!-- --></A><H3>
getKey</H3>
<PRE>
public static java.lang.Object <B>getKey</B>(byte[]&nbsp;name,
                                      byte[]&nbsp;id)</PRE>
<DL>
<DD>Retrieve the key for this user object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The key as a <code>String</code> Object.</DL>
</DD>
</DL>
<HR>

<A NAME="authenticate(com.adventnet.snmp.snmp2.Snmp3Message)"><!-- --></A><H3>
authenticate</H3>
<PRE>
public int <B>authenticate</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg)</PRE>
<DL>
<DD>This performs the authentication for this user entry.
 The authentication routine, checks the message digest and updates
 the time values such as the engine boots, time and also the 
 lastReceivedTime. In case of the agent side implementaion it does the
 timeliness check. Returns an int value of 1 if the authentication 
 succeeds. Returns a negative value otherwise. This method is called 
 in the context of the SnmpSession receiver thread. The API user 
 need not use this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - The Snmp3Message instance.
<DT><B>Returns:</B><DD><li>0 if authentication succeed i.e., both digest
 and timeliness check succeed.<li>
 -1, if digest fails or securityLevel is unsupported.<li>
 -2, if the timeliness check fails.
 -3, if the securityLevel is different.</DL>
</DD>
</DL>
<HR>

<A NAME="timeSync(com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
timeSync</H3>
<PRE>
public void <B>timeSync</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>This method does not throw any exception and hence does not
 inform the user, in case of any error. 
 As of AdventNet SNMP API 4 SP2 ( Release 4.0.2 ), replaced by 
 <A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserEntry.html#timeSynchronize(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)"><CODE>timeSynchronize(SnmpSession,ProtocolOptions)</CODE></A></I>
<P>
<DD>Achieves time sync with the remote host. This method is synchronous 
 and blocks. The timeSync request is sent over the SnmpSession 
 instance passed as a parameter. Once the response is received, the
 engineBoots and engneTime is updated in the SnmpEngineEntry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession instance, over which the the timeSync
 request is sent.</DL>
</DD>
</DL>
<HR>

<A NAME="timeSynchronize(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
timeSynchronize</H3>
<PRE>
public void <B>timeSynchronize</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                            <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po)
                     throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Achieves time sync with the remote host. This method is synchronous 
 and blocks. The timeSync request is sent over the SnmpSession 
 instance passed as a parameter. Once the response is received, the
 engineBoots and engneTime is updated in the SnmpEngineEntry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession instance, over which the the timeSync
 request is sent.<DD><CODE>po</CODE> - The ProtocolOptions instance
<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE><DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="sendTimeSync(com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
sendTimeSync</H3>
<PRE>
public int <B>sendTimeSync</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</PRE>
<DL>
<DD>Achieves time sync with remotehost. The method is asynchronous 
 and returns immediately after sending across the time sync pdu. 
 The timeSync request is sent over the SnmpSession instance passed
 as a parameter. The response to a timeSync which is a report PDU
 is handled in the SnmpSession receiver thread and the engineBoots
 and engineTime is updated in the authenticate method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession instance, over which the timeSync
 request is sent.
<DT><B>Returns:</B><DD>messageID of the sent request. Returns -1, if session
 throws an exception, while sending the timeSync.</DL>
</DD>
</DL>
<HR>

<A NAME="sendTimeSync(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions, int)"><!-- --></A><H3>
sendTimeSync</H3>
<PRE>
public int <B>sendTimeSync</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                        <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po,
                        int&nbsp;reqID)
                 throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Achieves time sync with remotehost. The method is asynchronous 
 and returns immediately after sending across the time sync pdu. 
 The timeSync request is sent over the SnmpSession instance passed
 as a parameter. The response to a timeSync which is a report PDU
 is handled in the SnmpSession receiver thread and the engineBoots
 and engineTime is updated in the authenticate method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession instance, over which the timeSync
 request is sent.<DD><CODE>po</CODE> - The ProtocolOptions instance
<DT><B>Returns:</B><DD>messageID of the sent request. Returns -1, if session
 throws an exception, while sending the timeSync.
<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="copy()"><!-- --></A><H3>
copy</H3>
<PRE>
public <A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A> <B>copy</B>()</PRE>
<DL>
<DD>Returns a copy of this USMUserEntry.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#copy()">copy</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The copy of this entry.</DL>
</DD>
</DL>
<HR>

<A NAME="copy(byte[], byte[])"><!-- --></A><H3>
copy</H3>
<PRE>
public <A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A> <B>copy</B>(byte[]&nbsp;engineID,
                               byte[]&nbsp;userName)</PRE>
<DL>
<DD>Returns a copy of this USMUserEntry with the userName and 
 engineID, initialized to the values passed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>engineID</CODE> - The engineID to be set in the cloned entry.<DD><CODE>userName</CODE> - The userName to be set in the cloned entry.
<DT><B>Returns:</B><DD>The copy of this entry with the userName and 
 engineID initilaized to the values passed.</DL>
</DD>
</DL>
<HR>

<A NAME="authenticateReceivedMessage(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
authenticateReceivedMessage</H3>
<PRE>
public int <B>authenticateReceivedMessage</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                                       <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</PRE>
<DL>
<DD>Performs authentication of the received message as per the USM
 security model.
 This will actually check, if the received message is a
 <br>
 1. Discovery or timeSysnc message and respond appropriately.
 <br>
 2. Response to a discovery or timeSync message. 
 i.e discovery/timeSync report message. It will update the
 security info.
 <br>
 3. Response to an SNMP request. Here it will authenticate
 the message.
 <br>
 The SnmpSession is also passed so that if this module requires
 the message to be replied(e.g respond to a discovery/timeSync)
 appropriately.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#authenticateReceivedMessage(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)">authenticateReceivedMessage</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - The Snmp3Message instance.<DD><CODE>session</CODE> - The SnmpSession instance incase this module requires
 to reply appropriately.
<DT><B>Returns:</B><DD>0 If authentication successful and pdu is to be enQed
 <br>1 If authentication successful and no need to enQ the pdu
 <br>any negative value if authentication fails or other errors.</DL>
</DD>
</DL>
<HR>

<A NAME="authenticateMessageToSend(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
authenticateMessageToSend</H3>
<PRE>
public void <B>authenticateMessageToSend</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                                      <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)
                               throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Performs authentication of the received message as per the
 security model.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#authenticateMessageToSend(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession)">authenticateMessageToSend</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - The Snmp3Message instance.<DD><CODE>session</CODE> - The SnmpSession instance.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the message could not be authenticated
 properly or particular entry is not available.</DL>
</DD>
</DL>
<HR>

<A NAME="encodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpAPI, com.adventnet.snmp.snmp2.ASN1Parser)"><!-- --></A><H3>
encodeMsgSecurityParams</H3>
<PRE>
public boolean <B>encodeMsgSecurityParams</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                                       <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpAPI.html">SnmpAPI</A>&nbsp;API,
                                       <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)</PRE>
<DL>
<DD>This method will encode the USM message security parameters. 
 This method should also set the message flags in Snmp3Message.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#encodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpAPI, com.adventnet.snmp.snmp2.ASN1Parser)">encodeMsgSecurityParams</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - The Snmp3Message instance.<DD><CODE>API</CODE> - The SnmpAPI Instance.<DD><CODE>asnParser</CODE> - The reference to ASN1Parser which has the
 methods to encode the SnmpPDU.</DL>
</DD>
</DL>
<HR>

<A NAME="decodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ASN1Parser)"><!-- --></A><H3>
decodeMsgSecurityParams</H3>
<PRE>
public void <B>decodeMsgSecurityParams</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                                    <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                                    <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)
                             throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A>,
                                    java.lang.ArrayIndexOutOfBoundsException</PRE>
<DL>
<DD>This method will decode the USM security parameters.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#decodeMsgSecurityParams(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ASN1Parser)">decodeMsgSecurityParams</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - The Snmp3Message instance.<DD><CODE>asnParser</CODE> - The reference to ASN1Parser, which has the
 data and methods to encode/decode the SnmpPDU.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - If the security parameters could not be
 decoded properly.
<DD><CODE>java.lang.ArrayIndexOutOfBoundsException</CODE> - If an unrecognized
snmp message.</DL>
</DD>
</DL>
<HR>

<A NAME="processEncodedMsg(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.ASN1Parser)"><!-- --></A><H3>
processEncodedMsg</H3>
<PRE>
public void <B>processEncodedMsg</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/Snmp3Message.html">Snmp3Message</A>&nbsp;msg,
                              <A HREF="../../../../../com/adventnet/snmp/snmp2/ASN1Parser.html">ASN1Parser</A>&nbsp;asnParser)</PRE>
<DL>
<DD>This method is called after encoding the message version. It is
 useful to calculate the digest over the message.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#processEncodedMsg(com.adventnet.snmp.snmp2.Snmp3Message, com.adventnet.snmp.snmp2.ASN1Parser)">processEncodedMsg</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>msg</CODE> - Snmp3Messgage instance.<DD><CODE>asnParser</CODE> - The reference to ASN1Parser which has the
 encoded data and methods to encode SnmpPDU.</DL>
</DD>
</DL>
<HR>

<A NAME="encrypt(byte[], int, byte[], int, byte[])"><!-- --></A><H3>
encrypt</H3>
<PRE>
public int <B>encrypt</B>(byte[]&nbsp;data,
                   int&nbsp;spaceLeft,
                   byte[]&nbsp;key,
                   int&nbsp;protocol,
                   byte[]&nbsp;privParms)
            throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></B></DD>
<DD>This method is called to encrypt the data.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#encrypt(byte[], int, byte[], int, byte[])">encrypt</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>data</CODE> - The data to be encrypt.<DD><CODE>key</CODE> - The key value used in encryption.<DD><CODE>protocol</CODE> - The protocol used for encryption.<DD><CODE>privParms</CODE> - The privacy params used in encryption.
<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="decrypt(byte[], int, byte[], int, byte[])"><!-- --></A><H3>
decrypt</H3>
<PRE>
public byte[] <B>decrypt</B>(byte[]&nbsp;data,
                      int&nbsp;spaceLeft,
                      byte[]&nbsp;key,
                      int&nbsp;protocol,
                      byte[]&nbsp;privParms)</PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></B></DD>
<DD>This method is called to decrypt the data.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#decrypt(byte[], int, byte[], int, byte[])">decrypt</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>data</CODE> - The data to be decrypt.<DD><CODE>spaceLeft</CODE> - The offset value to be used in decrypt.<DD><CODE>key</CODE> - The key value to be used in decryption.<DD><CODE>protocol</CODE> - The protocol used for decryption.<DD><CODE>privParms</CODE> - The privacy params used in decryption.
<DT><B>Returns:</B><DD>data The decrypted data.</DL>
</DD>
</DL>
<HR>

<A NAME="init(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)"><!-- --></A><H3>
init</H3>
<PRE>
public void <B>init</B>(<A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                 <A HREF="../../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A>&nbsp;po)
          throws <A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html#init(com.adventnet.snmp.snmp2.SnmpSession, com.adventnet.snmp.snmp2.ProtocolOptions)">init</A></CODE> in class <CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html">SecurityModelEntry</A></CODE></DL>
</DD>
<DD><DL>

<DD><CODE><A HREF="../../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMStats.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="USMUserEntry.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
