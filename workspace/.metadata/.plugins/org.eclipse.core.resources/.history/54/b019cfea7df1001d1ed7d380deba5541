<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:49 IST 2009 -->
<TITLE>
SASProtocolOptions (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SASProtocolOptions (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SASProtocolOptions.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SASProtocolOptions</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.snmp2.SASProtocolOptions</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SASProtocolOptions</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A></DL>

<P>
This class is the implementation of ProtocolOptions for
 SAS implementation of SnmpTransportProvider.
 This class is useful for opening the session and
 setting the parameters for sending any SNMP request.
 This class should be instantiated and the required values
 should be set before setting this instance in the
 SnmpSession. Only after, setting this instance in the
 SnmpSession, the open method of SnmpSession should be
 called in case of applets.
	
 <br>
 <br>
	For example,  opening the SnmpSession object
 <p>

 <i>
 <pre>
 SASProtocolOption opt = new SASProtocolOptions(remoteHost,remotePort,applet);
 SnmpSession session = new SnmpSession(api);
 session.setProtocolOptions(opt);
 try
 {
	session.open();
 }
 catch(SnmpException ex)
 {
	ex.printStackTrace();
 }

 </pre>
 </i>

 <p>
 Similarly for sending a SNMP request:
 <br>
 <i>
 <pre>
 SASProtocolOptions opt = new SASProtoclOptions(remoteHost,remotePort);
 pdu.setProtocolOptions(opt);
 try
 {
	session.syncSend(pdu);
 }
 catch(SnmpException ex)
 {
	ex.printStackTrace();
 }

 </pre>
 </i>
 </p>
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#SASProtocolOptions()">SASProtocolOptions</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes the variables for this instance of SASProtocolOptions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#SASProtocolOptions(java.lang.String, int)">SASProtocolOptions</A></B>(java.lang.String&nbsp;remoteHost,
                   int&nbsp;remotePort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes the variables for this instance of SASProtocolOptions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#SASProtocolOptions(java.lang.String, int, java.applet.Applet)">SASProtocolOptions</A></B>(java.lang.String&nbsp;remoteHost,
                   int&nbsp;remotePort,
                   java.applet.Applet&nbsp;applet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes the variables for this instance of SASProtocolOptions.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.applet.Applet</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getApplet()">getApplet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the applet instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getLocalAddresses()">getLocalAddresses</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method gets the local addresses for which the 
 session should bind with.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getLocalPort()">getLocalPort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the localport at which the sasclient is started.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getProtocol()">getProtocol</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the protocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getRemoteHost()">getRemoteHost</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the remoteHost of this ProtocolOptions obeject.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getRemotePort()">getRemotePort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the remotePort for this object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html">SASClient</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getSASClient()">getSASClient</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the SASClient instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#getSessionId()">getSessionId</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets the session id for this ProtocolOptions obejct.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setApplet(java.applet.Applet)">setApplet</A></B>(java.applet.Applet&nbsp;app)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets the applet instance for this protocoloptions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setLocalAddresses(java.lang.String[])">setLocalAddresses</A></B>(java.lang.String[]&nbsp;addrs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method sets the list of local addresses for which
 the session should bind.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setLocalPort(int)">setLocalPort</A></B>(int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets the localport at which this sasclient should be started.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setProtocol(int)">setProtocol</A></B>(int&nbsp;prot)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets the protocol value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setRemoteHost(java.lang.String)">setRemoteHost</A></B>(java.lang.String&nbsp;host)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets the remote host.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SASProtocolOptions.html#setRemotePort(int)">setRemotePort</A></B>(int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sets the remotePort.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SASProtocolOptions()"><!-- --></A><H3>
SASProtocolOptions</H3>
<PRE>
public <B>SASProtocolOptions</B>()</PRE>
<DL>
<DD>Initializes the variables for this instance of SASProtocolOptions.
<P>
</DL>
<HR>

<A NAME="SASProtocolOptions(java.lang.String, int, java.applet.Applet)"><!-- --></A><H3>
SASProtocolOptions</H3>
<PRE>
public <B>SASProtocolOptions</B>(java.lang.String&nbsp;remoteHost,
                          int&nbsp;remotePort,
                          java.applet.Applet&nbsp;applet)</PRE>
<DL>
<DD>Initializes the variables for this instance of SASProtocolOptions.
 This constructor should be used for opening a SnmpSession object. 
 <br>
 <br>
 For example, to open a SnmpSession object
 <br>
 <i>
 <pre>
 SASProtocolOption sasOpt = new SASProtocolOptions(remoteHost,remotePort,applet);
 SnmpSession session = new SnmpSession(api);
 session.setProtocolOption(sasOpt);
 try
 {
	session.open();
 }
 catch(SnmpException ex)
 {
	ex.printStackTrace();
 }
 </pre>
 </i>
<P>
<DT><B>Parameters:</B><DD><CODE>remoteHost</CODE> - the host to which a packet should be sent.<DD><CODE>remotePort</CODE> - the port to which a packet should be sent.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - <br>
 If <code>remoteHost</code> is null or empty.
 <br>
 If <code>remotePort</code> is negative or greater than 65535.
 <br>
 If the applet argument is null.</DL>
<HR>

<A NAME="SASProtocolOptions(java.lang.String, int)"><!-- --></A><H3>
SASProtocolOptions</H3>
<PRE>
public <B>SASProtocolOptions</B>(java.lang.String&nbsp;remoteHost,
                          int&nbsp;remotePort)</PRE>
<DL>
<DD>Initializes the variables for this instance of SASProtocolOptions.
 This constructor should be used for setting the protocol option in the SnmpPDU 
 for doing the Snmp request.
 <i>
 <br>
 <pre>
 pdu.setProtocolOptions(new SASProtoclOptions(remoteHost,remotePort));
 try
 {
	session.syncSend(pdu);
 }
 catch(SnmpException ex)
 {
	ex.printStackTrace();
 }
 </pre>
 </i>
<P>
<DT><B>Parameters:</B><DD><CODE>remoteHost</CODE> - the host to which a packet should be sent.<DD><CODE>remotePort</CODE> - the port to which a packet should be sent.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - <br>
 If <code>remoteHost</code> is null or empty.
 <br>
 If <code>remotePort</code> is negative or greater than 65535.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getSessionId()"><!-- --></A><H3>
getSessionId</H3>
<PRE>
public java.lang.String <B>getSessionId</B>()</PRE>
<DL>
<DD>gets the session id for this ProtocolOptions obejct.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html#getSessionId()">getSessionId</A></CODE> in interface <CODE><A HREF="../../../../com/adventnet/snmp/snmp2/ProtocolOptions.html">ProtocolOptions</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the session id of this ProtocolOptions object.</DL>
</DD>
</DL>
<HR>

<A NAME="getRemoteHost()"><!-- --></A><H3>
getRemoteHost</H3>
<PRE>
public java.lang.String <B>getRemoteHost</B>()</PRE>
<DL>
<DD>gets the remoteHost of this ProtocolOptions obeject.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the remoteHost of this object.</DL>
</DD>
</DL>
<HR>

<A NAME="setRemoteHost(java.lang.String)"><!-- --></A><H3>
setRemoteHost</H3>
<PRE>
public void <B>setRemoteHost</B>(java.lang.String&nbsp;host)</PRE>
<DL>
<DD>sets the remote host.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>host</CODE> - the remoteHost to which a packet should be sent.</DL>
</DD>
</DL>
<HR>

<A NAME="getRemotePort()"><!-- --></A><H3>
getRemotePort</H3>
<PRE>
public int <B>getRemotePort</B>()</PRE>
<DL>
<DD>gets the remotePort for this object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the remotePort that is previously set or 0.</DL>
</DD>
</DL>
<HR>

<A NAME="setRemotePort(int)"><!-- --></A><H3>
setRemotePort</H3>
<PRE>
public void <B>setRemotePort</B>(int&nbsp;port)</PRE>
<DL>
<DD>sets the remotePort.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>port</CODE> - the remotePort to which a packet should be sent.</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalPort()"><!-- --></A><H3>
getLocalPort</H3>
<PRE>
public int <B>getLocalPort</B>()</PRE>
<DL>
<DD>gets the localport at which the sasclient is started.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the localport at which the sasclient is started.</DL>
</DD>
</DL>
<HR>

<A NAME="setLocalPort(int)"><!-- --></A><H3>
setLocalPort</H3>
<PRE>
public void <B>setLocalPort</B>(int&nbsp;port)</PRE>
<DL>
<DD>sets the localport at which this sasclient should be started.
 This should be set before calling the open method of SnmpSession.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>port</CODE> - the port at which this sasclient should be started.</DL>
</DD>
</DL>
<HR>

<A NAME="getApplet()"><!-- --></A><H3>
getApplet</H3>
<PRE>
public java.applet.Applet <B>getApplet</B>()</PRE>
<DL>
<DD>gets the applet instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setApplet(java.applet.Applet)"><!-- --></A><H3>
setApplet</H3>
<PRE>
public void <B>setApplet</B>(java.applet.Applet&nbsp;app)</PRE>
<DL>
<DD>sets the applet instance for this protocoloptions.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>app</CODE> - the applet instance which is to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getProtocol()"><!-- --></A><H3>
getProtocol</H3>
<PRE>
public int <B>getProtocol</B>()</PRE>
<DL>
<DD>gets the protocol.
 This value is either SASClient.TCP_PROTOCOL or SASClient.HTTP_PROTOCOL.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the protocol that is set before.</DL>
</DD>
</DL>
<HR>

<A NAME="setProtocol(int)"><!-- --></A><H3>
setProtocol</H3>
<PRE>
public void <B>setProtocol</B>(int&nbsp;prot)</PRE>
<DL>
<DD>sets the protocol value. The value should be either 
 SASClient.TCP_PROTOCOL or SASClient.HTTP_PROTOCOL
 If the value is other than these values, the
 previous value is retained.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>prot</CODE> - the protocol to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getSASClient()"><!-- --></A><H3>
getSASClient</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html">SASClient</A> <B>getSASClient</B>()</PRE>
<DL>
<DD>gets the SASClient instance. This method will return a
 non-null sasclient instance only when this instance is used to 
 open the SnmpSession.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the sasclient instance which is created while opening
 the SnmpSession or null.</DL>
</DD>
</DL>
<HR>

<A NAME="setLocalAddresses(java.lang.String[])"><!-- --></A><H3>
setLocalAddresses</H3>
<PRE>
public void <B>setLocalAddresses</B>(java.lang.String[]&nbsp;addrs)</PRE>
<DL>
<DD>This method sets the list of local addresses for which
 the session should bind. The session will bind to the 
 first successfull address and will ignore the rest.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>addrs</CODE> - the list of addresses to which the session
 should try binding.</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalAddresses()"><!-- --></A><H3>
getLocalAddresses</H3>
<PRE>
public java.lang.String[] <B>getLocalAddresses</B>()</PRE>
<DL>
<DD>This method gets the local addresses for which the 
 session should bind with.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a string array containing a list of addresses
 for which the session has tried to bind.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SASClient.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityModelEntry.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SASProtocolOptions.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
