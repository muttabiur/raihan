<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Nov 07 19:59:02 IST 2006 -->
<TITLE>
SnmpEngineEntry (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpEngineEntry (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpCounter64.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpEngineEntry.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpEngineEntry</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.snmp2.SnmpEngineEntry</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpEngineEntry</B><DT>extends java.lang.Object<DT>implements java.io.Serializable</DL>

<P>
This class represents a particular SNMP entity and provides a unique 
  mapping between the internet address and port of an entity to the engineID.
  An SnmpEngineEntry is created for each IPaddress and port of the SNMP
  entity. The SNMP entity may act as an agent or as a manager entity. 
  This class maintains the host, port, time and  boots values for each
  SNMP entity in addition to supporting the discovery process. 
  The SnmpEngineTable maintains a table of SnmpEngineEntry Objects. Each
  SnmpEngineEntry Object created is added to the SnmpEngineTable.
  <p>
  For the entities acting like a manager, the attributes remoteHost,
  remotePort, engineID, engineBoots and engineTime, which are
  accessed by their respective get/set methods, represent the remote
  SNMP agent values. For the entities acting as an agent, the above
  attributes represent the entities own values.
  <p>
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><CODE>SnmpEngineTable</CODE></A>, 
<A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpEngineEntry">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#SnmpEngineEntry(java.lang.String)">SnmpEngineEntry</A></B>(java.lang.String&nbsp;engineName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpEngineEntry which represents a particular
  SnmpV3 entity for the specified engineName.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#SnmpEngineEntry(java.lang.String, int)">SnmpEngineEntry</A></B>(java.lang.String&nbsp;address,
                int&nbsp;port)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new SnmpEngineEntry which represents a particular
  SnmpV3 entity for the specified host and port.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#copy()">copy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#discoverEngineID(com.adventnet.snmp.snmp2.SnmpSession)">discoverEngineID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>This method doesn't throw any Exception and hence
  doesn't inform the user, in case of any error. 
  As of AdventNet SNMP API 4 SP2 ( Release 4.0.2 ),  replaced by 
  <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession)"><CODE>discoverSnmpEngineID(SnmpSession)</CODE></A></I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession)">discoverSnmpEngineID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This performs the standard Snmpv3 discovery process to learn the 
 engineID of the Snmp peer entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession, int, int)">discoverSnmpEngineID</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                     int&nbsp;timeout,
                     int&nbsp;retries)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This performs the standard Snmpv3 discovery process to learn the 
 engineID of the Snmp peer entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getEngineBoots()">getEngineBoots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the engine boots value of the corresponding SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getEngineID()">getEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the engineid of the coresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getEngineName()">getEngineName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the engineName of the corresponding Snmp entity
  when Independent transport provider is used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getEngineTime()">getEngineTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the engine time of the corresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getHashKey()">getHashKey</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the hash key for this entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getLatestReceived()">getLatestReceived</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getLocalTime()">getLocalTime</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getRemoteHost()">getRemoteHost</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the host name of the corresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#getRemotePort()">getRemotePort</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the port of the corresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#hashCode()">hashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the hashCode for the object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#sendDiscoverMsg(com.adventnet.snmp.snmp2.SnmpSession)">sendDiscoverMsg</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This performs the standard Snmpv3 discovery process to learn the 
  engineID of the Snmp peer entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#setEngineBoots(int)">setEngineBoots</A></B>(int&nbsp;boots)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the engineBoots value of the corresponding SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#setEngineID(byte[])">setEngineID</A></B>(byte[]&nbsp;id)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the engineID of the corresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#setEngineTime(int)">setEngineTime</A></B>(int&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the engine time of the corresponding Snmp entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#setLatestReceived(int)">setLatestReceived</A></B>(int&nbsp;lt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#setLocalTime(long)">setLocalTime</A></B>(long&nbsp;t)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SnmpEngineEntry(java.lang.String, int)"><!-- --></A><H3>
SnmpEngineEntry</H3>
<PRE>
public <B>SnmpEngineEntry</B>(java.lang.String&nbsp;address,
                       int&nbsp;port)</PRE>
<DL>
<DD>Constructs a new SnmpEngineEntry which represents a particular
  SnmpV3 entity for the specified host and port.
  In the context of a manager entity, the host and port represent the 
  Snmp peer's values, where as in the case of an agent entity, it 
  represents the entities own values.
<P>
<DT><B>Parameters:</B><DD><CODE>address</CODE> - The hostName for the new Snmp entity.<DD><CODE>port</CODE> - The port for the new Snmp entity.</DL>
<HR>

<A NAME="SnmpEngineEntry(java.lang.String)"><!-- --></A><H3>
SnmpEngineEntry</H3>
<PRE>
public <B>SnmpEngineEntry</B>(java.lang.String&nbsp;engineName)</PRE>
<DL>
<DD>Constructs a new SnmpEngineEntry which represents a particular
  SnmpV3 entity for the specified engineName.
  In the context of a manager entity, the engineName represents the 
  Snmp peer's values, where as in the case of an agent entity, it 
  represents the entities own values.
<P>
<DT><B>Parameters:</B><DD><CODE>engineName</CODE> - The stringified value of the engine name for the new 
  Snmp entity.</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getRemoteHost()"><!-- --></A><H3>
getRemoteHost</H3>
<PRE>
public java.lang.String <B>getRemoteHost</B>()</PRE>
<DL>
<DD>Returns the host name of the corresponding Snmp entity. 
  In the context of a manager entity, it returns the Snmp peer's 
  hostName, where as in the case of an agent entity, it returns the 
  entities own hostName.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The hostName of corresponding Snmp entity.</DL>
</DD>
</DL>
<HR>

<A NAME="getRemotePort()"><!-- --></A><H3>
getRemotePort</H3>
<PRE>
public int <B>getRemotePort</B>()</PRE>
<DL>
<DD>Returns the port of the corresponding Snmp entity. In the context
  of a manager entity, it returns the Snmp peer's port value, where as in 
  the case of an agent entity, it returns the entities own port value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineID()"><!-- --></A><H3>
getEngineID</H3>
<PRE>
public byte[] <B>getEngineID</B>()</PRE>
<DL>
<DD>Returns the engineid of the coresponding Snmp entity. 
  In the context of a manager entity, it returns the Snmp peer's 
  EngineID value, where as in the case of an agent entity, it returns the 
  entities own engineID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The engineID of this Snmp entity.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineID(byte[])"><!-- --></A><H3>
setEngineID</H3>
<PRE>
public void <B>setEngineID</B>(byte[]&nbsp;id)</PRE>
<DL>
<DD>Sets the engineID of the corresponding Snmp entity. 
  In the context of a manager entity, this represents the Snmp peer's 
  EngineID value, where as in the case of an agent entity, it represents
  the entities own engineID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>id</CODE> - The EngineID of the Snmp entity.</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineTime()"><!-- --></A><H3>
getEngineTime</H3>
<PRE>
public int <B>getEngineTime</B>()</PRE>
<DL>
<DD>Gets the engine time of the corresponding Snmp entity.
 This method returns the time which is the sum of the last recorded 
 value and the difference between the present time and the previously 
 recorded local time.In the context of a manager entity, this 
 represents the Snmp peer's engineTime, where as in the case of 
 an agent entity, it represents the entities own engineTime.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>This gives a time related to the last recorded value by 
 adding the local time diff between the present and the local time 
 when recorded.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineTime(int)"><!-- --></A><H3>
setEngineTime</H3>
<PRE>
public void <B>setEngineTime</B>(int&nbsp;time)</PRE>
<DL>
<DD>Sets the engine time of the corresponding Snmp entity. 
  In the context of a manager entity, this represents the Snmp peer's 
  engineTime, where as in the case of an agent entity, it represents
  the entities own engineTime.
  Also updates the corresponging localTime notion.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - The engine time to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getLatestReceived()"><!-- --></A><H3>
getLatestReceived</H3>
<PRE>
public int <B>getLatestReceived</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLatestReceived(int)"><!-- --></A><H3>
setLatestReceived</H3>
<PRE>
public void <B>setLatestReceived</B>(int&nbsp;lt)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLocalTime(long)"><!-- --></A><H3>
setLocalTime</H3>
<PRE>
public void <B>setLocalTime</B>(long&nbsp;t)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalTime()"><!-- --></A><H3>
getLocalTime</H3>
<PRE>
public long <B>getLocalTime</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineBoots()"><!-- --></A><H3>
getEngineBoots</H3>
<PRE>
public int <B>getEngineBoots</B>()</PRE>
<DL>
<DD>Returns the engine boots value of the corresponding SNMP entity.
  In the context of a manager entity, this represents the Snmp peer's 
  engineBoots, where as in the case of an agent entity, it represents
  the entities own engineBoots.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The engine boots of the Snmp entity.</DL>
</DD>
</DL>
<HR>

<A NAME="setEngineBoots(int)"><!-- --></A><H3>
setEngineBoots</H3>
<PRE>
public void <B>setEngineBoots</B>(int&nbsp;boots)</PRE>
<DL>
<DD>Sets the engineBoots value of the corresponding SNMP entity. 
  In the context of a manager entity, this represents the Snmp peer's 
  engineBoots, where as in the case of an agent entity, it represents
  the entities own engineBoots.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>boots</CODE> - The SnmpEngineBoots value to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="getHashKey()"><!-- --></A><H3>
getHashKey</H3>
<PRE>
public java.lang.Object <B>getHashKey</B>()</PRE>
<DL>
<DD>Retrieve the hash key for this entry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the hash key as a <code>String</code> Object.</DL>
</DD>
</DL>
<HR>

<A NAME="hashCode()"><!-- --></A><H3>
hashCode</H3>
<PRE>
public int <B>hashCode</B>()</PRE>
<DL>
<DD>Returns the hashCode for the object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>hashCode</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a hash code value for this object.</DL>
</DD>
</DL>
<HR>

<A NAME="sendDiscoverMsg(com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
sendDiscoverMsg</H3>
<PRE>
public int <B>sendDiscoverMsg</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</PRE>
<DL>
<DD>This performs the standard Snmpv3 discovery process to learn the 
  engineID of the Snmp peer entity. This is an asynchronous discovery.
  A noAuthNoPriv Snmpv3 message 
  with userName "initial" is sent to the host and port of this 
  SnmpEngineEntry instance. The discovery message will be sent over the
  SnmpSession, which is the input parameter. 
  <p>
  This performs an asynchronous discovery. This method sends the 
  discovery message and returns. The response to the discovery which is
  a report PDU is handled in the SnmpSession receiver thread  and the 
  engineID is populated there.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession over which the discovery message is sent.
<DT><B>Returns:</B><DD>The messageID of the request sent. Returns -1 if the session
  throws an exception while sending the request.</DL>
</DD>
</DL>
<HR>

<A NAME="discoverEngineID(com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
discoverEngineID</H3>
<PRE>
public void <B>discoverEngineID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>This method doesn't throw any Exception and hence
  doesn't inform the user, in case of any error. 
  As of AdventNet SNMP API 4 SP2 ( Release 4.0.2 ),  replaced by 
  <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html#discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession)"><CODE>discoverSnmpEngineID(SnmpSession)</CODE></A></I>
<P>
<DD>This performs the standard Snmpv3 discovery process to learn the 
  engineID of the Snmp peer entity. This is a synchronous discovery.
  A noAuthNoPriv Snmpv3 message 
  with userName "initial" is sent to the host and port of this 
  SnmpEngineEntry instance. The discovery message will be sent over the
  SnmpSession, which is the input parameter. 
  <p>
  This performs a synchronous discovery. This method sends the 
  discovery message and  returns only after receiving SNMP response, or 
  timing out. Once the response is received the engineID of this 
  SnmpEngineEntry object is populated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession over which the discovery message is sent.</DL>
</DD>
</DL>
<HR>

<A NAME="discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession)"><!-- --></A><H3>
discoverSnmpEngineID</H3>
<PRE>
public byte[] <B>discoverSnmpEngineID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session)
                            throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A>,
                                   java.sql.SQLException</PRE>
<DL>
<DD>This performs the standard Snmpv3 discovery process to learn the 
 engineID of the Snmp peer entity. This is a synchronous discovery.
 A noAuthNoPriv Snmpv3 message 
 with userName "initial" is sent to the host and port of this 
 SnmpEngineEntry instance. The discovery message will be sent over the
 SnmpSession, which is the input parameter. 
 <p>
 This performs a synchronous discovery. This method sends the 
 discovery message and  returns only after receiving SNMP response, or 
 timing out. Once the response is received the engineID of this 
 SnmpEngineEntry object is populated. If the discovery fails,
 then the SnmpEngineEntry object is removed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession over which the discovery message is sent.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - will be thrown when there is a discovery failure
<DD><CODE>java.sql.SQLException</CODE> - will be thrown in case of any database errors</DL>
</DD>
</DL>
<HR>

<A NAME="discoverSnmpEngineID(com.adventnet.snmp.snmp2.SnmpSession, int, int)"><!-- --></A><H3>
discoverSnmpEngineID</H3>
<PRE>
public byte[] <B>discoverSnmpEngineID</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpSession.html">SnmpSession</A>&nbsp;session,
                                   int&nbsp;timeout,
                                   int&nbsp;retries)
                            throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A>,
                                   java.sql.SQLException</PRE>
<DL>
<DD>This performs the standard Snmpv3 discovery process to learn the 
 engineID of the Snmp peer entity. This is a synchronous discovery.
 A noAuthNoPriv Snmpv3 message 
 with userName "initial" is sent to the host and port of this 
 SnmpEngineEntry instance. The discovery message will be sent over the
 SnmpSession, which is the input parameter. 
 <p>
 This performs a synchronous discovery. This method sends the 
 discovery message and  returns only after receiving SNMP response, or 
 timing out. Once the response is received the engineID of this 
 SnmpEngineEntry object is populated. If the discovery fails,
 then the SnmpEngineEntry object is removed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - The SnmpSession over which the discovery message is sent.<DD><CODE>timeout</CODE> - The timeout for this synchronous request.<DD><CODE>retries</CODE> - The retries for this request.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - will be thrown when there is a discovery failure
<DD><CODE>java.sql.SQLException</CODE> - will be thrown in case of any database errors</DL>
</DD>
</DL>
<HR>

<A NAME="copy()"><!-- --></A><H3>
copy</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineEntry.html">SnmpEngineEntry</A> <B>copy</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getEngineName()"><!-- --></A><H3>
getEngineName</H3>
<PRE>
public java.lang.String <B>getEngineName</B>()</PRE>
<DL>
<DD>Returns the engineName of the corresponding Snmp entity
  when Independent transport provider is used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpCounter64.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpEngineEntry.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
