<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:50 IST 2009 -->
<TITLE>
SnmpVar (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpVar (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpUnsignedInt.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpVar.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.snmp2</FONT>
<BR>
Class  SnmpVar</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.snmp2.SnmpVar</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpBitstring.html">SnmpBitstring</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpCounter64.html">SnmpCounter64</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpInt.html">SnmpInt</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpIpv6Address.html">SnmpIpv6Address</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpNull.html">SnmpNull</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpString.html">SnmpString</A>, <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpUnsignedInt.html">SnmpUnsignedInt</A></DD>
</DL>
<HR>
<DL>
<DT>public abstract class <B>SnmpVar</B><DT>extends java.lang.Object<DT>implements java.io.Serializable</DL>

<P>
This class provides the abstract methods to present a uniform interface for
 applications working with the SNMP variables and is the base class for 
 all SNMP Variable class(integer, IpAddress, etc). This and all its derived
 classes (called variable classes) are mainly concerned mainly with creating
 new SNMP variables, retrieve the value of the variable both as an object
 and in printable form.
 <p>
 Some explanation regarding the relationship between toValue and 
 getVarObject methods: 
 These methods do the same thing in all the SnmpVar classes except 
 SnmpIpAddress, SnmpNetworkAddress and SnmpOID. For these three and its
 derived classes, the getVarObject and toString do the same thing.
 e.g.
 <p>
 <table BORDER=3 CELLSPACING=3 CELLPADDING=3 >
 <tr>
 <td><center>S.No</center></td>
 <td><center>Classname</center></td>
 <td><center>toValue( )</center></td>
 <td><center>getVarObject( )</center></td>
 </tr>
 <tr>
 <td><center>1</center></td>
 <td>SnmpIpAddress</td><td>Returns IP address as String for byte[ ]
 <br>i.e 7F000001</td>
 <td>Returns IP Address in dotted notation
 <br>as a String object. i.e 127.0.0.1</td>
 </tr>
 <tr>
 <td><center>2</center></td>
 <td>SnmpNetworkAddress</td>
 <td>Same as SnmpIpAddress</td>
 <td>Same as SnmpIpAddress</td>
 </tr>
 <tr>
 <td><center>3</center></td>
 <td>SnmpOID</td>
 <td>Returns int[ ] of the OID value
 <br>i.e int [ ] = {1, 3, 6, 1, 2, 1, 1, 1}
 <br>for sysDescr in RFC1213-MIB</td>
 <td>Returns dotted OID as String object<br>i.e "1.3.6.1.2.1.1.1"
 <br>for sysDescr in RFC1213-MIB</td>
 </tr>
 </table>
 <p>
 For the rest of the SNMP variable classes namely SnmpBitString, 
 SnmpCounter64, SnmpNull, SnmpInt, SnmpUnsignedInt, SnmpTimeticks,  
 SnmpCounter, SnmpGauge, SnmpString, SnmpNsap and SnmpOpaque the toValue()
 and getVarObject() do the same thing.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.snmp2.SnmpVar">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->


<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#createVariable(java.lang.String, byte)">createVariable</A></B>(java.lang.String&nbsp;value,
               byte&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new  SnmpVar object with the specified type and value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getError()">getError</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used only by SnmpNULL at present to store the error value in
 case of snmpv2 response PDUs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getNumericValueAsString()">getNumericValueAsString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method returns the numeric value of the SNMP data types in 
 decimal ( base 10 ) format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getType()">getType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns type, defined by SnmpAPI types, e.g.SnmpAPI.INTEGER .</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getTypeString()">getTypeString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns type as a string, e.g.INTEGER, OCTET STRING based on the 
 type of SnmpVar object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#getVarObject()">getVarObject</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstract method which returns value of SNMP variable as an appropriate
 Object type, e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toBytes()">toBytes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstract method to return the value as raw bytes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstract method to convert to printable string used in printing 
 variables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toTagString()">toTagString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstract method to convert to printable string with object 
 type tag used in printing variables more descriptively, 
 e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html#toValue()">toValue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstract method which returns the value of SNMP variable as an appropriate
 Object type, e.g.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->


<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getType()"><!-- --></A><H3>
getType</H3>
<PRE>
public byte <B>getType</B>()</PRE>
<DL>
<DD>Returns type, defined by SnmpAPI types, e.g.SnmpAPI.INTEGER .
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SNMP type of the SnmpVar object. The type is one from
 the constants in SnmpAPI.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpAPI.html"><CODE>SnmpAPI</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTypeString()"><!-- --></A><H3>
getTypeString</H3>
<PRE>
public java.lang.String <B>getTypeString</B>()</PRE>
<DL>
<DD>Returns type as a string, e.g.INTEGER, OCTET STRING based on the 
 type of SnmpVar object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SNMP type of the SnmpVar object as a string.</DL>
</DD>
</DL>
<HR>

<A NAME="getError()"><!-- --></A><H3>
getError</H3>
<PRE>
public byte <B>getError</B>()</PRE>
<DL>
<DD>Used only by SnmpNULL at present to store the error value in
 case of snmpv2 response PDUs. Returns error Value, defined by 
 SnmpAPI definitions
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the error Value, defined by SnmpAPI definitions.</DL>
</DD>
</DL>
<HR>

<A NAME="getNumericValueAsString()"><!-- --></A><H3>
getNumericValueAsString</H3>
<PRE>
public java.lang.String <B>getNumericValueAsString</B>()</PRE>
<DL>
<DD>This method returns the numeric value of the SNMP data types in 
 decimal ( base 10 ) format. The various data-types that will
 return the numeric values are SnmpAPI.INTEGER, SNMPAPI.COUNTER, 
 SnmpAPI.GAUGE, SnmpAPI.UNSIGNED32, SnmpAPI.TIMETICKS and
 SnmpAPI.COUNTER64. All these datatypes will return their 
 respective numeric values in decimal format. The other 
 data types will throw an UnsupportedOperationException if this
 method is called.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The numeric value of the data type in decimal format.</DL>
</DD>
</DL>
<HR>

<A NAME="getVarObject()"><!-- --></A><H3>
getVarObject</H3>
<PRE>
public abstract java.lang.Object <B>getVarObject</B>()</PRE>
<DL>
<DD>Abstract method which returns value of SNMP variable as an appropriate
 Object type, e.g. Integer, String, etc.
 This method does the same thing as toValue() in all the SnmpVar 
 classes except SnmpIpAddress, SnmpNetworkAddress and SnmpOID.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The value of the SnmpVar object as an appropriate object</DL>
</DD>
</DL>
<HR>

<A NAME="toValue()"><!-- --></A><H3>
toValue</H3>
<PRE>
public abstract java.lang.Object <B>toValue</B>()</PRE>
<DL>
<DD>Abstract method which returns the value of SNMP variable as an appropriate
 Object type, e.g. Integer, String, etc.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The value of the SnmpVar object as an appropriate object</DL>
</DD>
</DL>
<HR>

<A NAME="toBytes()"><!-- --></A><H3>
toBytes</H3>
<PRE>
public abstract byte[] <B>toBytes</B>()</PRE>
<DL>
<DD>Abstract method to return the value as raw bytes.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the value of this SnmpVar object as raw bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public abstract java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Abstract method to convert to printable string used in printing 
 variables.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SnmpVar object as a printable string.</DL>
</DD>
</DL>
<HR>

<A NAME="toTagString()"><!-- --></A><H3>
toTagString</H3>
<PRE>
public abstract java.lang.String <B>toTagString</B>()</PRE>
<DL>
<DD>Abstract method to convert to printable string with object 
 type tag used in printing variables more descriptively, 
 e.g. INTEGER: value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SnmpVar object as a printable String more descriptively
 with type of the SnmpVar object.</DL>
</DD>
</DL>
<HR>

<A NAME="createVariable(java.lang.String, byte)"><!-- --></A><H3>
createVariable</H3>
<PRE>
public static <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVar.html">SnmpVar</A> <B>createVariable</B>(java.lang.String&nbsp;value,
                                     byte&nbsp;type)
                              throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Creates a new  SnmpVar object with the specified type and value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - The value for creating a new SnmpVar object.<DD><CODE>type</CODE> - The SNMP type (a constant from SnmpAPI) for creating a 
 new SnmpVar object.
<DT><B>Returns:</B><DD>the SnmpVar object created.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - is thrown when variable creation error occurs.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpUnsignedInt.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpVarBind.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpVar.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
