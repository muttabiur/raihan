<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Thu Jan 29 17:18:52 IST 2009 -->
<TITLE>
SnmpServer (AdventNet)
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="SnmpServer (AdventNet)";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpResultObject.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpServer.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.adventnet.snmp.beans</FONT>
<BR>
Class  SnmpServer</H2>
<PRE>
java.lang.Object
  |
  +--<B>com.adventnet.snmp.beans.SnmpServer</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpRequestServer.html">SnmpRequestServer</A>, <A HREF="../../../../com/adventnet/snmp/beans/SnmpTarget.html">SnmpTarget</A></DD>
</DL>
<HR>
<DL>
<DT>public class <B>SnmpServer</B><DT>extends java.lang.Object<DT>implements java.io.Serializable</DL>

<P>
This class maintains all the resources required for Snmp manager 
 applications and applets. The resources are like SnmpAPI, SnmpSession,
 MibOperations and etc.The beans component like SnmpTarget and 
 SnmpRequestServer extends this class. For every instance of these beans
 the SnmpServer uses the same resources.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html" TARGET="com.adventnet.snmp.beans.SnmpServer">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_NO_PRIV">AUTH_NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that authenticated message be sent to the peer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#AUTH_PRIV">AUTH_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that authentication and privacy are used in the
 communication with the peer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_3DES">CBC_3DES</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CBC_3DES PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CBC_DES">CBC_DES</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CBC_DES PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_128">CFB_AES_128</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES_128 PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_192">CFB_AES_192</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES_192 PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#CFB_AES_256">CFB_AES_256</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser CFB_AES_256 PrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#MD5_AUTH">MD5_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants USM Authentication</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH">NO_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants USM Authentication</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_AUTH_NO_PRIV">NO_AUTH_NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to specify that both authentication and privacy should not be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#NO_PRIV">NO_PRIV</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMPV3 usmUser NoPrivProtocol.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#oidList">oidList</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Object Identifiers will be stored in this array variable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SHA_AUTH">SHA_AUTH</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constants USM Authentication</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGET">SNMPGET</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGETBULK">SNMPGETBULK</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Get Bulk request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPGETNEXT">SNMPGETNEXT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP get next request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPINFORM">SNMPINFORM</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 INFORM request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPREPORT">SNMPREPORT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Report request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPRESPONSE">SNMPRESPONSE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP response request</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPSET">SNMPSET</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP set request request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPTRAP">SNMPTRAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP trap request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#SNMPV2TRAP">SNMPV2TRAP</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP V2 Trap request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION1">VERSION1</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 1.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION2C">VERSION2C</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 2C.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#VERSION3">VERSION3</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constant for SNMP Version 3.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->


<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#async_create_v3_tables()">async_create_v3_tables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to create new users and add them to the userTable in 
 USMUserTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#create_v3_tables()">create_v3_tables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to create new users and add them to the userTable in 
             USMUserTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#finalize()">finalize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This cleanses up the common connection if no one is using</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generate the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)">genEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
         <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A>&nbsp;server)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generate the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)">genTimeoutEvent</A></B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;generate the events to the listeners</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getCharacterEncoding()">getCharacterEncoding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the Character Encoding being used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getHostAddress(java.lang.String)">getHostAddress</A></B>(java.lang.String&nbsp;hostname)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To return the ip address as String for the given host name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getIgnoreSpecificControlCodes()">getIgnoreSpecificControlCodes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the value determining whether the new-line characters, 
 tabs and carriage returns are printed or their hex values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getLocalAddresses()">getLocalAddresses</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of localAddress bound on the session instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getMibPath()">getMibPath</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To get the search Path in which the loadMibModules() will search for the
  MIB modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getOverwriteCMI()">getOverwriteCMI</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Instead use isOverwriteCMI() method.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getPacketBufferSize()">getPacketBufferSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the Datagram Buffer Size used for receiving SNMP packets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecLevelForTimeSync()">getSecLevelForTimeSync</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the securitylevel that would be used when doing
 a V3 timeSync for a authPriv user.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityProvider()">getSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the security provider.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSecurityTable(int)">getSecurityTable</A></B>(int&nbsp;secModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the SecurityModelTable as an object for a given 
 security model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSerializedMibFileName()">getSerializedMibFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the name of the Serialized Mib file</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.text.SimpleDateFormat</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()">getSimpleDateFormat</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SimpleDateFormat for this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineID()">getSnmpEngineID</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the SnmpEngineID of this SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html">SnmpEngineTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSnmpEngineTable()">getSnmpEngineTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns the SnmpEnginetable which contains the information about 
 v3 engine configured to this bean</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeoutInMilliSec()">getTimeoutInMilliSec</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the timeout value in milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getTimeToWait()">getTimeToWait</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the inter-packet delay time set on this SnmpSession object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html">USMUserTable</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getUSMTable()">getUSMTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns the USMUserTable which contains the informations about v3 Users</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3ConfigTable()">getV3ConfigTable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the table name that was configured for V3.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getV3MsgMaxSize()">getV3MsgMaxSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the maximum size of the Snmp3Message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">initJdbcParams</A></B>(java.lang.String&nbsp;driverName,
               java.lang.String&nbsp;URL,
               java.lang.String&nbsp;userName,
               java.lang.String&nbsp;passWord)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If you need to use a database support, this method should be
 invoked to initialize the Jdbc Parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initSecurityProvider()">initSecurityProvider</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method initiates the SecurityProvider by reading from the
 file securityProvider.confg .</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isBroadcastFeatureEnable()">isBroadcastFeatureEnable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The method returns whether the API has the broadcast feature
 enabled or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromCompiledMibs()">isLoadFromCompiledMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the mib will be loaded from CompiledMib files or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadFromSerializedMibs()">isLoadFromSerializedMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the mib will be loaded from  Serialized Mib files or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isLoadMibsFromDatabase()">isLoadMibsFromDatabase</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the mib will be loaded from database or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteCMI()">isOverwriteCMI</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the status of whether overwrite compiled mibs option is set.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isOverwriteMibsInDatabase()">isOverwriteMibsInDatabase</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether the mibs in database will be overwritten or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isReadDesc()">isReadDesc</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if reading descriptions from compiled modules is enabled</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSendPDUByGroup()">isSendPDUByGroup</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returns the state whether the pdus will be grouped and 
 sent as single PDU.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSerializeMibs()">isSerializeMibs</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether the mib file will be serialized or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSetAutoInformResponse()">isSetAutoInformResponse</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;High level API method to check if the automatic response flag for the 
 Inform Request is set.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isSupportedSecurityModel(int)">isSupportedSecurityModel</A></B>(int&nbsp;secModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies if a particular security model is supported or not.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isV3DatabaseFlag()">isV3DatabaseFlag</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether V3 database flag is set or not</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#isValidateUser()">isValidateUser</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To check whether the validating user is enabled for v3 case</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#manage_v3_tables()">manage_v3_tables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to create new users and add them to userTable in
	USMUserTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#managing_v3_tables()">managing_v3_tables</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method to create new users and add them to userTable in
	USMUserTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#releaseResources()">releaseResources</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTarget and SnmpRequestServer bean
 instances, this method can be used to immediately release the resources.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setAutoInformResponse(boolean)">setAutoInformResponse</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;High-level API method to set the automatic response flag for the Inform 
 Request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)">setBroadcastFeatureEnable</A></B>(boolean&nbsp;bool)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The method can be used to enable/disable the broadcast feature
 available in the API.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setCharacterEncoding(java.lang.String)">setCharacterEncoding</A></B>(java.lang.String&nbsp;enc)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the Character Encoding to be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setErrorFlagEnable(boolean)">setErrorFlagEnable</A></B>(boolean&nbsp;errflag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setIgnoreSpecificControlCodes(boolean)">setIgnoreSpecificControlCodes</A></B>(boolean&nbsp;specConCode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the value determining whether the new-line characters, 
 tabs and carriage returns are printed or their hex values.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromCompiledMibs(boolean)">setLoadFromCompiledMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to load mib from compiled MIBs.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadFromSerializedMibs(boolean)">setLoadFromSerializedMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method defines whether to load MIB from serialized file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setLoadMibsFromDatabase(boolean)">setLoadMibsFromDatabase</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to load mib from DataBase.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibOperations(com.adventnet.snmp.mibs.MibOperations)">setMibOperations</A></B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mibops)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the MibOperations.This can be used when the API user wants the
 MibBrowser to use the localinstance of MibOperations instead of
 the Static MibOperations shared by all the other beans.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setMibPath(java.lang.String)">setMibPath</A></B>(java.lang.String&nbsp;path)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To set the search Path in which the loadMibModules() will search for the
  MIB modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteCMI(boolean)">setOverwriteCMI</A></B>(boolean&nbsp;overWrite)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to overwrite the existing compiled MIB files.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setOverwriteMibsInDatabase(boolean)">setOverwriteMibsInDatabase</A></B>(boolean&nbsp;overWrite)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to overwrite the MIB in the DataBase.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setPacketBufferSize(int)">setPacketBufferSize</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Datagram Buffer Size used for receiving SNMP packets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReadDesc(boolean)">setReadDesc</A></B>(boolean&nbsp;readFlag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the flag to read descriptions from compiled mib modules.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setReceiveBufferSize(int)">setReceiveBufferSize</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the buffer size of this SnmpServer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSecLevelForTimeSync(byte)">setSecLevelForTimeSync</A></B>(byte&nbsp;secLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the securityLevel to use when doing
 a V3 timeSync for a authPriv user.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSendPDUByGroup(boolean)">setSendPDUByGroup</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set the state whether the PDUs should be grouped and send all PDUs
 as single PDU.After setting it to true this instance will be added 
 to vector.This should be set to false, if this instance is no longer used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializedMibFileName(java.lang.String)">setSerializedMibFileName</A></B>(java.lang.String&nbsp;serFileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method defines the name of the Serialized MIB File.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSerializeMibs(boolean)">setSerializeMibs</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines whether to serialize the MibModule.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)">setSimpleDateFormat</A></B>(java.text.SimpleDateFormat&nbsp;sdf)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SimpleDateFormat for this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSnmpEngineID(byte[])">setSnmpEngineID</A></B>(byte[]&nbsp;engineID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SnmpEngineID for this SNMP entity.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeoutInMilliSec(int)">setTimeoutInMilliSec</A></B>(int&nbsp;time)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the timeout value which should be given in milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setTimeToWait(int)">setTimeToWait</A></B>(int&nbsp;waittime)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the inter-packet delay time.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3ConfigTable(java.lang.String)">setV3ConfigTable</A></B>(java.lang.String&nbsp;tableName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the configured tableName specified in the case of V3Database.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3DatabaseFlag(boolean)">setV3DatabaseFlag</A></B>(boolean&nbsp;v3Flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If you need to use database support for V3 , set this flag to true.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setV3MsgMaxSize(int)">setV3MsgMaxSize</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the maximum size of Snmp3Message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#validateUser(boolean)">validateUser</A></B>(boolean&nbsp;validate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Can be used to set whether the NO_AUTH_NO_PRIV user should be authenticated
 and, to validate the privPassword in AUTHPRIV case</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="oidList"><!-- --></A><H3>
oidList</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpOID.html">SnmpOID</A>[] <B>oidList</B></PRE>
<DL>
<DD>The Object Identifiers will be stored in this array variable.
 This will be used for PDU construction.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="SNMPGET"><!-- --></A><H3>
SNMPGET</H3>
<PRE>
public static final byte <B>SNMPGET</B></PRE>
<DL>
<DD>Constant for SNMP get request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPGET">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPGETNEXT"><!-- --></A><H3>
SNMPGETNEXT</H3>
<PRE>
public static final byte <B>SNMPGETNEXT</B></PRE>
<DL>
<DD>Constant for SNMP get next request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPGETNEXT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPRESPONSE"><!-- --></A><H3>
SNMPRESPONSE</H3>
<PRE>
public static final byte <B>SNMPRESPONSE</B></PRE>
<DL>
<DD>Constant for SNMP response request
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPRESPONSE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPSET"><!-- --></A><H3>
SNMPSET</H3>
<PRE>
public static final byte <B>SNMPSET</B></PRE>
<DL>
<DD>Constant for SNMP set request request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPSET">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPTRAP"><!-- --></A><H3>
SNMPTRAP</H3>
<PRE>
public static final byte <B>SNMPTRAP</B></PRE>
<DL>
<DD>Constant for SNMP trap request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPTRAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPGETBULK"><!-- --></A><H3>
SNMPGETBULK</H3>
<PRE>
public static final byte <B>SNMPGETBULK</B></PRE>
<DL>
<DD>Constant for SNMP V2 Get Bulk request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPGETBULK">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPINFORM"><!-- --></A><H3>
SNMPINFORM</H3>
<PRE>
public static final byte <B>SNMPINFORM</B></PRE>
<DL>
<DD>Constant for SNMP V2 INFORM request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPINFORM">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPV2TRAP"><!-- --></A><H3>
SNMPV2TRAP</H3>
<PRE>
public static final byte <B>SNMPV2TRAP</B></PRE>
<DL>
<DD>Constant for SNMP V2 Trap request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPV2TRAP">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SNMPREPORT"><!-- --></A><H3>
SNMPREPORT</H3>
<PRE>
public static final byte <B>SNMPREPORT</B></PRE>
<DL>
<DD>Constant for SNMP V2 Report request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SNMPREPORT">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION1"><!-- --></A><H3>
VERSION1</H3>
<PRE>
public static final int <B>VERSION1</B></PRE>
<DL>
<DD>Constant for SNMP Version 1.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.VERSION1">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION2C"><!-- --></A><H3>
VERSION2C</H3>
<PRE>
public static final int <B>VERSION2C</B></PRE>
<DL>
<DD>Constant for SNMP Version 2C.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.VERSION2C">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="VERSION3"><!-- --></A><H3>
VERSION3</H3>
<PRE>
public static final int <B>VERSION3</B></PRE>
<DL>
<DD>Constant for SNMP Version 3.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.VERSION3">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_AUTH"><!-- --></A><H3>
NO_AUTH</H3>
<PRE>
public static final int <B>NO_AUTH</B></PRE>
<DL>
<DD>Constants USM Authentication
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.NO_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="MD5_AUTH"><!-- --></A><H3>
MD5_AUTH</H3>
<PRE>
public static final int <B>MD5_AUTH</B></PRE>
<DL>
<DD>Constants USM Authentication
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.MD5_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="SHA_AUTH"><!-- --></A><H3>
SHA_AUTH</H3>
<PRE>
public static final int <B>SHA_AUTH</B></PRE>
<DL>
<DD>Constants USM Authentication
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.SHA_AUTH">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_PRIV"><!-- --></A><H3>
NO_PRIV</H3>
<PRE>
public static final int <B>NO_PRIV</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser NoPrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CBC_DES"><!-- --></A><H3>
CBC_DES</H3>
<PRE>
public static final int <B>CBC_DES</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CBC_DES PrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.CBC_DES">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_128"><!-- --></A><H3>
CFB_AES_128</H3>
<PRE>
public static final int <B>CFB_AES_128</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES_128 PrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.CFB_AES_128">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_192"><!-- --></A><H3>
CFB_AES_192</H3>
<PRE>
public static final int <B>CFB_AES_192</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES_192 PrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP5 ( Release 4.0.5 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.CFB_AES_192">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CFB_AES_256"><!-- --></A><H3>
CFB_AES_256</H3>
<PRE>
public static final int <B>CFB_AES_256</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CFB_AES_256 PrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP5 ( Release 4.0.5 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.CFB_AES_256">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="CBC_3DES"><!-- --></A><H3>
CBC_3DES</H3>
<PRE>
public static final int <B>CBC_3DES</B></PRE>
<DL>
<DD>Constant for SNMPV3 usmUser CBC_3DES PrivProtocol.
<P>
<DL>
<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP5 ( Release 4.0.5 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.CBC_3DES">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="NO_AUTH_NO_PRIV"><!-- --></A><H3>
NO_AUTH_NO_PRIV</H3>
<PRE>
public static final byte <B>NO_AUTH_NO_PRIV</B></PRE>
<DL>
<DD>Used to specify that both authentication and privacy should not be used.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.NO_AUTH_NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="AUTH_NO_PRIV"><!-- --></A><H3>
AUTH_NO_PRIV</H3>
<PRE>
public static final byte <B>AUTH_NO_PRIV</B></PRE>
<DL>
<DD>Used to specify that authenticated message be sent to the peer.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.AUTH_NO_PRIV">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="AUTH_PRIV"><!-- --></A><H3>
AUTH_PRIV</H3>
<PRE>
public static final byte <B>AUTH_PRIV</B></PRE>
<DL>
<DD>Used to specify that authentication and privacy are used in the
 communication with the peer.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#com.adventnet.snmp.beans.SnmpServer.AUTH_PRIV">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->


<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getHostAddress(java.lang.String)"><!-- --></A><H3>
getHostAddress</H3>
<PRE>
public java.lang.String <B>getHostAddress</B>(java.lang.String&nbsp;hostname)</PRE>
<DL>
<DD>To return the ip address as String for the given host name. 
 e.g., returns 192.234.123.56 for littleangel.com
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>hostname</CODE> - the host whose ipaddress needs to be looked up
<DT><B>Returns:</B><DD>the host address, null if Host Not Found</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityProvider()"><!-- --></A><H3>
getSecurityProvider</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SecurityProvider.html">SecurityProvider</A> <B>getSecurityProvider</B>()</PRE>
<DL>
<DD>Gets the security provider.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Security Provider.</DL>
</DD>
</DL>
<HR>

<A NAME="isSendPDUByGroup()"><!-- --></A><H3>
isSendPDUByGroup</H3>
<PRE>
public boolean <B>isSendPDUByGroup</B>()</PRE>
<DL>
<DD>returns the state whether the pdus will be grouped and 
 sent as single PDU.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the pdus will be sent as single pdu by grouping.</DL>
</DD>
</DL>
<HR>

<A NAME="setSendPDUByGroup(boolean)"><!-- --></A><H3>
setSendPDUByGroup</H3>
<PRE>
public void <B>setSendPDUByGroup</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>set the state whether the PDUs should be grouped and send all PDUs
 as single PDU.After setting it to true this instance will be added 
 to vector.This should be set to false, if this instance is no longer used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPacketBufferSize()"><!-- --></A><H3>
getPacketBufferSize</H3>
<PRE>
public int <B>getPacketBufferSize</B>()</PRE>
<DL>
<DD>Gets the Datagram Buffer Size used for receiving SNMP packets. 
 The default value is 64K.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the datagram packet buffer size in bytes.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP3 ( Release 4.0.3 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPacketBufferSize(int)"><!-- --></A><H3>
setPacketBufferSize</H3>
<PRE>
public void <B>setPacketBufferSize</B>(int&nbsp;size)</PRE>
<DL>
<DD>Sets the Datagram Buffer Size used for receiving SNMP packets.
 Use this method only in case you would
 need to have a buffer size in excess of 8000 bytes
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - The size of the datagram packet buffer to be used in bytes.
  An initial allocation of 64K is made by default.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP3 ( Release 4.0.3 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="genTimeoutEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genTimeoutEvent</H3>
<PRE>
protected void <B>genTimeoutEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>generate the events to the listeners
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="genEvent(com.adventnet.snmp.snmp2.SnmpPDU, com.adventnet.snmp.beans.SnmpServer)"><!-- --></A><H3>
genEvent</H3>
<PRE>
protected void <B>genEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu,
                        <A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html">SnmpServer</A>&nbsp;server)</PRE>
<DL>
<DD>generate the events to the listeners
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSimpleDateFormat(java.text.SimpleDateFormat)"><!-- --></A><H3>
setSimpleDateFormat</H3>
<PRE>
public void <B>setSimpleDateFormat</B>(java.text.SimpleDateFormat&nbsp;sdf)</PRE>
<DL>
<DD>Sets the SimpleDateFormat for this class. When the
 debug is on, the time stamp will be printed along with
 the packet dumps. The format of this timestamp can be
 changed using this method.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#getSimpleDateFormat()"><CODE>getSimpleDateFormat()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSimpleDateFormat()"><!-- --></A><H3>
getSimpleDateFormat</H3>
<PRE>
public java.text.SimpleDateFormat <B>getSimpleDateFormat</B>()</PRE>
<DL>
<DD>Gets the SimpleDateFormat for this class.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SimpleDateFormat used by this class. This method will
 return a non-null value, only when
 <br>
 1. The SimpleDateFormat is previously set using setSimpleDateFormat(SimpleDateFormat) OR
 <br>
 2. When the debug mode is on and atleast one packet has been printed.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setSimpleDateFormat(java.text.SimpleDateFormat)"><CODE>setSimpleDateFormat(SimpleDateFormat)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getUSMTable()"><!-- --></A><H3>
getUSMTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html">USMUserTable</A> <B>getUSMTable</B>()</PRE>
<DL>
<DD>returns the USMUserTable which contains the informations about v3 Users
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/usm/USMUserTable.html"><CODE>USMUserTable</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineTable()"><!-- --></A><H3>
getSnmpEngineTable</H3>
<PRE>
public <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html">SnmpEngineTable</A> <B>getSnmpEngineTable</B>()</PRE>
<DL>
<DD>returns the SnmpEnginetable which contains the information about 
 v3 engine configured to this bean
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpEngineTable.html"><CODE>SnmpEngineTable</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSnmpEngineID(byte[])"><!-- --></A><H3>
setSnmpEngineID</H3>
<PRE>
public void <B>setSnmpEngineID</B>(byte[]&nbsp;engineID)</PRE>
<DL>
<DD>Sets the SnmpEngineID for this SNMP entity.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>engineID</CODE> - The SnmpEngineID to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getSnmpEngineID()"><!-- --></A><H3>
getSnmpEngineID</H3>
<PRE>
public byte[] <B>getSnmpEngineID</B>()</PRE>
<DL>
<DD>Gets the SnmpEngineID of this SNMP entity.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SnmpEngineID of this entity.</DL>
</DD>
</DL>
<HR>

<A NAME="genEvent(com.adventnet.snmp.snmp2.SnmpPDU)"><!-- --></A><H3>
genEvent</H3>
<PRE>
protected void <B>genEvent</B>(<A HREF="../../../../com/adventnet/snmp/snmp2/SnmpPDU.html">SnmpPDU</A>&nbsp;pdu)</PRE>
<DL>
<DD>generate the events to the listeners
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
initJdbcParams</H3>
<PRE>
public void <B>initJdbcParams</B>(java.lang.String&nbsp;driverName,
                           java.lang.String&nbsp;URL,
                           java.lang.String&nbsp;userName,
                           java.lang.String&nbsp;passWord)
                    throws java.sql.SQLException,
                           java.lang.ClassNotFoundException</PRE>
<DL>
<DD>If you need to use a database support, this method should be
 invoked to initialize the Jdbc Parameters.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>driverName</CODE> - Name of the DataBase driver.<DD><CODE>URL</CODE> - URL pointing to the DataBase file name<DD><CODE>userName</CODE> - userName<DD><CODE>passWord</CODE> - password
<DD><CODE>java.sql.SQLException</CODE>
<DD><CODE>java.lang.ClassNotFoundException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="isV3DatabaseFlag()"><!-- --></A><H3>
isV3DatabaseFlag</H3>
<PRE>
public boolean <B>isV3DatabaseFlag</B>()</PRE>
<DL>
<DD>To check whether V3 database flag is set or not
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>boolean v3 database flag</DL>
</DD>
</DL>
<HR>

<A NAME="setV3DatabaseFlag(boolean)"><!-- --></A><H3>
setV3DatabaseFlag</H3>
<PRE>
public void <B>setV3DatabaseFlag</B>(boolean&nbsp;v3Flag)</PRE>
<DL>
<DD>If you need to use database support for V3 , set this flag to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>v3Flag</CODE> - flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setV3ConfigTable(java.lang.String)"><!-- --></A><H3>
setV3ConfigTable</H3>
<PRE>
public void <B>setV3ConfigTable</B>(java.lang.String&nbsp;tableName)</PRE>
<DL>
<DD>Sets the configured tableName specified in the case of V3Database.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableName</CODE> - the name of the table name to be configured.</DL>
</DD>
</DL>
<HR>

<A NAME="getV3ConfigTable()"><!-- --></A><H3>
getV3ConfigTable</H3>
<PRE>
public java.lang.String <B>getV3ConfigTable</B>()</PRE>
<DL>
<DD>Gets the table name that was configured for V3.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="releaseResources()"><!-- --></A><H3>
releaseResources</H3>
<PRE>
public void <B>releaseResources</B>()</PRE>
<DL>
<DD>Though the resources will be cleaned up by the garbage collector, if the
 application is no more using the SnmpTarget and SnmpRequestServer bean
 instances, this method can be used to immediately release the resources.
 <b>
 Close the session and api if number of targets sharing it becomes zero.
 Otherwise decrement the targets count for that session and api.</b>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="finalize()"><!-- --></A><H3>
finalize</H3>
<PRE>
protected void <B>finalize</B>()
                 throws java.lang.Throwable</PRE>
<DL>
<DD>This cleanses up the common connection if no one is using
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>finalize</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Throwable</CODE> - in case of finalization of errors</DL>
</DD>
</DL>
<HR>

<A NAME="getSecLevelForTimeSync()"><!-- --></A><H3>
getSecLevelForTimeSync</H3>
<PRE>
public byte <B>getSecLevelForTimeSync</B>()</PRE>
<DL>
<DD>Returns the securitylevel that would be used when doing
 a V3 timeSync for a authPriv user. Can be AUTH_PRIV(3)
 or AUTH_NO_PRIV(1).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The securityLevel.</DL>
</DD>
</DL>
<HR>

<A NAME="setSecLevelForTimeSync(byte)"><!-- --></A><H3>
setSecLevelForTimeSync</H3>
<PRE>
public void <B>setSecLevelForTimeSync</B>(byte&nbsp;secLevel)</PRE>
<DL>
<DD>Sets the securityLevel to use when doing
 a V3 timeSync for a authPriv user. Can be either AUTH_PRIV(3)
 or AUTH_NO_PRIV(1).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>secLevel</CODE> - The securityLevel to be set on this SnmpServer instance.</DL>
</DD>
</DL>
<HR>

<A NAME="async_create_v3_tables()"><!-- --></A><H3>
async_create_v3_tables</H3>
<PRE>
public void <B>async_create_v3_tables</B>()</PRE>
<DL>
<DD>Method to create new users and add them to the userTable in 
 USMUserTable. It performs a discovery and timeSync (if required)
 asynchronously. Returns immediately after sending the requests.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="validateUser(boolean)"><!-- --></A><H3>
validateUser</H3>
<PRE>
public void <B>validateUser</B>(boolean&nbsp;validate)</PRE>
<DL>
<DD>Can be used to set whether the NO_AUTH_NO_PRIV user should be authenticated
 and, to validate the privPassword in AUTHPRIV case
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>validate</CODE> - The boolean value. If this value is set to true,
 and if this method is called for an 
 <ul>
 <li>	NO_AUTH_NO_PRIV user, then a get request will be sent to  know 
 if the user exits.
 <li> AUTH_PRIV user, then a get request will be sent to know if the 
 priv password is correct.
 </ul></DL>
</DD>
</DL>
<HR>

<A NAME="isValidateUser()"><!-- --></A><H3>
isValidateUser</H3>
<PRE>
public boolean <B>isValidateUser</B>()</PRE>
<DL>
<DD>To check whether the validating user is enabled for v3 case
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="create_v3_tables()"><!-- --></A><H3>
create_v3_tables</H3>
<PRE>
public int <B>create_v3_tables</B>()</PRE>
<DL>
<DD>Method to create new users and add them to the userTable in 
             USMUserTable. Returns 1 if userTable is successfully created, 
                 negative value otherwise.
                 The following error codes can be set ErrorCodes DISCOVERY_FAILED, TIME_SYNC_FAILED,
                 WRONG_DIGEST_ERR,DECRYPT_ERROR_ERR, UKNOWN_ENGINEID_ERR,UKNOWN_USERNAMES_ERR,UNSUPP_SECLEVEL_ERR,
                 WRONG_PRIVPASSWORD.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>0 if the version is other than v3.
                            1 if userTable is created Successfully.
                           -1 if discovery fails.
                           -2 if TimeSync fails.
                           -3 if User is already cretaed for that host and port.<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<CODE>#getErrorCode()</CODE>, 
<CODE>#getErrorString()</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="manage_v3_tables()"><!-- --></A><H3>
manage_v3_tables</H3>
<PRE>
public void <B>manage_v3_tables</B>()</PRE>
<DL>
<DD>Method to create new users and add them to userTable in
	USMUserTable. If the v3 parameters specified are already
	present in the userTable, it modifies the entry. However the 
	UserName cannot be modified.
   The following error codes can be set ErrorCodes DISCOVERY_FAILED, TIME_SYNC_FAILED
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<CODE>#getErrorCode()</CODE>, 
<CODE>#geterrorstring()</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="managing_v3_tables()"><!-- --></A><H3>
managing_v3_tables</H3>
<PRE>
public void <B>managing_v3_tables</B>()
                        throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>Method to create new users and add them to userTable in
	USMUserTable. If the v3 parameters specified are already
	present in the userTable, it modifies the entry. However the 
	UserName cannot be modified.
   The following error codes can be set ErrorCodes DISCOVERY_FAILED, TIME_SYNC_FAILED
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/ErrorMessages.html"><CODE>ErrorMessages</CODE></A>, 
<CODE>#getErrorCode()</CODE>, 
<CODE>#getErrorString()</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setCharacterEncoding(java.lang.String)"><!-- --></A><H3>
setCharacterEncoding</H3>
<PRE>
public void <B>setCharacterEncoding</B>(java.lang.String&nbsp;enc)</PRE>
<DL>
<DD>Set the Character Encoding to be used. The encoding specified will
 be used internally to convert String <--> byte[]. The Default value 
 is ISO8859_1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enc</CODE> - The name of a character encoding. All the string encoding 
 will be done base on this encoding.</DL>
</DD>
</DL>
<HR>

<A NAME="getCharacterEncoding()"><!-- --></A><H3>
getCharacterEncoding</H3>
<PRE>
public java.lang.String <B>getCharacterEncoding</B>()</PRE>
<DL>
<DD>Get the Character Encoding being used. This encoding scheme will
 be used internally to convert String <--> byte[]. The Default value 
 is ISO8859_1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>enc The character encoding used.</DL>
</DD>
</DL>
<HR>

<A NAME="setSerializeMibs(boolean)"><!-- --></A><H3>
setSerializeMibs</H3>
<PRE>
public void <B>setSerializeMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to serialize the MibModule.
    This flag should be set before loading the MIBs. If this is set 
    to true it will serialize the loaded MIBs. For ex: if RMON2-MIB is 
    loaded, it will serialize this module along with the Imported Modules
    viz ., RFC1271-MIB,RFC1213-MIB,TOKEN-RING-RMON and saves it in a 
    single file.The name of the serialized file can be set using the
    setSerializedMibFileName() method. In case,if serialized file name
    is not set,it will save the serialized file with the MIB file name
    along with ".ser" extention.Here, it will save it as RMON2-MIB.ser.
    Serialization is not supported in applets.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isSerializeMibs()"><!-- --></A><H3>
isSerializeMibs</H3>
<PRE>
public boolean <B>isSerializeMibs</B>()</PRE>
<DL>
<DD>Returns whether the mib file will be serialized or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadFromSerializedMibs(boolean)"><!-- --></A><H3>
setLoadFromSerializedMibs</H3>
<PRE>
public void <B>setLoadFromSerializedMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Method defines whether to load MIB from serialized file.
            This flag should be set before loading the MIBs.
            If both serializeMibs and loadFromSerializedMibs are set to true,
            it will just try to load the MIB as a serialized file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadFromCompiledMibs(boolean)"><!-- --></A><H3>
setLoadFromCompiledMibs</H3>
<PRE>
public void <B>setLoadFromCompiledMibs</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to load mib from compiled MIBs. This flag should be set before loading 
 the MIBs (By default it is set to false). If this flag is set to true, it will load from
 compiled file( i.e; .cmi and .cds files). For ex: RMON2-MIB is loaded, it will automatically
 load RMON2-MIB.cmi if it exists. otherwise it creates compiled files by parsing and then 
 loads from it. If this flag is set to false, the mib is loaded without creating .cmi and 
 .cds files. This is recommended in case of applets where you have security restrictions 
 for file creation. This is slightly slower than loading from precompiled mibs. In Applets,
 precompiled mibs can be loaded but it cannot create/write compiled files.
 <p>
 If both loadFromSerializedMibs and loadFromCompiledMibs is set to true,
 it will just try to load the MIB as a serialized file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setLoadMibsFromDatabase(boolean)"><!-- --></A><H3>
setLoadMibsFromDatabase</H3>
<PRE>
public void <B>setLoadMibsFromDatabase</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>Defines whether to load mib from DataBase.
 The Jdbc Parameters should be set, using the initJdbcParams(), before calling this method.  
 This flag should be set before loading the MIBs (By default it is set to false).
 If this flag is set to true, it will parse the mibs,and store it in the database.
 For ex: RMON2-MIB is loaded, it will parse the mib and store it in the database.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - boolean<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><CODE>initJdbcParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setOverwriteMibsInDatabase(boolean)"><!-- --></A><H3>
setOverwriteMibsInDatabase</H3>
<PRE>
public void <B>setOverwriteMibsInDatabase</B>(boolean&nbsp;overWrite)</PRE>
<DL>
<DD>Defines whether to overwrite the MIB in the DataBase.
  NOTE: This applies only when the setLoadFromDataBase is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setOverwriteCMI(boolean)"><!-- --></A><H3>
setOverwriteCMI</H3>
<PRE>
public void <B>setOverwriteCMI</B>(boolean&nbsp;overWrite)</PRE>
<DL>
<DD>Defines whether to overwrite the existing compiled MIB files.
  NOTE: This applies only when the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getOverwriteCMI()"><!-- --></A><H3>
getOverwriteCMI</H3>
<PRE>
public boolean <B>getOverwriteCMI</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Instead use isOverwriteCMI() method.</I>
<P>
<DD>Gets the overwrite compiled mibs boolean.
  NOTE: This applies only when the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isOverwriteCMI()"><!-- --></A><H3>
isOverwriteCMI</H3>
<PRE>
public boolean <B>isOverwriteCMI</B>()</PRE>
<DL>
<DD>Returns the status of whether overwrite compiled mibs option is set.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the overwrite compiled mibs is set to true, otherwise false.
  NOTE: This applies only when the setLoadFromCompiledMibs is set to true</DL>
</DD>
</DL>
<HR>

<A NAME="isOverwriteMibsInDatabase()"><!-- --></A><H3>
isOverwriteMibsInDatabase</H3>
<PRE>
public boolean <B>isOverwriteMibsInDatabase</B>()</PRE>
<DL>
<DD>Returns whether the mibs in database will be overwritten or not.
  NOTE: This applies only when the setLoadFromDataBase is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setReadDesc(boolean)"><!-- --></A><H3>
setReadDesc</H3>
<PRE>
public void <B>setReadDesc</B>(boolean&nbsp;readFlag)</PRE>
<DL>
<DD>Sets the flag to read descriptions from compiled mib modules. 
  Default is true. Set it to false if you don't need the descriptions. 
  NOTE: This applies only when the setLoadFromCompiledMibs is set to true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isReadDesc()"><!-- --></A><H3>
isReadDesc</H3>
<PRE>
public boolean <B>isReadDesc</B>()</PRE>
<DL>
<DD>Returns true if reading descriptions from compiled modules is enabled
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadFromSerializedMibs()"><!-- --></A><H3>
isLoadFromSerializedMibs</H3>
<PRE>
public boolean <B>isLoadFromSerializedMibs</B>()</PRE>
<DL>
<DD>To check whether the mib will be loaded from  Serialized Mib files or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the mib will be loaded from serialized mib files and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadFromCompiledMibs()"><!-- --></A><H3>
isLoadFromCompiledMibs</H3>
<PRE>
public boolean <B>isLoadFromCompiledMibs</B>()</PRE>
<DL>
<DD>To check whether the mib will be loaded from CompiledMib files or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the mib will be loaded from compiled mib files and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isLoadMibsFromDatabase()"><!-- --></A><H3>
isLoadMibsFromDatabase</H3>
<PRE>
public boolean <B>isLoadMibsFromDatabase</B>()</PRE>
<DL>
<DD>To check whether the mib will be loaded from database or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the mib will be loaded from database and false otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="setSerializedMibFileName(java.lang.String)"><!-- --></A><H3>
setSerializedMibFileName</H3>
<PRE>
public void <B>setSerializedMibFileName</B>(java.lang.String&nbsp;serFileName)</PRE>
<DL>
<DD>Method defines the name of the Serialized MIB File.
            The Serialized file will be saved with this filename in 
            the directory from which the mib is loaded.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getIgnoreSpecificControlCodes()"><!-- --></A><H3>
getIgnoreSpecificControlCodes</H3>
<PRE>
public boolean <B>getIgnoreSpecificControlCodes</B>()</PRE>
<DL>
<DD>To get the value determining whether the new-line characters, 
 tabs and carriage returns are printed or their hex values.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true indicates that they are printed as they are 
                                 false indicates that their hex value is printed.</DL>
</DD>
</DL>
<HR>

<A NAME="setIgnoreSpecificControlCodes(boolean)"><!-- --></A><H3>
setIgnoreSpecificControlCodes</H3>
<PRE>
public void <B>setIgnoreSpecificControlCodes</B>(boolean&nbsp;specConCode)</PRE>
<DL>
<DD>To set the value determining whether the new-line characters, 
 tabs and carriage returns are printed or their hex values.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>specConCode</CODE> - true implies that they are printed as they are 
                                  false implies that their hex value is printed.</DL>
</DD>
</DL>
<HR>

<A NAME="getSerializedMibFileName()"><!-- --></A><H3>
getSerializedMibFileName</H3>
<PRE>
public java.lang.String <B>getSerializedMibFileName</B>()</PRE>
<DL>
<DD>Gets the name of the Serialized Mib file
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="initSecurityProvider()"><!-- --></A><H3>
initSecurityProvider</H3>
<PRE>
public void <B>initSecurityProvider</B>()
                          throws <A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></PRE>
<DL>
<DD>This method initiates the SecurityProvider by reading from the
 file securityProvider.confg . It will register all the security
 models specified in the securityProvider.config file.
 Before you make any requests using any of the beans, this method
 has to be called so that the security provider is initiated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/adventnet/snmp/snmp2/SnmpException.html">SnmpException</A></CODE> - if the file could not be found or if the
 security model could not be registered.</DL>
</DD>
</DL>
<HR>

<A NAME="getSecurityTable(int)"><!-- --></A><H3>
getSecurityTable</H3>
<PRE>
public java.lang.Object <B>getSecurityTable</B>(int&nbsp;secModel)</PRE>
<DL>
<DD>Returns the SecurityModelTable as an object for a given 
 security model.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SecurityModelTable as an object for a given 
 security model. Null if the SecurityModelTable is not created.</DL>
</DD>
</DL>
<HR>

<A NAME="isSupportedSecurityModel(int)"><!-- --></A><H3>
isSupportedSecurityModel</H3>
<PRE>
public boolean <B>isSupportedSecurityModel</B>(int&nbsp;secModel)</PRE>
<DL>
<DD>Specifies if a particular security model is supported or not.
 Returns true if the security model is supported. False otherwise.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>secModel</CODE> - The secuirty model number which needs to be checked 
 if it is supported.
<DT><B>Returns:</B><DD>true if the specified securitymodel is supported.
 False otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="isSetAutoInformResponse()"><!-- --></A><H3>
isSetAutoInformResponse</H3>
<PRE>
public boolean <B>isSetAutoInformResponse</B>()</PRE>
<DL>
<DD>High level API method to check if the automatic response flag for the 
 Inform Request is set. The default value is true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>boolean value of the Inform Request response flag.</DL>
</DD>
</DL>
<HR>

<A NAME="setAutoInformResponse(boolean)"><!-- --></A><H3>
setAutoInformResponse</H3>
<PRE>
public void <B>setAutoInformResponse</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>High-level API method to set the automatic response flag for the Inform 
 Request. If this flag is set to true, then the SNMP stack automatically 
 sends a Get Reponse message back to the sender. The default value is true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - boolean value of the flag to be set.</DL>
</DD>
</DL>
<HR>

<A NAME="setMibPath(java.lang.String)"><!-- --></A><H3>
setMibPath</H3>
<PRE>
public void <B>setMibPath</B>(java.lang.String&nbsp;path)</PRE>
<DL>
<DD>To set the search Path in which the loadMibModules() will search for the
  MIB modules. Multiple paths can be specified using the 
  pipe (|) as a separator.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMibPath()"><!-- --></A><H3>
getMibPath</H3>
<PRE>
public java.lang.String <B>getMibPath</B>()</PRE>
<DL>
<DD>To get the search Path in which the loadMibModules() will search for the
  MIB modules.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String containing the path which will be searched for the MIBs.
 			null if the searchPath has not been set previously.</DL>
</DD>
</DL>
<HR>

<A NAME="setMibOperations(com.adventnet.snmp.mibs.MibOperations)"><!-- --></A><H3>
setMibOperations</H3>
<PRE>
public void <B>setMibOperations</B>(<A HREF="../../../../com/adventnet/snmp/mibs/MibOperations.html">MibOperations</A>&nbsp;mibops)</PRE>
<DL>
<DD>Set the MibOperations.This can be used when the API user wants the
 MibBrowser to use the localinstance of MibOperations instead of
 the Static MibOperations shared by all the other beans.
 Note:This will over-write the existing MibOperations used by the
 other beans.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeToWait(int)"><!-- --></A><H3>
setTimeToWait</H3>
<PRE>
public void <B>setTimeToWait</B>(int&nbsp;waittime)</PRE>
<DL>
<DD>Sets the inter-packet delay time. This method can be used
 to set the time delay which is required between consecutive
 SNMP requests due to low bandwidth in a network.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTimeToWait()"><!-- --></A><H3>
getTimeToWait</H3>
<PRE>
public int <B>getTimeToWait</B>()</PRE>
<DL>
<DD>Gets the inter-packet delay time set on this SnmpSession object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The inter-packet delay time in milli seconds.</DL>
</DD>
</DL>
<HR>

<A NAME="setTimeoutInMilliSec(int)"><!-- --></A><H3>
setTimeoutInMilliSec</H3>
<PRE>
public void <B>setTimeoutInMilliSec</B>(int&nbsp;time)</PRE>
<DL>
<DD>Sets the timeout value which should be given in milliseconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>time</CODE> - The timeout value to be set in milliseconds.</DL>
</DD>
</DL>
<HR>

<A NAME="getTimeoutInMilliSec()"><!-- --></A><H3>
getTimeoutInMilliSec</H3>
<PRE>
public int <B>getTimeoutInMilliSec</B>()</PRE>
<DL>
<DD>Returns the timeout value in milliseconds.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the timeout value in milliseconds.</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalAddresses()"><!-- --></A><H3>
getLocalAddresses</H3>
<PRE>
public java.lang.String[] <B>getLocalAddresses</B>()</PRE>
<DL>
<DD>Returns the value of localAddress bound on the session instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The localAddress to which session is bound.</DL>
</DD>
</DL>
<HR>

<A NAME="setReceiveBufferSize(int)"><!-- --></A><H3>
setReceiveBufferSize</H3>
<PRE>
public void <B>setReceiveBufferSize</B>(int&nbsp;size)</PRE>
<DL>
<DD>Sets the buffer size of this SnmpServer.
 This method SHOULD be called only when jdk1.2
 and higher version is used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - the size of the buffer.</DL>
</DD>
</DL>
<HR>

<A NAME="setBroadcastFeatureEnable(boolean)"><!-- --></A><H3>
setBroadcastFeatureEnable</H3>
<PRE>
public void <B>setBroadcastFeatureEnable</B>(boolean&nbsp;bool)</PRE>
<DL>
<DD>The method can be used to enable/disable the broadcast feature
 available in the API. By default, the API has the
 broadcast feature enabled, and if the user wishes to disable
 this feature, he/she can do so by simply calling this
 method with "false" as value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bool</CODE> - the boolean value that is to enable/disable
 the broadcast feature in the API.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="isBroadcastFeatureEnable()"><!-- --></A><H3>
isBroadcastFeatureEnable</H3>
<PRE>
public boolean <B>isBroadcastFeatureEnable</B>()</PRE>
<DL>
<DD>The method returns whether the API has the broadcast feature
 enabled or not.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>returns a boolean, which tells whether the API
 currently has the broadcast feature enabled or not.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP2 ( Release 4.0.2 )</DD>
</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../com/adventnet/snmp/beans/SnmpServer.html#setBroadcastFeatureEnable(boolean)"><CODE>setBroadcastFeatureEnable(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setErrorFlagEnable(boolean)"><!-- --></A><H3>
setErrorFlagEnable</H3>
<PRE>
public void <B>setErrorFlagEnable</B>(boolean&nbsp;errflag)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setV3MsgMaxSize(int)"><!-- --></A><H3>
setV3MsgMaxSize</H3>
<PRE>
public void <B>setV3MsgMaxSize</B>(int&nbsp;size)</PRE>
<DL>
<DD>Sets the maximum size of Snmp3Message.
 This method is to set the maximum size of the Snmp3Message.
 If this is not set, then it will take the default size as 8192
 which is already set as default in Snmp3Message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - the maximum size of Snmp3Message.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="getV3MsgMaxSize()"><!-- --></A><H3>
getV3MsgMaxSize</H3>
<PRE>
public int <B>getV3MsgMaxSize</B>()</PRE>
<DL>
<DD>Get the maximum size of the Snmp3Message.
 This method is to get the maximum size of the Snmp3Message.
 It will return the msgMaxSize set using setV3MsgMaxSize().
 If not set using setV3MsgMaxSize, then it will fetch the default value set in Snmp3Message.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The max message size of the Snmp3Message.<DT><B>Since:</B><DD>AdventNet SNMP API 4 SP4 ( Release 4.0.4 )</DD>
</DD>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpResultObject.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/adventnet/snmp/beans/SnmpTable.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SnmpServer.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="../../../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
Copyright (c)AdventNet Inc., 1996-2006
</BODY>
</HTML>
